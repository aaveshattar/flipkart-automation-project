plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

def keystoreProperties = new Properties()
def keystoreFile = rootProject.file("keystore.properties")
if (keystoreFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystoreFile))
}

 
android {
    namespace 'com.automation.flipkart'
    compileSdk 34
 
    signingConfigs {
    release {
        storeFile file(keystoreProperties['storeFile'])
        storePassword keystoreProperties['storePassword']
        keyAlias keystoreProperties['keyAlias']
        keyPassword keystoreProperties['keyPassword']
    }
}
    defaultConfig {
        applicationId "com.automation.flipkart"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "2.0-ultra"
        
        multiDexEnabled true
        
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a'
        }
    }
 
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Ultra performance optimizations
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            zipAlignEnabled true
            
            buildConfigField "boolean", "ENABLE_LOGGING", "false"
        }
        
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
            buildConfigField "boolean", "ENABLE_LOGGING", "true"
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    
    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs += [
            "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-opt-in=kotlin.time.ExperimentalTime",
            "-Xjvm-default=all"
        ]
    }
    
    packagingOptions {
        resources {
            excludes += [
                'META-INF/DEPENDENCIES',
                'META-INF/LICENSE', 
                'META-INF/LICENSE.txt',
                'META-INF/NOTICE',
                'META-INF/NOTICE.txt',
                'META-INF/*.kotlin_module'
            ]
        }
    }
    
    // Android 13+ compatibility
    buildFeatures {
        buildConfig true
    }
}
 
dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    
    // Coroutines for ultra-fast async operations
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    
    // Performance and concurrency
    implementation 'androidx.concurrent:concurrent-futures-ktx:1.1.0'
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    
    // Android 13+ compatibility
    implementation 'androidx.core:core-splashscreen:1.0.1'
}