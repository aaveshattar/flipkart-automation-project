kotlin.reflect.KMutableProperty0$Setter
kotlinx.coroutines.scheduling.DefaultIoScheduler
kotlinx.coroutines.scheduling.NanoTimeSource
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda
kotlin.ULong$Companion
kotlinx.coroutines.selects.SelectClause1
kotlinx.coroutines.flow.StateFlowKt
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2
kotlinx.coroutines.flow.SharingConfig
kotlin.collections.EmptyIterator
kotlin.ranges.IntRange
kotlinx.coroutines.flow.SharedFlowImpl$collect$1
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1
kotlin.collections.ArraysKt
kotlin.collections.ArraysKt___ArraysKt$withIndex$2
kotlin.jvm.internal.ArrayIteratorsKt
kotlinx.coroutines.flow.internal.SafeCollectorKt
kotlin.sequences.SequencesKt___SequencesKt$minus$3
androidx.work.impl.background.systemalarm.RescheduleReceiver
kotlinx.coroutines.selects.SelectBuilderImpl
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1
kotlin.sequences.SequencesKt__SequencesKt$flatten$3
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1
kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow
kotlinx.coroutines.SchedulerTaskKt
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState
kotlin.text.StringsKt__IndentKt$getIndentFunction$1
kotlinx.coroutines.scheduling.WorkQueue
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1
kotlin.coroutines.ContinuationInterceptor$DefaultImpls
kotlin.collections.MapsKt
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1
kotlinx.coroutines.CoroutineExceptionHandlerKt
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1
kotlin.ranges.RangesKt___RangesKt
kotlinx.coroutines.Waiter
kotlin.ULongArray
kotlinx.coroutines.internal.Removed
kotlin.reflect.KFunction$DefaultImpls
kotlin.io.path.PathsKt
kotlin.jvm.internal.FloatSpreadBuilder
kotlinx.coroutines.flow.FlowKt__CountKt$count$3
kotlin.reflect.KMutableProperty
kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1
kotlin.collections.AbstractIterator
kotlin.collections.builders.MapBuilder$ValuesItr
kotlin.sequences.SequencesKt___SequencesKt$minus$2
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2
androidx.appcompat.widget.SearchView$SearchAutoComplete
kotlinx.coroutines.ChildHandle$DefaultImpls
kotlin.collections.AbstractMutableMap
kotlinx.coroutines.DisposeOnCompletion
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1
kotlin.collections.AbstractMutableCollection
kotlinx.coroutines.flow.SharedFlow
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1
kotlin.collections.IndexingIterable
kotlin.collections.AbstractMap$Companion
kotlinx.coroutines.channels.BroadcastChannel
kotlin.internal.UProgressionUtilKt
kotlin.time.DurationUnitKt__DurationUnitKt$WhenMappings
kotlin.ranges.URangesKt
kotlin.KotlinVersion
kotlinx.coroutines.internal.MainDispatchersKt
kotlinx.coroutines.sync.MutexImpl$onLock$2
kotlin.reflect.KProperty
kotlinx.coroutines.sync.SemaphoreSegment
kotlinx.coroutines.selects.TrySelectDetailedResult
kotlin.io.encoding.DecodeInputStream
androidx.appcompat.view.menu.ActionMenuItemView
kotlin.KotlinVersion$Companion
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImplKt
kotlin.sequences.SequencesKt__SequenceBuilderKt
kotlin.collections.jdk8.CollectionsJDK8Kt
kotlinx.coroutines.channels.TickerMode
kotlinx.coroutines.flow.CancellableFlowImpl
kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper
kotlin.jvm.internal.markers.KMutableMap
kotlin.reflect.TypeImpl
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher
kotlinx.coroutines.CancellableContinuationKt
kotlinx.coroutines.IncompleteStateBox
kotlinx.coroutines.flow.FlowKt__ContextKt
kotlin.reflect.ParameterizedTypeImpl
kotlin.io.LinesSequence$iterator$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1
kotlin.text.StringsKt___StringsKt$withIndex$1
kotlin.collections.MapWithDefault
kotlinx.coroutines.flow.ReadonlyStateFlow
kotlin.jvm.internal.LocalVariableReference
kotlinx.coroutines.CancellableContinuation
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1
kotlin.jvm.functions.Function1
kotlinx.coroutines.internal.ThreadSafeHeapNode
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1
kotlinx.coroutines.selects.WhileSelectKt
kotlinx.coroutines.selects.SelectClause2Impl
kotlin.jvm.functions.Function8
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3
kotlin.collections.ArrayDeque
kotlin.sequences.SequencesKt__SequencesKt
kotlin.ResultKt
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1
kotlinx.coroutines.CancelHandler
kotlin.sequences.SequencesKt___SequencesKt$sorted$1
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1
androidx.work.CoroutineWorker
kotlin.reflect.KClassesImplKt
kotlin.jvm.internal.Ref$CharRef
kotlinx.coroutines.stream.StreamFlow
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1
kotlinx.coroutines.flow.SharedFlowImpl$WhenMappings
kotlinx.coroutines.intrinsics.CancellableKt
kotlin.internal.OnlyInputTypes
kotlin.jvm.internal.LocalVariableReferencesKt
kotlinx.coroutines.sync.MutexImpl$onLock$1
kotlin.reflect.KMutableProperty1$Setter
kotlin.jvm.internal.EnumCompanionObject
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2
kotlinx.coroutines.CompletedContinuation
kotlin.sequences.SequencesKt___SequencesKt
kotlin.collections.ShortIterator
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4
kotlin.collections.builders.MapBuilder$KeysItr
kotlin.collections.FloatIterator
kotlinx.coroutines.DisposableHandle
kotlinx.coroutines.selects.SelectOldKt
kotlin.sequences.USequencesKt___USequencesKt
kotlin.TypeCastException
kotlin.coroutines.jvm.internal.RunSuspendKt
kotlin.io.path.DirectoryEntriesReader
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7
kotlin.jvm.internal.FunInterfaceConstructorReference
kotlin.collections.AbstractMap
kotlinx.coroutines.InvokeOnCompletion
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1
kotlin.sequences.TransformingSequence
kotlinx.coroutines.channels.BufferedChannel$onReceive$2
kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2
kotlin.text.MatcherMatchResult$groupValues$1
com.automation.flipkart.service.BootReceiver
kotlinx.coroutines.TimeoutCancellationException
kotlin.SafePublicationLazyImpl
kotlinx.coroutines.flow.MutableStateFlow
kotlin.ThrowsKt
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1
kotlin.io.ExposingBufferByteArrayOutputStream
kotlinx.coroutines.internal.LimitedDispatcher
kotlinx.coroutines.flow.StateFlowImpl
kotlin.enums.EnumEntriesKt
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1
kotlin.jvm.internal.IntCompanionObject
kotlin.ranges.IntProgression$Companion
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1
kotlin.collections.ArraysKt___ArraysKt$withIndex$5
kotlin.reflect.KCallable$DefaultImpls
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1
kotlinx.coroutines.EventLoop_commonKt
kotlinx.coroutines.CancelFutureOnCancel
kotlin.io.FileTreeWalk$WalkState
kotlin.enums.EnumEntriesSerializationProxy$Companion
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2
kotlin.jvm.internal.ClassReference$Companion
kotlin.text.StringsKt___StringsKt$windowedSequence$2
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1
kotlin.text.RegexKt$fromInt$1$1
kotlin.sequences.SequencesKt___SequencesKt$onEach$1
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1
kotlinx.coroutines.CoroutineStart$WhenMappings
kotlin.jvm.internal.MutablePropertyReference2
kotlin.text.MatchResult$Destructured
kotlin.sequences.SequencesKt___SequencesKt$minus$1
kotlin.text.CharsKt
kotlinx.coroutines.DispatcherExecutor
kotlin.text.SystemProperties
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1
kotlin.collections.ArraysKt___ArraysKt$withIndex$6
kotlinx.coroutines.CoroutineName
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1
kotlinx.coroutines.flow.StartedWhileSubscribed
kotlinx.coroutines.CopyableThreadContextElement$DefaultImpls
kotlinx.coroutines.ParentJob
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2
kotlinx.coroutines.flow.FlowCollector
kotlin.collections.builders.MapBuilderKeys
kotlin.collections.EmptySet
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1
kotlin.jvm.internal.ClassReference
kotlin.jvm.functions.Function9
kotlin.collections.AbstractIterator$WhenMappings
kotlinx.coroutines.ChildJob$DefaultImpls
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2
kotlinx.coroutines.channels.ConflatedBroadcastChannel
kotlinx.coroutines.flow.FlowKt__ZipKt
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion
kotlin.jvm.internal.Ref$IntRef
kotlin.SynchronizedLazyImpl
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3
kotlin.jvm.internal.LongCompanionObject
kotlinx.coroutines.debug.internal.ConcurrentWeakMap
kotlin.reflect.TypesJVMKt$WhenMappings
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1
kotlin.jvm.JvmDefaultWithCompatibility
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1
kotlinx.coroutines.RunnableKt
kotlin.collections.RingBuffer
kotlin.InitializedLazyImpl
kotlin.text.StringsKt__StringsKt$splitToSequence$1
kotlin.collections.SetsKt__SetsKt
kotlinx.coroutines.Job
kotlin.sequences.SequencesKt___SequencesKt$elementAt$1
kotlin.StandardKt__SynchronizedKt
kotlinx.coroutines.flow.FlowKt__ReduceKt
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$$inlined$sortedBy$1
kotlin.jdk7.AutoCloseableKt
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1
kotlin.sequences.FilteringSequence
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2
kotlin.enums.EnumEntriesList
androidx.work.OverwritingInputMerger
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2
kotlinx.coroutines.CompletionHandlerKt
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3
kotlin.collections.ArraysKt___ArraysKt$withIndex$4
kotlin.coroutines.CombinedContext$toString$1
kotlinx.coroutines.scheduling.GlobalQueue
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1
kotlin.random.Random$Default
kotlin.UShort
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2
kotlinx.coroutines.flow.internal.SafeCollector
kotlin.io.FileTreeWalk
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1
kotlin.DeepRecursiveFunction
kotlinx.coroutines.DeferredCoroutine
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5
kotlin.time.AbstractLongTimeSource$LongTimeMark
kotlinx.coroutines.sync.MutexImpl
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1
kotlin.collections.builders.MapBuilder$Companion
kotlinx.coroutines.flow.SharedFlowImpl
kotlinx.coroutines.flow.SharingStarted
kotlin.time.Duration
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1
kotlin.UByte
androidx.profileinstaller.ProfileInstallerInitializer
kotlinx.coroutines.internal.MainDispatcherFactory
kotlin.ranges.UIntProgressionIterator
kotlin.contracts.Returns
kotlin.io.ByteStreamsKt$iterator$1
kotlinx.coroutines.flow.FlowKt__CollectKt
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark
kotlin.jvm.JvmDefault
com.automation.flipkart.service.UltraFastForegroundService
kotlin.io.encoding.Base64
kotlin.time.TimeSource$Monotonic
kotlin.reflect.KVisibility
kotlin.LazyKt__LazyKt
kotlinx.coroutines.Empty
kotlin.Triple
kotlin.collections.ArraysKt___ArraysKt$withIndex$1
kotlin.coroutines.intrinsics.IntrinsicsKt
kotlin.concurrent.ThreadsKt
kotlin.reflect.KParameter$DefaultImpls
kotlinx.coroutines.future.ContinuationHandler
kotlin.OptionalExpectation
kotlinx.coroutines.channels.BufferedChannelKt
kotlinx.coroutines.JobSupport$onJoin$1
kotlin.internal.LowPriorityInOverloadResolution
kotlin.text.Charsets
kotlin.sequences.FlatteningSequence
kotlinx.coroutines.future.FutureKt$await$2$1
kotlinx.coroutines.flow.internal.ChannelFlowOperator
kotlin.ParameterName
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1
kotlin.collections.AbstractMutableSet
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1
kotlin.time.LongSaturatedMathKt
kotlin.sequences.USequencesKt
kotlin.reflect.KType$DefaultImpls
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls
kotlinx.coroutines.sync.Mutex$DefaultImpls
kotlinx.coroutines.selects.OnTimeoutKt
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1
kotlin.KotlinVersionCurrentValue
kotlin.jvm.internal.TypeParameterReference
kotlin.jvm.internal.FunctionReferenceImpl
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask
kotlin.CompareToKt
kotlin.NotImplementedError
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$4
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1
kotlin.coroutines.CombinedContext$Serialized$Companion
kotlin.jvm.functions.Function12
kotlin.coroutines.SafeContinuation
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6
kotlinx.coroutines.CompletionHandler_commonKt
kotlin.jvm.functions.Function0
kotlin.jvm.internal.ArrayIntIterator
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$WhenMappings
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1
kotlin.reflect.KMutableProperty1
kotlinx.coroutines.flow.FlowKt__ShareKt
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1
kotlin.collections.unsigned.UArraysKt
kotlinx.coroutines.CompletableDeferredKt
kotlin.PreconditionsKt
kotlinx.coroutines.android.HandlerDispatcher
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1
kotlinx.coroutines.EventLoop
androidx.core.app.CoreComponentFactory
kotlinx.coroutines.CancelFutureOnCompletion
kotlin.coroutines.CoroutineContext$Key
kotlin.DeepRecursiveKt
kotlin.jvm.internal.Lambda
kotlin.ranges.UIntRange$Companion
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver
kotlin.time.MonoTimeSourceKt
kotlinx.coroutines.RunnableKt$Runnable$1
kotlinx.coroutines.channels.ProducerScope$DefaultImpls
kotlin.jvm.internal.markers.KMutableMap$Entry
kotlin.io.LineReader
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3
kotlinx.coroutines.internal.LockFreeTaskQueueKt
kotlin.time.DurationUnitKt
kotlin.comparisons.ComparisonsKt___ComparisonsKt
kotlinx.coroutines.internal.DispatchedContinuationKt
kotlin.sequences.SubSequence$iterator$1
kotlin.NoWhenBranchMatchedException
kotlinx.coroutines.sync.SemaphoreImpl$tryResumeNextFromQueue$createNewSegment$1
kotlin.jvm.internal.MutablePropertyReference2Impl
kotlin.io.encoding.ExperimentalEncodingApi
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1
kotlin.experimental.ExperimentalObjCName
kotlin.ranges.CharProgression$Companion
kotlin.ranges.CharRange$Companion
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1
kotlinx.coroutines.channels.BroadcastKt$broadcast$2
kotlin.jvm.internal.Ref$ShortRef
kotlin.coroutines.Continuation
kotlinx.coroutines.channels.ClosedSendChannelException
kotlin.jvm.internal.PropertyReference0
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$3
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1
kotlin.text.RegexKt
kotlin.reflect.KClasses
kotlinx.coroutines.ThreadContextElement$DefaultImpls
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1
kotlin.text.MatcherMatchResult
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1
kotlinx.coroutines.CompletableJob$DefaultImpls
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$1
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2
kotlin.NumbersKt__NumbersKt
kotlinx.coroutines.CoroutineScope
kotlin.sequences.SequencesKt___SequencesJvmKt
kotlinx.coroutines.internal.LockFreeLinkedListNode
kotlinx.coroutines.selects.SelectClause
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion
kotlin.experimental.ExperimentalObjCRefinement
kotlin.jvm.internal.KTypeBase
kotlin.ranges.ComparableOpenEndRange
androidx.appcompat.widget.ActionBarOverlayLayout
kotlin.reflect.KProperty$Getter
kotlin.jvm.internal.markers.KMutableIterable
androidx.versionedparcelable.CustomVersionedParcelable
kotlin.internal.PlatformDependent
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1
kotlinx.coroutines.channels.BroadcastKt
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1
kotlin.math.MathKt__MathHKt
kotlinx.coroutines.channels.BufferedChannel$receiveCatching$1
kotlin.enums.EnumEntries
androidx.appcompat.widget.ActionBarContextView
kotlinx.coroutines.ThreadPoolDispatcherKt__MultithreadedDispatchers_commonKt
kotlinx.coroutines.android.AndroidDispatcherFactory
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1
androidx.work.impl.workers.ConstraintTrackingWorker
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2
kotlin.io.path.OnErrorResult
kotlinx.coroutines.flow.FlowKt__CountKt$count$2
kotlinx.coroutines.DisposableFutureHandle
kotlinx.coroutines.flow.CancellableFlow
kotlin.UByteArray
kotlin.jvm.internal.MutablePropertyReference0Impl
kotlin.collections.LongIterator
kotlin.ranges.IntProgressionIterator
kotlin.Lazy
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1
kotlinx.coroutines.selects.SelectInstanceInternal
kotlinx.coroutines.selects.SelectClause0Impl
kotlin.collections.CollectionsKt__IteratorsJVMKt
kotlin.io.path.ExperimentalPathApi
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1
kotlin.SubclassOptInRequired
kotlin.jvm.internal.TypeReference
kotlin.jvm.internal.markers.KMutableCollection
kotlin.ranges.CharRange
kotlin.math.MathKt
kotlin.collections.CharIterator
kotlinx.coroutines.flow.Flow
com.automation.flipkart.service.UltraFastAccessibilityService
kotlin.js.ExperimentalJsExport
kotlin.enums.EnumEntriesSerializationProxy
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1
kotlin.jvm.internal.markers.KMutableListIterator
kotlin.jvm.functions.Function17
kotlinx.coroutines.flow.internal.ChannelFlowMerge
kotlin.jvm.internal.TypeParameterReference$Companion
kotlin.UByte$Companion
kotlin.sequences.IndexingSequence$iterator$1
kotlin.internal.RequireKotlin
kotlin.time.TimedValue
kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls
kotlin.contracts.ExperimentalContracts
kotlin.coroutines.CoroutineContext$Element$DefaultImpls
kotlin.collections.CollectionsKt__IteratorsKt
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1
kotlinx.coroutines.internal.AtomicKt
kotlin.contracts.SimpleEffect
kotlin.text.jdk8.RegexExtensionsJDK8Kt
kotlin.properties.Delegates
kotlin.time.AbstractLongTimeSource
kotlinx.coroutines.flow.SharedFlowKt
kotlin.reflect.KProperty1$Getter
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1
kotlin.collections.AbstractCollection
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1
kotlin.jvm.internal.Intrinsics$Kotlin
kotlin.reflect.TypesJVMKt$typeToString$unwrap$1
kotlin.random.PlatformRandom
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1
kotlinx.coroutines.sync.MutexKt
kotlin.random.Random$Default$Serialized
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1
kotlinx.coroutines.internal.LocalAtomicsKt
kotlin.text.CharsetsKt
kotlin.Result$Failure
kotlin.math.Constants
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1
kotlin.reflect.KProperty$Accessor
kotlin.collections.SetsKt
kotlin.reflect.KProperty$DefaultImpls
kotlinx.coroutines.flow.internal.CombineKt
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1
kotlinx.coroutines.scheduling.CoroutineScheduler
kotlin.collections.builders.SerializedMap
kotlinx.coroutines.channels.BroadcastCoroutine
kotlinx.coroutines.AwaitKt$joinAll$3
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$3
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$1
kotlinx.coroutines.flow.ChannelFlowBuilder
kotlin.sequences.TakeWhileSequence$iterator$1
kotlin.text.StringsKt___StringsKt
kotlin.collections.builders.MapBuilder$EntriesItr
kotlin.KotlinNothingValueException
kotlin.sequences.SequencesKt___SequencesKt$distinct$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1
kotlinx.coroutines.channels.LazyActorCoroutine$onSend$1
kotlin.collections.ReversedListReadOnly
kotlin.random.RandomKt
kotlinx.coroutines.flow.internal.ChildCancelledException
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberBuffered
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2
kotlin.internal.AccessibleLateinitPropertyLiteral
kotlin.jvm.JvmField
kotlinx.coroutines.channels.BufferedChannel$onSend$1
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3
kotlin.CharCodeJVMKt
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1
kotlin.collections.MapAccessorsKt
kotlin.text.StringsKt__IndentKt$getIndentFunction$2
kotlin.collections.AbstractList$Companion
kotlinx.coroutines.flow.FlowKt__LimitKt
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1
kotlin.contracts.ContractBuilder$DefaultImpls
androidx.appcompat.widget.ContentFrameLayout
kotlin.jvm.internal.TypeIntrinsics
kotlin.PublishedApi
androidx.appcompat.view.menu.ExpandedMenuView
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1
kotlin.jvm.functions.Function11
kotlin.StandardKt__StandardKt
kotlin.ranges.OpenEndRange
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1
kotlinx.coroutines.flow.ReadonlySharedFlow
kotlinx.coroutines.internal.ScopeCoroutine
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1
kotlin.coroutines.CoroutineContext$Element
kotlin.coroutines.AbstractCoroutineContextKey
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1
kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings
kotlin.collections.EmptyMap
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2
kotlin.coroutines.CoroutineContextImplKt
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1
kotlin.ContextFunctionTypeParams
kotlin.PreconditionsKt__AssertionsJVMKt
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt
kotlin.random.XorWowRandom
kotlin.comparisons.NaturalOrderComparator
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumes$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1
kotlinx.coroutines.debug.internal.AgentInstallationType
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1
kotlin.collections.builders.SerializedCollection
kotlinx.coroutines.flow.SubscribedFlowCollector
kotlin.RequiresOptIn
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7
kotlin.jvm.internal.CallableReference$NoReceiver
kotlin.text.MatchResult
kotlin.jvm.JvmRecord
kotlinx.coroutines.flow.internal.SendingCollector
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1
kotlin.concurrent.LocksKt
kotlin.NumbersKt__NumbersJVMKt
kotlin.coroutines.CoroutineContext$plus$1
kotlin.PropertyReferenceDelegatesKt
kotlin.sequences.IndexingSequence
kotlin.collections.GroupingKt__GroupingJVMKt
kotlin.collections.MapsKt__MapsJVMKt
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1
kotlinx.coroutines.BlockingCoroutine
kotlinx.coroutines.internal.LockFreeTaskQueueCore
kotlinx.coroutines.ThreadState
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1
kotlin.NumbersKt__FloorDivModKt
kotlin.CharCodeKt
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1
kotlin.text.StringsKt__IndentKt$prependIndent$1
kotlinx.coroutines.flow.SafeFlow
kotlin.text.StringsKt__StringNumberConversionsKt
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1
kotlin.sequences.ConstrainedOnceSequence
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1
kotlinx.coroutines.flow.internal.FlowExceptions_commonKt
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1
kotlin.io.path.PathRelativizer
kotlinx.coroutines.internal.InlineList
kotlin.NumbersKt
kotlinx.coroutines.JobSupport$SelectOnAwaitCompletionHandler
kotlin.text.Regex$findAll$1
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1
androidx.work.impl.workers.DiagnosticsWorker
kotlinx.coroutines.ChildHandleNode
kotlin.sequences.TransformingIndexedSequence$iterator$1
kotlin.collections.CollectionsKt___CollectionsKt
kotlin.time.TimeSource
kotlin.Deprecated
kotlin.jvm.JvmInline
kotlin.streams.jdk8.StreamsKt
kotlinx.coroutines.selects.OnTimeout
kotlinx.coroutines.flow.StartedEagerly
kotlin.UShortArray
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2
kotlin.text.Typography
kotlin.OptIn
kotlin.collections.AbstractList$ListIteratorImpl
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1
kotlin.reflect.KClass$DefaultImpls
kotlin.sequences.DropSequence$iterator$1
kotlinx.coroutines.JobSupport
kotlinx.coroutines.UndispatchedMarker
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1
kotlin.coroutines.jvm.internal.RunSuspend
kotlin.system.ProcessKt
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1
kotlin.ranges.CharProgression
kotlin.reflect.KProperty2
kotlin.jvm.JvmWildcard
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2
kotlinx.coroutines.internal.OnUndeliveredElementKt
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1
kotlinx.coroutines.FlowPreview
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2
kotlin.SuspendKt
kotlin.annotation.Retention
kotlinx.coroutines.ThreadPoolDispatcherKt
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1
kotlinx.coroutines.channels.ProduceKt
kotlin.jvm.internal.ShortCompanionObject
kotlin.UIntArrayKt
kotlinx.coroutines.flow.internal.FusibleFlow
kotlin.io.path.ExceptionsCollector
kotlin.jvm.internal.ByteSpreadBuilder
kotlin.text.StringsKt__RegexExtensionsKt
kotlin.collections.builders.SerializedCollection$Companion
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1
kotlin.contracts.ReturnsNotNull
kotlinx.coroutines.CoroutineDispatcher$Key$1
kotlin.concurrent.ThreadsKt$thread$thread$1
kotlin.annotation.Repeatable
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt
kotlinx.coroutines.channels.BufferedChannel$SendBroadcast
kotlin.time.AbstractDoubleTimeSource
kotlin.text.CharCategory
kotlin.collections.UCollectionsKt___UCollectionsKt
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2$WhenMappings
kotlin.annotation.Target
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$2
kotlinx.coroutines.internal.ThreadLocalKey
kotlin.reflect.WildcardTypeImpl
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1
kotlin.collections.builders.SetBuilder
kotlin.sequences.DropTakeSequence
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2
kotlin.collections.builders.ListBuilder
kotlinx.coroutines.flow.internal.NoOpContinuation
kotlinx.coroutines.CoroutineExceptionHandler$Key
kotlin.ranges.OpenEndDoubleRange
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$2
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp
kotlin.ranges.UIntRange
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1
kotlin.collections.MapsKt__MapWithDefaultKt
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1
kotlin.collections.GroupingKt
kotlin.text.CharCategory$Companion
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2
kotlin.time.DurationUnitKt__DurationUnitJvmKt$WhenMappings
kotlinx.coroutines.channels.ReceiveCatching
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1
kotlinx.coroutines.ExperimentalCoroutinesApi
kotlinx.coroutines.scheduling.Task
kotlinx.coroutines.internal.LockFreeLinkedListHead
kotlin.ranges.LongRange$Companion
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1
kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1
androidx.work.impl.WorkDatabase
kotlin.collections.ArraysUtilJVM
kotlin.ReplaceWith
kotlinx.coroutines.flow.ThrowingCollector
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2
kotlin.jvm.functions.Function20
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8
kotlin.io.AccessDeniedException
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1
kotlin.collections.MapWithDefaultImpl
kotlin.internal.HidesMembers
kotlinx.coroutines.ThreadContextElement
kotlinx.coroutines.channels.ChannelIterator$next0$1
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1
kotlin.math.UMathKt
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1
kotlin.time.DurationKt
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1
kotlin.coroutines.jvm.internal.SuspendLambda
kotlinx.coroutines.AwaitAll
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher
kotlin.jvm.JvmSuppressWildcards
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1
kotlin.text.StringsKt___StringsKt$groupingBy$1
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1
kotlin.jvm.functions.Function10
kotlin.jvm.internal.MutablePropertyReference
kotlin.random.PlatformRandom$Companion
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1
kotlinx.coroutines.channels.BufferedChannel
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1
kotlinx.coroutines.JobSupport$onAwaitInternal$2
kotlin.ExceptionsKt
androidx.core.app.RemoteActionCompat
kotlinx.coroutines.LazyStandaloneCoroutine
kotlinx.coroutines.InterruptibleKt$runInterruptible$2
kotlin.annotation.AnnotationRetention
kotlin.comparisons.ReversedComparator
kotlinx.coroutines.scheduling.WorkQueueKt
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1
kotlinx.coroutines.internal.OpDescriptor
kotlinx.coroutines.channels.Channel$Factory
kotlin.jvm.internal.Intrinsics
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1
kotlinx.coroutines.flow.FlowKt__MergeKt
kotlin.io.path.FileVisitorBuilder
kotlinx.coroutines.future.CompletableFutureCoroutine
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2
kotlin.collections.MutableMapWithDefaultImpl
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest
kotlin.io.FilesKt__UtilsKt$copyRecursively$2
kotlinx.coroutines.selects.SelectClause1Impl
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1
kotlin.concurrent.VolatileKt
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1
kotlin.text.DelimitedRangesSequence$iterator$1
kotlinx.coroutines.CoroutineId
kotlin.sequences.TakeWhileSequence
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2
kotlin.jvm.internal.markers.KMutableList
kotlinx.coroutines.flow.FlowKt__CountKt$count$4
kotlinx.coroutines.JobSupport$onAwaitInternal$1
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker
kotlin.io.path.PathWalkOption
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3
androidx.appcompat.widget.FitWindowsLinearLayout
kotlin.jvm.internal.ArrayFloatIterator
kotlin.reflect.GenericArrayTypeImpl
kotlin.io.path.PathsKt__PathReadWriteKt
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1
kotlinx.coroutines.ExecutorCoroutineDispatcher
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1
kotlin.coroutines.jvm.internal.DebugMetadata
kotlin.ranges.ClosedRange$DefaultImpls
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$2
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl
kotlin.ranges.OpenEndFloatRange
kotlin.reflect.KClassifier
kotlinx.coroutines.internal.OnDemandAllocatingPool
kotlinx.coroutines.channels.ClosedReceiveChannelException
kotlinx.coroutines.ObsoleteCoroutinesApi
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1
kotlin.collections.UCollectionsKt
kotlinx.coroutines.flow.FlowKt__CollectionKt
kotlin.jvm.functions.Function21
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl
kotlin.text.StringsKt__RegexExtensionsJVMKt
androidx.appcompat.widget.AlertDialogLayout
kotlin.jvm.internal.FloatCompanionObject
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1
kotlin.jvm.internal.markers.KMappedMarker
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2
kotlin.system.TimingKt
kotlinx.coroutines.flow.EmptyFlow
kotlin.collections.RingBuffer$iterator$1
kotlin.collections.ArraysKt___ArraysJvmKt
kotlin.coroutines.jvm.internal.Boxing
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1
android.support.v4.app.RemoteActionCompatParcelizer
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1
kotlin.ExperimentalSubclassOptIn
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1
kotlin.coroutines.jvm.internal.DebugMetadataKt
kotlin.collections.GroupingKt__GroupingKt
kotlin.ranges.ULongRange
kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1
kotlinx.coroutines.channels.Channel
kotlin.collections.AbstractList$SubList
kotlinx.coroutines.DebugKt
androidx.room.MultiInstanceInvalidationService
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1
kotlin.reflect.KParameter$Kind
kotlin.ExtensionFunctionType
kotlinx.coroutines.internal.LocalAtomics_commonKt
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver
kotlinx.coroutines.flow.LintKt$retry$1
kotlinx.coroutines.JobCancellingNode
kotlinx.coroutines.future.FutureKt$asCompletableFuture$2
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1
kotlinx.coroutines.ResumeOnCompletion
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1
kotlinx.coroutines.flow.SubscribedSharedFlow
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1
kotlin.ranges.ClosedFloatRange
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2
kotlinx.coroutines.flow.SharingStartedKt
kotlin.jvm.internal.PropertyReference0Impl
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask
kotlin.sequences.DistinctSequence
kotlin.jvm.internal.RepeatableContainer
kotlinx.coroutines.android.HandlerContext
kotlinx.coroutines.flow.internal.DownstreamExceptionContext
kotlin.jvm.JvmPackageName
kotlin.collections.AbstractMap$toString$1
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2
kotlin.time.AdjustedTimeMark
kotlinx.coroutines.flow.CallbackFlowBuilder
kotlinx.coroutines.CompletableDeferred$DefaultImpls
kotlin.reflect.WildcardTypeImpl$Companion
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2
kotlin.text.Regex$special$$inlined$fromInt$1
kotlinx.coroutines.JobNode
kotlinx.coroutines.ExceptionsKt
kotlinx.coroutines.selects.SelectImplementation$doSelectSuspend$1
androidx.appcompat.widget.FitWindowsFrameLayout
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7
kotlinx.coroutines.scheduling.DefaultScheduler
kotlin.contracts.InvocationKind
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1
kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1
kotlin.io.FileAlreadyExistsException
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1
kotlinx.coroutines.flow.internal.AbstractSharedFlow
kotlin.time.TimeMark$DefaultImpls
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2
kotlin.WasExperimental
kotlin.jvm.functions.Function19
kotlinx.coroutines.channels.BroadcastKt$broadcast$1
kotlinx.coroutines.internal.ProbesSupportKt
kotlin.jvm.internal.MutablePropertyReference1
kotlin.UNINITIALIZED_VALUE
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy
kotlinx.coroutines.NotCompleted
kotlin.ranges.ClosedRange
kotlinx.coroutines.internal.ThreadLocalElement
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3
kotlinx.coroutines.flow.internal.StackFrameContinuation
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3
kotlinx.coroutines.CoroutinesInternalError
kotlin.reflect.KTypeProjection$WhenMappings
kotlin.jvm.JvmDefaultWithoutCompatibility
kotlin.jvm.internal.SerializedIr
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2
kotlinx.coroutines.internal.FastServiceLoaderKt
kotlin.sequences.TransformingIndexedSequence
kotlin.random.URandomKt
androidx.work.impl.diagnostics.DiagnosticsReceiver
kotlinx.coroutines.channels.SendChannel$DefaultImpls
kotlin.text.StringsKt__AppendableKt
androidx.appcompat.widget.ButtonBarLayout
androidx.core.widget.NestedScrollView
kotlin.annotation.AnnotationTarget
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$2
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1
kotlin.text.StringsKt__StringNumberConversionsJVMKt
kotlinx.coroutines.channels.Channel$DefaultImpls
kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1
kotlinx.coroutines.internal.LockFreeTaskQueue
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3
kotlinx.coroutines.selects.SelectKt
kotlinx.coroutines.AwaitKt$joinAll$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3
kotlin.contracts.ContractBuilder
kotlin.collections.MutableMapWithDefault
kotlin.Unit
kotlinx.coroutines.flow.internal.ChannelFlow
kotlinx.coroutines.Job$Key
kotlin.internal.NoInfer
kotlinx.coroutines.CoroutineDispatcher$Key
kotlin.text.FlagEnum
kotlinx.coroutines.Active
kotlin.collections.AbstractMap$keys$1$iterator$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3
kotlin.LazyKt
kotlinx.coroutines.channels.ChannelResult$Closed
kotlinx.coroutines.debug.internal.DebugProbesImplKt
kotlin.jvm.functions.Function2
kotlin.time.DurationUnit
kotlin.internal.IntrinsicConstEvaluation
kotlin.collections.unsigned.UArraysKt___UArraysKt
kotlin.properties.NotNullVar
kotlin.text.CharsKt__CharKt
kotlin.comparisons.ComparisonsKt
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2
kotlinx.coroutines.CancelledContinuation
kotlin.reflect.TypeVariableImpl
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1
kotlin.contracts.CallsInPlace
kotlin.io.ConstantsKt
kotlin.ranges.ULongProgressionIterator
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2
kotlinx.coroutines.CompletionStateKt
kotlinx.coroutines.internal.ResizableAtomicArray
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1
kotlin.jvm.optionals.OptionalsKt
kotlinx.coroutines.DelayWithTimeoutDiagnostics
kotlin.Suppress
kotlin.time.TimeSource$WithComparableMarks
kotlinx.coroutines.InternalCoroutinesApi
kotlin.text.StringsKt___StringsKt$windowed$1
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2
kotlin.io.FilesKt__UtilsKt$copyRecursively$1
kotlinx.coroutines.JobSupport$Finishing
kotlin.random.AbstractPlatformRandom
kotlin.ULongKt
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1
kotlin.text.Regex$Companion
kotlinx.coroutines.JobKt__FutureKt
kotlin.collections.CollectionsKt__MutableCollectionsKt
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl
kotlin.io.path.CopyActionContext
kotlinx.coroutines.debug.internal.Marked
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8
androidx.appcompat.widget.ActionBarContainer
kotlinx.coroutines.CompletionHandlerException
kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState
kotlin.jvm.JvmStatic
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1
androidx.startup.InitializationProvider
androidx.appcompat.widget.DialogTitle
kotlin.ranges.ClosedFloatingPointRange
kotlin.collections.CollectionsKt__ReversedViewsKt
kotlin.io.encoding.StreamEncodingKt__Base64IOStreamKt
kotlin.reflect.KTypeProjection
kotlin.text.MatchNamedGroupCollection
kotlin.text.Regex
kotlin.collections.MapsKt___MapsKt
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2
kotlinx.coroutines.flow.internal.FlowCoroutineKt
kotlin.coroutines.ContinuationInterceptor
kotlinx.coroutines.CopyableThrowable
kotlin.text.MatchGroupCollection
kotlin.io.FileTreeWalk$FileTreeWalkIterator
kotlin.jvm.internal.unsafe.MonitorKt
kotlinx.coroutines.selects.SelectImplementation$ClauseData
kotlin.jvm.PurelyImplements
kotlin.NumbersKt__BigIntegersKt
kotlinx.coroutines.channels.BroadcastChannelImpl
kotlin.math.MathKt__MathJVMKt
kotlin.UShortKt
kotlin.text.MatchGroup
kotlin.StandardKt
kotlin.sequences.DropWhileSequence$iterator$1
kotlinx.coroutines.internal.WeakMapCtorCache
kotlin.jvm.internal.PropertyReference2Impl
kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2
kotlin.collections.AbstractCollection$toString$1
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1
kotlin.io.path.PathTreeWalk
kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper
kotlin.io.encoding.Base64Kt
kotlinx.coroutines.channels.ProducerCoroutine
kotlinx.coroutines.channels.ChannelKt
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6
androidx.work.impl.workers.CombineContinuationsWorker
kotlin.time.ExperimentalTime
kotlinx.coroutines.CopyableThreadContextElement
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1
kotlin.jvm.internal.DoubleSpreadBuilder
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1
kotlin.collections.ArrayDeque$Companion
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1
kotlin.PreconditionsKt__PreconditionsKt
kotlin.SafePublicationLazyImpl$Companion
kotlinx.coroutines.channels.ConflatedBufferedChannel
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1
kotlin.jvm.internal.StringCompanionObject
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5
kotlin.sequences.SequencesKt__SequencesKt$flatten$2
kotlin.jvm.internal.ArrayShortIterator
kotlin.jvm.internal.MutableLocalVariableReference
kotlinx.coroutines.scheduling.TaskImpl
kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1
kotlin.contracts.Effect
kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory
kotlin.coroutines.EmptyCoroutineContext
kotlinx.coroutines.sync.MutexKt$withLock$1
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator
androidx.appcompat.widget.ActionMenuView
kotlin.internal.jdk8.JDK8PlatformImplementations
kotlin.collections.SlidingWindowKt
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1$1
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1
kotlinx.coroutines.internal.FastServiceLoader
kotlin.internal.ContractsDsl
kotlin.collections.SlidingWindowKt$windowedIterator$1
kotlin.collections.ArraysKt___ArraysKt$withIndex$8
kotlin.UNumbersKt
kotlin.coroutines.CoroutineContext
kotlin.random.jdk8.PlatformThreadLocalRandom
kotlin.io.path.PathTreeWalkKt
kotlinx.coroutines.sync.SemaphoreImpl$addAcquireToQueue$createNewSegment$1
kotlin.collections.builders.ListBuilderKt
kotlin.reflect.KMutableProperty2$Setter
kotlinx.coroutines.BuildersKt__BuildersKt
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1
kotlinx.coroutines.AbstractCoroutine
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1
kotlin.LateinitKt
kotlinx.coroutines.internal.ThreadSafeHeap
kotlin.properties.ReadWriteProperty
kotlin.jvm.internal.ArrayByteIterator
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1
kotlin.jvm.internal.CallableReference
kotlin.reflect.KProperty1
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1
kotlinx.coroutines.android.HandlerDispatcherKt
kotlin.io.FilesKt
kotlin.text.DelimitedRangesSequence
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt
kotlinx.coroutines.internal.CoroutineExceptionHandlerImpl_commonKt
kotlin.io.path.LinkFollowing
kotlin.sequences.TakeSequence$iterator$1
androidx.emoji2.text.EmojiCompatInitializer
kotlinx.coroutines.NonCancellable
kotlin.jvm.internal.FunctionBase
kotlin.ranges.ClosedDoubleRange
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1
kotlin.time.ComparableTimeMark
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1
kotlin.internal.DynamicExtension
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion
kotlin.jvm.functions.Function16
kotlin.collections.EmptyList
kotlin.random.FallbackThreadLocalRandom
kotlin.coroutines.CombinedContext$Serialized
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1
kotlinx.coroutines.channels.LazyBroadcastCoroutine
kotlinx.coroutines.EventLoopImplBase$DelayedTask
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1
kotlin.reflect.KProperty0
kotlinx.coroutines.intrinsics.UndispatchedKt
kotlin.UByteArray$Iterator
kotlin.collections.TypeAliasesKt
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1
kotlin.text.ScreenFloatValueRegEx
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3
kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1
kotlinx.coroutines.stream.StreamKt
kotlinx.coroutines.internal.StackTraceRecoveryKt
kotlin.collections.UArraySortingKt
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1
kotlin.jvm.JvmSerializableLambda
kotlinx.coroutines.flow.StateFlow
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1
kotlin.io.path.DefaultCopyActionContext
kotlinx.coroutines.Incomplete
kotlin.properties.PropertyDelegateProvider
kotlin.properties.Delegates$vetoable$1
kotlinx.coroutines.internal.ThreadLocalKt
kotlin.collections.builders.MapBuilderEntries
kotlin.reflect.KCallable
kotlin.jvm.functions.Function13
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1
kotlinx.coroutines.flow.MutableSharedFlow
kotlin.UInt
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2
kotlin.collections.ArraysKt___ArraysKt$withIndex$7
kotlin.text.CharDirectionality$Companion
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1
kotlin.internal.jdk7.JDK7PlatformImplementations
kotlinx.coroutines.flow.StateFlowImpl$collect$1
kotlin.jvm.internal.ClassBasedDeclarationContainer
kotlin.jvm.internal.PropertyReference2
kotlinx.coroutines.JobSupportKt
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt
kotlinx.coroutines.DelayKt
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1
kotlinx.coroutines.Deferred$DefaultImpls
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1
kotlin.collections.AbstractList$IteratorImpl
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2
kotlin.jvm.KotlinReflectionNotSupportedError
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6
kotlin.text.StringsKt___StringsJvmKt
kotlin.coroutines.jvm.internal.ModuleNameRetriever
kotlin.ranges.CharProgressionIterator
kotlinx.coroutines.internal.SynchronizedKt
kotlinx.coroutines.flow.internal.AbstractSharedFlowKt
kotlin.time.DurationUnitKt__DurationUnitKt
kotlinx.coroutines.internal.AtomicOp
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3
kotlinx.coroutines.sync.SemaphoreImpl
kotlin.coroutines.CombinedContext
kotlin.enums.EnumEntriesKt$enumEntries$1
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher
kotlin.io.path.PathNode
kotlin.ranges.ULongProgression
kotlinx.coroutines.CoroutineExceptionHandler
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2
kotlinx.coroutines.flow.internal.ChannelFlowKt
kotlin.internal.RequireKotlin$Container
kotlinx.coroutines.flow.internal.AbortFlowException
kotlin.io.SerializableKt
kotlin.collections.CollectionsKt___CollectionsJvmKt
androidx.work.impl.foreground.SystemForegroundService
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl
kotlin.io.FilesKt__FileTreeWalkKt
kotlinx.coroutines.flow.StartedLazily$command$1$1
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1
kotlin.reflect.KTypeParameter
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1
kotlin.coroutines.jvm.internal.DebugProbesKt
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt
kotlin.io.TerminateException
kotlin.sequences.MergingSequence
kotlinx.coroutines.Deferred
kotlin.collections.builders.AbstractMapBuilderEntrySet
kotlinx.coroutines.DisposeOnCancel
kotlinx.coroutines.channels.TickerChannelsKt
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1
androidx.appcompat.widget.Toolbar
kotlinx.coroutines.DelayWithTimeoutDiagnostics$DefaultImpls
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2
kotlinx.coroutines.selects.UnbiasedSelectImplementation
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2
kotlinx.coroutines.internal.ConcurrentKt
kotlinx.coroutines.flow.SharedFlowSlot
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1
kotlinx.coroutines.channels.ChannelsKt
kotlinx.coroutines.debug.internal.DebuggerInfo
kotlinx.coroutines.flow.internal.NopCollector
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1
kotlinx.coroutines.flow.FlowKt__ErrorsKt
kotlinx.coroutines.BuildersKt__Builders_commonKt
kotlin.jvm.internal.BooleanCompanionObject
kotlin.RequiresOptIn$Level
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1
kotlin.time.DurationJvmKt
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner
kotlin.OverloadResolutionByLambdaReturnType
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1
kotlin.sequences.SequencesKt___SequencesKt$onEachIndexed$1
kotlin.text.StringsKt___StringsKt$windowedSequence$1
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1
kotlin.UShortArray$Iterator
kotlinx.coroutines.TimeoutCoroutine
kotlinx.coroutines.internal.LimitedDispatcherKt
kotlin.collections.CollectionsKt__CollectionsKt
kotlin.ULongArray$Iterator
kotlin.jvm.JvmMultifileClass
kotlin.Function
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2
kotlin.ranges.IntProgression
kotlin.jvm.functions.Function3
kotlin.reflect.KClass
kotlin.sequences.SequencesKt__SequencesKt$flatten$1
kotlin.Metadata
kotlin.TypeAliasesKt
kotlin.internal.ProgressionUtilKt
kotlin.jvm.functions.Function18
kotlin.jvm.internal.ShortSpreadBuilder
kotlin.sequences.Sequence
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1
kotlin.text.MatchResult$DefaultImpls
kotlin.ranges.ULongProgression$Companion
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1
kotlin.jvm.JvmOverloads
kotlin.random.PlatformRandomKt
kotlin.collections.MapsKt___MapsJvmKt
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1
kotlinx.coroutines.GlobalScope
kotlinx.coroutines.AwaitKt
kotlin.text.StringsKt__StringsKt$splitToSequence$2
kotlin.time.MeasureTimeKt
kotlinx.coroutines.YieldContext$Key
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1
kotlinx.coroutines.flow.DistinctFlowImpl
kotlinx.coroutines.internal.ThreadContextKt$findOne$1
kotlin.coroutines.AbstractCoroutineContextElement
kotlinx.coroutines.channels.WaiterEB
kotlin.jvm.internal.ArrayBooleanIterator
kotlin.collections.ArraysKt___ArraysKt
kotlin.collections.builders.MapBuilder$EntryRef
kotlin.DeprecationLevel
kotlin.sequences.EmptySequence
kotlinx.coroutines.channels.ChannelIterator$DefaultImpls
kotlin.comparisons.ReverseOrderComparator
kotlinx.coroutines.NonDisposableHandle
kotlin.jvm.internal.CollectionToArray
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1
kotlinx.coroutines.Unconfined
kotlin.coroutines.CoroutineContext$DefaultImpls
kotlinx.coroutines.CoroutineContextKt$foldCopies$1
kotlin.jvm.internal.TypeReference$WhenMappings
kotlin.sequences.DropWhileSequence
androidx.work.WorkManagerInitializer
kotlin.ArrayIntrinsicsKt
kotlin.reflect.KDeclarationContainer
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1
kotlin.jvm.Strictfp
kotlin.io.FilesKt__UtilsKt
kotlin.internal.PlatformImplementations$ReflectThrowable
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1
kotlinx.coroutines.channels.ProduceKt$awaitClose$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1
kotlin.UShort$Companion
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1
kotlinx.coroutines.ChildHandle
kotlin.jvm.internal.PrimitiveSpreadBuilder
kotlinx.coroutines.selects.SelectClause2
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$tryResume$token$1
kotlinx.coroutines.internal.ThreadContextKt$countAll$1
kotlin.collections.CollectionsKt__IterablesKt
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1
kotlin.io.CloseableKt
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1
androidx.work.Worker
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$resume$2
kotlin.UnsafeVariance
kotlin.io.TextStreamsKt$readLines$1
kotlinx.coroutines.debug.AgentPremain$DebugProbesTransformer
kotlin.concurrent.TimersKt$timerTask$1
kotlin.io.TextStreamsKt
kotlin.collections.CollectionsKt__CollectionsJVMKt
kotlin.text.Regex$findAll$2
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion
kotlin.jvm.Throws
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1
kotlin.DeepRecursiveScopeImpl
kotlinx.coroutines.internal.SystemPropsKt
kotlin.io.encoding.StreamEncodingKt
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2
kotlinx.coroutines.DispatchedCoroutine
kotlinx.coroutines.channels.SendChannel
kotlin.io.ByteStreamsKt
kotlin.sequences.GeneratorSequence
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2
kotlinx.coroutines.DebugStringsKt
kotlinx.coroutines.flow.FlowKt__ChannelsKt
kotlin.UByteKt
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9
kotlin.UInt$Companion
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1
kotlinx.coroutines.channels.ProducerScope
kotlin.experimental.BitwiseOperationsKt
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1
kotlinx.coroutines.internal.DispatchedContinuation
kotlin.coroutines.intrinsics.CoroutineSingletons
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8
kotlinx.coroutines.DispatchedTaskKt
kotlinx.coroutines.channels.BroadcastChannelKt
kotlinx.coroutines.DelayKt$awaitCancellation$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1
kotlinx.coroutines.channels.BufferedChannel$onSend$2
androidx.annotation.Keep
kotlin.sequences.SequenceBuilderIterator
kotlin.text.StringsKt___StringsKt$chunkedSequence$1
kotlinx.coroutines.CancellableContinuation$DefaultImpls
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4
kotlinx.coroutines.flow.FlowKt__EmittersKt
kotlinx.coroutines.flow.internal.UndispatchedContextCollector
kotlin.DeprecatedSinceKotlin
kotlin.BuilderInference
kotlinx.coroutines.selects.SelectImplementation
kotlin.jvm.internal.Ref$ObjectRef
kotlin.jvm.internal.markers.KMutableSet
kotlin.comparisons.UComparisonsKt___UComparisonsKt
kotlin.random.KotlinRandom
kotlin.io.encoding.EncodeOutputStream
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge
kotlinx.coroutines.channels.ReceiveChannel
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1
kotlinx.coroutines.CoroutineScopeKt
kotlin.jvm.internal.ReflectionFactory
kotlin.collections.AbstractSet
kotlin.jvm.internal.CharCompanionObject
kotlinx.coroutines.channels.ChannelCoroutine
kotlin.time.TimeSource$Monotonic$ValueTimeMark
kotlin.UByteArrayKt
kotlin.collections.SetsKt___SetsKt
kotlinx.coroutines.selects.SelectImplementation$processResultAndInvokeBlockRecoveringException$1
kotlinx.coroutines.channels.ProduceKt$awaitClose$2
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1
kotlinx.coroutines.flow.internal.FlowCoroutine
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1
kotlin.io.ReadAfterEOFException
kotlin.jvm.internal.DefaultConstructorMarker
kotlin.jvm.internal.IntSpreadBuilder
kotlinx.coroutines.CancelHandlerBase
kotlin.UnsafeLazyImpl
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2
kotlin.text.StringsKt__StringBuilderJVMKt
kotlinx.coroutines.YieldContext
kotlinx.coroutines.channels.BufferedChannel$receiveImpl$1
kotlin.reflect.KProperty0$Getter
kotlinx.coroutines.channels.ChannelResult
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1
kotlin.reflect.KMutableProperty$Setter
kotlin.io.FilePathComponents
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1
androidx.work.WorkerParameters
kotlin.contracts.ConditionalEffect
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1
kotlin.reflect.KParameter
androidx.appcompat.widget.SearchView
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$$inlined$sortedBy$1
kotlin.collections.AbstractMap$keys$1
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4
kotlin.random.KotlinRandom$Companion
kotlin.collections.ReversedList
kotlin.time.ComparableTimeMark$DefaultImpls
kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1
kotlin.sequences.DistinctIterator
kotlin.io.ConsoleKt
kotlinx.coroutines.SupervisorJobImpl
kotlin.jvm.jdk8.JvmRepeatableKt
kotlinx.coroutines.time.TimeKt
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner
kotlinx.coroutines.JobSupport$ChildCompletion
kotlin.reflect.KVariance
kotlinx.coroutines.debug.internal.DebugProbesImpl$startWeakRefCleanerThread$1
kotlinx.coroutines.internal.LimitedDispatcher$Worker
androidx.work.impl.WorkDatabase_Impl
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2
kotlin.ranges.UIntProgression$Companion
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1
kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1
kotlinx.coroutines.CoroutineId$Key
kotlin.text.CharsKt__CharJVMKt
kotlin.properties.ReadOnlyProperty
kotlinx.coroutines.internal.ExceptionsConstructorKt
kotlin.ExceptionsKt__ExceptionsKt
kotlinx.coroutines.channels.ChannelIterator
kotlin.sequences.SequencesKt
kotlin.internal.PureReifiable
kotlin.collections.builders.MapBuilder
kotlin.jvm.internal.Ref$FloatRef
kotlin.internal.InlineOnly
kotlinx.coroutines.channels.BufferedChannel$onReceive$1
kotlinx.coroutines.EventLoopKt
kotlin.coroutines.jvm.internal.ContinuationImpl
kotlinx.coroutines.channels.ActorScope$DefaultImpls
kotlin.ranges.ClosedFloatingPointRange$DefaultImpls
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1
kotlin.random.XorWowRandom$Companion
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$1
kotlinx.coroutines.selects.OnTimeout$register$$inlined$Runnable$1
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1
kotlinx.coroutines.ChildJob
kotlin.io.ExceptionsKt
kotlinx.coroutines.flow.FlowKt__CountKt
kotlin.text.StringsKt
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1
kotlin.jvm.internal.InlineMarker
kotlin.collections.ArraysKt__ArraysJVMKt
kotlinx.coroutines.internal.Symbol
kotlin.sequences.GeneratorSequence$iterator$1
kotlin.ranges.UIntProgression
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2
kotlin.io.path.PathTreeWalk$dfsIterator$1
kotlinx.coroutines.flow.AbstractFlow
kotlin.annotation.MustBeDocumented
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3$WhenMappings
kotlinx.coroutines.channels.LazyActorCoroutine
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1
kotlinx.coroutines.DefaultExecutorKt
kotlin.ExperimentalUnsignedTypes
kotlinx.coroutines.CoroutineContextKt
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2
kotlin.jvm.functions.Function4
kotlin.UIntArray
kotlinx.coroutines.JobSupport$SelectOnJoinCompletionHandler
kotlinx.coroutines.debug.internal.HashedWeakRef
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4
kotlinx.coroutines.flow.FlowKt__TransformKt
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1
kotlinx.coroutines.flow.FlowKt__MigrationKt
kotlinx.coroutines.flow.ChannelAsFlow
kotlin.jvm.functions.Function6
kotlinx.coroutines.future.FutureKt
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1
kotlinx.coroutines.internal.ExceptionSuccessfullyProcessed
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1
kotlin.sequences.SequencesKt___SequencesKt$flatMap$2
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10
kotlin.time.TimeSource$Companion
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1
kotlin.collections.AbstractMap$values$1
kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1
androidx.appcompat.view.menu.ListMenuItemView
kotlin.coroutines.jvm.internal.SuspendFunction
kotlin.collections.builders.MapBuilderValues
kotlinx.coroutines.debug.internal.StackTraceFrame
kotlin.jvm.internal.PropertyReference
kotlinx.coroutines.JobKt
kotlinx.coroutines.JobImpl
kotlinx.coroutines.flow.internal.SafeCollector_commonKt
kotlin.collections.CollectionsKt
kotlin.collections.SetsKt__SetsJVMKt
kotlin.collections.AbstractMutableList
kotlin.collections.MovingSubList
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1
kotlinx.coroutines.BuildersKt
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1
androidx.work.ArrayCreatingInputMerger
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1
kotlin.jvm.Volatile
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1
kotlin.properties.Delegates$observable$1
kotlin.io.path.CopyActionResult
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1
kotlin.collections.ArrayAsCollection
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet
kotlin.internal.PlatformImplementationsKt
kotlinx.coroutines.internal.ThreadContextKt$updateState$1
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1
kotlin.jvm.functions.FunctionN
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1
kotlin.io.FileTreeWalk$DirectoryState
kotlin.jvm.internal.Ref
kotlinx.coroutines.internal.CtorCache
kotlin.jvm.JvmSynthetic
kotlinx.coroutines.ResumeUndispatchedRunnable
kotlinx.coroutines.ThreadContextElementKt
kotlin.TuplesKt
androidx.core.graphics.drawable.IconCompatParcelizer
kotlin.collections.BooleanIterator
kotlinx.coroutines.CoroutineName$Key
androidx.profileinstaller.ProfileInstallReceiver
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy
kotlin.jvm.internal.markers.KMutableIterator
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1
androidx.versionedparcelable.ParcelImpl
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1
kotlinx.coroutines.InterruptibleKt
kotlin.sequences.TakeSequence
kotlin.reflect.KMutableProperty2
kotlin.jvm.JvmClassMappingKt
kotlinx.coroutines.flow.LintKt
kotlinx.coroutines.internal.MainDispatcherFactory$DefaultImpls
androidx.lifecycle.ProcessLifecycleInitializer
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1
kotlinx.coroutines.CompletedWithCancellation
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt
androidx.work.impl.background.systemjob.SystemJobService
kotlin.Result$Companion
kotlin.time.MonotonicTimeSource
kotlin.time.TestTimeSource
kotlin.random.FallbackThreadLocalRandom$implStorage$1
kotlin.reflect.TypeOfKt
kotlin.collections.MapsKt__MapsKt
kotlin.coroutines.CombinedContext$writeReplace$1
kotlinx.coroutines.future.FutureKt$asDeferred$2
kotlinx.coroutines.internal.ClassValueCtorCache
kotlinx.coroutines.debug.AgentPremain
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2
kotlinx.coroutines.CoroutineStart
kotlin.collections.State
kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1
kotlinx.coroutines.debug.internal.DebugProbesImpl
kotlin.Pair
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5
kotlinx.coroutines.debug.internal.DebugProbesKt
kotlin.text._OneToManyTitlecaseMappingsKt
kotlinx.coroutines.internal.ConcurrentLinkedListNode
kotlinx.coroutines.internal.MainDispatcherLoader
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4
kotlin.sequences.TransformingSequence$iterator$1
kotlinx.coroutines.sync.Mutex
kotlin.coroutines.jvm.internal.CoroutineStackFrame
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1
kotlin.jvm.internal.ArrayIterator
kotlin.jvm.internal.DoubleCompanionObject
kotlin.collections.ByteIterator
kotlin.io.FilesKt__FileReadWriteKt$readLines$1
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3
kotlinx.coroutines.InactiveNodeList
kotlinx.coroutines.selects.SelectUnbiasedKt
kotlinx.coroutines.scheduling.TaskContext
kotlinx.coroutines.DefaultExecutor
kotlin.jvm.internal.MagicApiIntrinsics
kotlinx.coroutines.flow.internal.FusibleFlow$DefaultImpls
kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt
kotlinx.coroutines.JobCancellationException
kotlin.coroutines.ContinuationKt$Continuation$1
kotlinx.coroutines.sync.SemaphoreKt
kotlin.random.Random
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6
kotlin.ExperimentalStdlibApi
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1
kotlinx.coroutines.CancellableContinuationImpl
kotlin.Metadata$DefaultImpls
kotlinx.coroutines.scheduling.CoroutineSchedulerKt
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2
kotlin.jvm.functions.Function15
kotlinx.coroutines.channels.ActorScope
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1
kotlinx.coroutines.JobKt__JobKt
kotlinx.coroutines.flow.SharedFlowImpl$Emitter
kotlinx.coroutines.channels.ActorCoroutine
kotlinx.coroutines.internal.Synchronized_commonKt
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1
kotlin.reflect.KAnnotatedElement
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1
kotlin.jvm.internal.BooleanSpreadBuilder
kotlinx.coroutines.scheduling.SchedulerTimeSource
kotlin.internal.RequireKotlinVersionKind
kotlin.collections.builders.ListBuilder$Itr
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1
kotlin.collections.builders.MapBuilder$Itr
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1
kotlin.SinceKotlin
kotlin.sequences.SequencesKt___SequencesKt$minus$4
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2
kotlin.text.CharDirectionality$Companion$directionalityMap$2
kotlin.reflect.KTypeProjection$Companion
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1
kotlin.UninitializedPropertyAccessException
kotlin.jvm.internal.ArrayLongIterator
kotlin.experimental.ExperimentalTypeInference
kotlin.jvm.internal.FunctionImpl
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1
kotlin.jvm.JvmName
kotlin.jvm.internal.PropertyReference1Impl
kotlinx.coroutines.internal.Segment
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1
kotlinx.coroutines.internal.ContextScope
kotlin.text.CharDirectionality
kotlin.DeepRecursiveScope
kotlin.NumbersKt__BigDecimalsKt
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1
kotlinx.coroutines.debug.internal.DebugCoroutineInfo
kotlin.io.FilesKt__FileReadWriteKt
kotlin.jvm.internal.FunctionAdapter
kotlinx.coroutines.InvokeOnCancel
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$2
kotlin.io.LinesSequence
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3
kotlinx.coroutines.CompletableDeferred
kotlinx.coroutines.InvokeOnCancelling
kotlinx.coroutines.flow.FlowKt__DelayKt
kotlin.UIntArray$Iterator
kotlin.time.DurationUnitKt__DurationUnitJvmKt
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1
kotlin.ranges.LongRange
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2
kotlinx.coroutines.JobSupport$AwaitContinuation
kotlinx.coroutines.CompletedExceptionally
kotlin.jvm.internal.SpreadBuilder
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1
kotlin.HashCodeKt
kotlin.jvm.internal.PackageReference
android.support.v4.graphics.drawable.IconCompatParcelizer
kotlin.collections.AbstractMap$values$1$iterator$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1
kotlinx.coroutines.Delay$DefaultImpls
kotlin.LazyThreadSafetyMode
kotlinx.coroutines.flow.FlowKt__BuildersKt
kotlinx.coroutines.selects.SelectInstance
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2
androidx.work.impl.background.systemalarm.SystemAlarmService
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1
kotlin.time.Duration$Companion
kotlin.jvm.internal.Ref$ByteRef
kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings
kotlin.ranges.LongProgressionIterator
kotlin.text.Regex$Serialized
kotlinx.coroutines.channels.ChannelResult$Failed
kotlinx.coroutines.MainCoroutineDispatcher
kotlin.ranges.ComparableRange
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1
kotlinx.coroutines.channels.BufferedChannel$sendImpl$1
kotlin.reflect.KFunction
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3
kotlinx.coroutines.internal.LockFreeLinkedListKt
kotlinx.coroutines.flow.SharingStarted$Companion
kotlin.jvm.internal.ArrayCharIterator
kotlin.coroutines.jvm.internal.BaseContinuationImpl
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$3
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2
kotlin.text.StringsKt__IndentKt
kotlinx.coroutines.ParentJob$DefaultImpls
kotlin.ranges.RangesKt
kotlin.io.path.PathsKt__PathUtilsKt
androidx.appcompat.widget.ActivityChooserView$InnerLayout
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1
kotlinx.coroutines.scheduling.TasksKt
kotlinx.coroutines.flow.StartedLazily
kotlin._Assertions
kotlinx.coroutines.SupervisorCoroutine
kotlin.ranges.LongProgression
kotlinx.coroutines.YieldKt
kotlin.jvm.functions.Function14
kotlinx.coroutines.EventLoopImplBase
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1
kotlinx.coroutines.selects.SelectBuilder
kotlinx.coroutines.Job$DefaultImpls
kotlinx.coroutines.sync.Semaphore
kotlinx.coroutines.android.AndroidExceptionPreHandler
kotlinx.coroutines.AwaitAll$AwaitAllNode
kotlin.KotlinNullPointerException
kotlinx.coroutines.CompletionHandlerBase
kotlin.io.path.FileVisitorImpl
kotlin.sequences.MergingSequence$iterator$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1
kotlin.sequences.SequencesKt___SequencesKt$zip$1
kotlin.jvm.internal.ArrayDoubleIterator
kotlin.collections.IndexingIterator
androidx.appcompat.app.AlertController$RecycleListView
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$keys$1
kotlin.DslMarker
kotlin.LazyKt__LazyJVMKt$WhenMappings
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1
kotlin.ranges.ULongRange$Companion
kotlin.sequences.FilteringSequence$iterator$1
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core
kotlinx.coroutines.BlockingEventLoop
kotlinx.coroutines.StandaloneCoroutine
kotlinx.coroutines.flow.AbstractFlow$collect$1
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1
kotlin.coroutines.ContinuationInterceptor$Key
kotlin.jvm.internal.Ref$BooleanRef
kotlin.UnsignedKt
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2
kotlin.io.path.PathTreeWalk$bfsIterator$1
kotlinx.coroutines.CompletableJob
kotlinx.coroutines.TimeoutKt
kotlinx.coroutines.AbstractTimeSourceKt
kotlin.sequences.DropSequence
kotlin.coroutines.cancellation.CancellationExceptionKt
kotlin.concurrent.TimersKt
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1
kotlinx.coroutines.CompletableDeferredImpl
kotlin.jvm.internal.Ref$DoubleRef
kotlin.ExperimentalMultiplatform
kotlin.text.MatcherMatchResult$groups$1
kotlin.comparisons.ComparisonsKt__ComparisonsKt
kotlin.coroutines.RestrictsSuspension
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4
kotlinx.coroutines.flow.SharingCommand
kotlin.text.Regex$splitToSequence$1
kotlinx.coroutines.flow.StateFlowSlot
kotlinx.coroutines.DispatchedTask
kotlinx.coroutines.flow.FlowKt__CountKt$count$1
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1
kotlinx.coroutines.selects.SelectClause0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1
kotlinx.coroutines.scheduling.LimitingDispatcher
kotlin.collections.ArraysKt__ArraysKt
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1
kotlin.jvm.internal.CharSpreadBuilder
kotlinx.coroutines.Delay
kotlin.jvm.functions.Function22
kotlin.collections.DoubleIterator
kotlin.reflect.KMutableProperty0
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1
kotlinx.coroutines.future.FutureKt$asCompletableFuture$1
kotlin.sequences.SequenceScope
kotlinx.coroutines.flow.FlowKt__DistinctKt
kotlinx.coroutines.LazyDeferredCoroutine
kotlin.jvm.internal.LongSpreadBuilder
kotlin.collections.builders.SerializedMap$Companion
kotlinx.coroutines.flow.StartedLazily$command$1
kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9
kotlin.ULongArrayKt
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$2
kotlinx.coroutines.channels.ChannelResult$Companion
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1
kotlin.LazyKt__LazyJVMKt
kotlinx.coroutines.DelicateCoroutinesApi
kotlin.io.OnErrorAction
kotlin.jvm.internal.MutablePropertyReference0
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl
kotlin.jvm.internal.Ref$LongRef
kotlinx.coroutines.CancellableContinuationImplKt
kotlinx.coroutines.CoroutineDispatcher
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1
kotlin.coroutines.ContinuationKt
kotlinx.coroutines.internal.ThreadState
kotlin.ranges.IntRange$Companion
kotlin.io.path.FileVisitorBuilderImpl
kotlinx.coroutines.selects.SelectBuilder$DefaultImpls
kotlinx.coroutines.channels.BufferOverflow
kotlinx.coroutines.internal.InternalAnnotationsKt
kotlinx.coroutines.SupervisorKt
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3
kotlin.internal.Exact
kotlin.io.FileSystemException
kotlin.collections.IndexedValue
kotlin.jvm.internal.FunctionReference
kotlin.ranges.URangesKt___URangesKt
kotlin.reflect.KType
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1
kotlin.coroutines.jvm.internal.CompletedContinuation
kotlinx.coroutines.internal.SegmentOrClosed
kotlin.sequences.SubSequence
kotlin.io.FilesKt__FilePathComponentsKt
kotlin.jvm.internal.PropertyReference1
kotlin.contracts.ContractBuilderKt
kotlin.jvm.internal.Reflection
kotlin.sequences.SequencesKt__SequencesJVMKt
kotlin.jvm.functions.Function7
kotlin.collections.AbstractList
kotlinx.coroutines.JobSupport$children$1
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue
kotlin.jvm.internal.ByteCompanionObject
kotlinx.coroutines.EventLoopImplPlatform
kotlin.text.RegexOption
kotlinx.coroutines.stream.StreamFlow$collect$1
kotlinx.coroutines.AbstractTimeSource
kotlin.time.jdk8.DurationConversionsJDK8Kt
kotlinx.coroutines.internal.ThreadContextKt
kotlin.comparisons.UComparisonsKt
kotlin.io.encoding.Base64JVMKt
kotlin.coroutines.SafeContinuation$Companion
kotlin.jvm.internal.TypeReference$asString$args$1
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState
kotlin.sequences.FlatteningSequence$iterator$1
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1
kotlin.internal.PlatformImplementations
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt
kotlin.text.StringsKt__StringBuilderKt
androidx.appcompat.widget.ViewStubCompat
kotlinx.coroutines.flow.FlowKt
kotlin.ranges.RangesKt__RangesKt
kotlinx.coroutines.scheduling.TaskContextImpl
kotlin.collections.ArraysKt___ArraysKt$withIndex$9
kotlin.text.StringsKt__StringsKt$iterator$1
kotlin.jvm.internal.TypeReference$Companion
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1
kotlinx.coroutines.flow.internal.NullSurrogateKt
kotlinx.coroutines.scheduling.UnlimitedIoScheduler
kotlin.text.MatcherMatchResult$groups$1$iterator$1
kotlin.text.StringsKt__StringsKt
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2
kotlinx.coroutines.ExecutorsKt
kotlinx.coroutines.selects.OnTimeout$selectClause$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2
kotlin.ranges.LongProgression$Companion
kotlin.jvm.Transient
kotlin.collections.IntIterator
kotlin.jvm.internal.ArrayIteratorKt
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1
kotlin.collections.AbstractSet$Companion
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1
kotlin.text.Regex$Serialized$Companion
kotlinx.coroutines.ThreadLocalEventLoop
kotlin.reflect.TypesJVMKt
kotlinx.coroutines.UndispatchedCoroutine
kotlin.UIntKt
kotlinx.coroutines.internal.ClassValueCtorCache$cache$1
kotlin.io.NoSuchFileException
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1
kotlin.ULong
kotlin.properties.ObservableProperty
kotlinx.coroutines.NodeList
kotlin.io.encoding.Base64$Default
kotlinx.coroutines.internal.UndeliveredElementException
kotlin.Result
kotlin.ranges.OpenEndRange$DefaultImpls
kotlin.jvm.internal.MutablePropertyReference1Impl
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1
kotlinx.coroutines.internal.OnDemandAllocatingPoolKt
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberConflated
kotlin.jvm.internal.SourceDebugExtension
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2
kotlinx.coroutines.Dispatchers
kotlinx.coroutines.channels.ChannelSegment
kotlin.UShortArrayKt
kotlin.text.UStringsKt
kotlinx.coroutines.internal.ConcurrentLinkedListKt
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1
kotlinx.coroutines.channels.ActorKt
kotlin.text.StringsKt__StringsJVMKt
kotlin.jvm.functions.Function5
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1
kotlin.text.TypeAliasesKt
androidx.core.graphics.drawable.IconCompat
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1
kotlin.collections.Grouping
kotlin.jvm.Synchronized
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1
kotlin.time.TimeMark
kotlin.collections.ArraysKt___ArraysKt$withIndex$3
kotlin.jvm.internal.AdaptedFunctionReference
kotlin.reflect.KProperty2$Getter
kotlinx.coroutines.DispatchersKt
kotlinx.coroutines.ResumeAwaitOnCompletion
kotlin.io.FileWalkDirection
androidx.core.app.RemoteActionCompatParcelizer
kotlinx.coroutines.ChildContinuation
kotlinx.coroutines.internal.DiagnosticCoroutineContextException
kotlinx.coroutines.ThreadPoolDispatcherKt__ThreadPoolDispatcherKt
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention[] $VALUES
kotlinx.coroutines.internal.FastServiceLoader: kotlinx.coroutines.internal.FastServiceLoader INSTANCE
kotlinx.coroutines.scheduling.LimitingDispatcher: java.util.concurrent.ConcurrentLinkedQueue queue
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object L$1
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: kotlin.jvm.functions.Function3 $block
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: kotlin.jvm.functions.Function2 $predicate
kotlin.collections.builders.MapBuilder: int TOMBSTONE
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: kotlinx.coroutines.flow.FlowCollector $downstream
kotlin.sequences.SequencesKt___SequencesKt$minus$1: java.lang.Object $element
kotlin.io.encoding.DecodeInputStream: int byteBufferEndIndex
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicReferenceArray array
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2: java.nio.file.Path $this_copyToRecursively
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: int label
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: kotlinx.coroutines.channels.ReceiveChannel $this_zip
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.lang.Thread lastObservedThread
kotlin.sequences.SequencesKt___SequencesKt$onEach$1: kotlin.jvm.functions.Function1 $action
kotlin.collections.State: kotlin.collections.State[] $VALUES
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean ignoreCoroutinesWithEmptyContext
kotlinx.coroutines.AwaitKt$joinAll$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlin.coroutines.SafeContinuation: kotlin.coroutines.SafeContinuation$Companion Companion
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.channels.ChannelSegment NULL_SEGMENT
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumes$1: kotlinx.coroutines.channels.ReceiveChannel $this_consumes
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: kotlin.sequences.Sequence $source
kotlin.comparisons.ReversedComparator: java.util.Comparator comparator
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1: kotlinx.coroutines.channels.BufferedChannel this$0
kotlin.io.LinesSequence: java.io.BufferedReader reader
kotlin.random.XorWowRandom: int w
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: java.lang.Throwable e
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object L$1
kotlinx.coroutines.channels.BufferedChannel: kotlin.jvm.functions.Function1 onUndeliveredElement
kotlin.jvm.internal.FloatCompanionObject: int SIZE_BYTES
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: java.lang.Object L$1
kotlin.Triple: java.lang.Object third
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: kotlinx.coroutines.internal.Symbol REHASH
kotlin.sequences.FilteringSequence: boolean sendWhen
kotlinx.coroutines.flow.LintKt$retry$1: int label
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: kotlinx.coroutines.flow.internal.ChannelFlow this$0
kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings: int[] $EnumSwitchMapping$0
kotlin.text.Typography: char pound
kotlin.io.path.FileVisitorImpl: kotlin.jvm.functions.Function2 onVisitFileFailed
kotlin.ULong: long MIN_VALUE
kotlin.text.RegexOption: kotlin.text.RegexOption UNIX_LINES
kotlin.text.Typography: char doublePrime
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object result
kotlinx.coroutines.channels.BufferedChannel$receiveCatching$1: int label
kotlin.io.encoding.Base64: kotlin.io.encoding.Base64 UrlSafe
kotlinx.coroutines.internal.Removed: kotlinx.coroutines.internal.LockFreeLinkedListNode ref
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion: java.lang.Integer sdkVersion
kotlin.jvm.internal.FloatCompanionObject: int SIZE_BITS
kotlin.time.AdjustedTimeMark: kotlin.time.TimeMark mark
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1: kotlin.jvm.functions.Function0 $nextFunction
kotlin.collections.RingBuffer$iterator$1: kotlin.collections.RingBuffer this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: int label
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: kotlinx.coroutines.channels.ReceiveChannel $second
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl info
kotlinx.coroutines.JobSupport: java.lang.Object _state
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: kotlinx.coroutines.flow.Flow $upstream
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: java.lang.Object L$2
kotlin.sequences.IndexingSequence$iterator$1: java.util.Iterator iterator
kotlin.collections.ArrayDeque: int maxArraySize
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper installations$kotlinx$VolatileWrapper
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: int label
kotlin.UIntArray: int[] storage
kotlin.math.Constants: double LN2
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons UNDECIDED
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function4 $predicate$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $predicate$inlined
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10 this$0
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberConflated: kotlinx.coroutines.channels.BroadcastChannelImpl this$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2: kotlin.jvm.functions.Function1 $this_asFlow$inlined
kotlin.collections.builders.MapBuilderKeys: kotlin.collections.builders.MapBuilder backing
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_EMBEDDING
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: kotlin.jvm.functions.Function1 $timeoutMillisSelector
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: int label
kotlinx.coroutines.channels.BufferedChannel: int capacity
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object L$1
kotlin.io.ByteStreamsKt$iterator$1: boolean finished
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1 this$0
kotlin.sequences.SequencesKt__SequencesKt$flatten$2: kotlin.sequences.SequencesKt__SequencesKt$flatten$2 INSTANCE
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object result
kotlinx.coroutines.BuildersKt__Builders_commonKt: int RESUMED
kotlinx.coroutines.channels.BufferedChannel$SendBroadcast: kotlinx.coroutines.CancellableContinuationImpl $$delegate_0
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: java.lang.Object key
kotlin.text.Typography: char rightSingleQuote
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1 this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: java.lang.Object result
kotlin.io.path.PathTreeWalk$dfsIterator$1: int label
kotlin.enums.EnumEntriesSerializationProxy: kotlin.enums.EnumEntriesSerializationProxy$Companion Companion
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.scheduling.CoroutineScheduler: int MAX_SUPPORTED_POOL_SIZE
kotlinx.coroutines.CompletedExceptionally: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _handled$FU
kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements
kotlinx.coroutines.flow.FlowKt__CountKt$count$2: kotlin.jvm.internal.Ref$IntRef $i
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: int label
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: kotlinx.coroutines.channels.TickerMode $mode
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: kotlinx.coroutines.internal.ThreadContextKt$countAll$1 INSTANCE
kotlin.collections.RingBuffer: int size
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.StackTraceElement ARTIFICIAL_FRAME
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.lang.Thread weakRefCleanerThread
kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.util.List clausesToRegister
kotlin.jvm.internal.TypeParameterReference: kotlin.jvm.internal.TypeParameterReference$Companion Companion
kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper: java.util.concurrent.atomic.AtomicIntegerFieldUpdater installations$FU
kotlinx.coroutines.debug.internal.HashedWeakRef: int hash
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest this$0
kotlinx.coroutines.AwaitKt$joinAll$1: int label
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.channels.ChannelSegment: java.util.concurrent.atomic.AtomicReferenceArray data
kotlin.time.AbstractLongTimeSource: kotlin.time.DurationUnit unit
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: int label
kotlin.DeepRecursiveFunction: kotlin.jvm.functions.Function3 block
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: int label
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: java.lang.Object L$1
kotlin.collections.ReversedListReadOnly: java.util.List delegate
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind[] $VALUES
kotlin.jvm.internal.TypeReference: kotlin.jvm.internal.TypeReference$Companion Companion
kotlinx.coroutines.DebugKt: java.lang.String STACKTRACE_RECOVERY_PROPERTY_NAME
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$2
kotlin.collections.State: kotlin.collections.State NotReady
kotlin.io.path.PathWalkOption: kotlin.io.path.PathWalkOption[] $VALUES
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: java.lang.Object owner
kotlin.ranges.LongProgression: kotlin.ranges.LongProgression$Companion Companion
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: java.lang.Object $element
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1: kotlinx.coroutines.channels.ProducerScope $$this$produce
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlin.jvm.internal.Ref$ObjectRef $previousFlow
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: int label
kotlin.jvm.internal.AdaptedFunctionReference: java.lang.String signature
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState: boolean rootVisited
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: int label
kotlin.UByteArray$Iterator: byte[] array
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler coroutineScheduler
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1: kotlin.jvm.functions.Function1 $keySelector
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted$Companion $$INSTANCE
kotlin.text.StringsKt__StringsKt$iterator$1: int index
kotlin.coroutines.ContinuationInterceptor$Key: kotlin.coroutines.ContinuationInterceptor$Key $$INSTANCE
kotlin.text.Regex$Serialized: kotlin.text.Regex$Serialized$Companion Companion
kotlin.collections.builders.ListBuilder: java.lang.Object[] array
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: kotlin.coroutines.Continuation cont
kotlinx.coroutines.flow.SharingConfig: kotlinx.coroutines.flow.Flow upstream
kotlin.collections.MovingSubList: int fromIndex
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.CoroutineDispatcher dispatcher
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: int I$0
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult REREGISTER
kotlin.ranges.LongProgression: long first
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: java.lang.Object result
kotlinx.coroutines.CompletedExceptionally: int _handled
kotlinx.coroutines.future.CompletableFutureCoroutine: java.util.concurrent.CompletableFuture future
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: kotlinx.coroutines.Job $job
kotlinx.coroutines.flow.SubscribedFlowCollector: kotlinx.coroutines.flow.FlowCollector collector
kotlin.text.StringsKt__IndentKt$prependIndent$1: java.lang.String $indent
kotlinx.coroutines.flow.SubscribedSharedFlow: kotlinx.coroutines.flow.SharedFlow sharedFlow
kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$1
kotlinx.coroutines.channels.BufferedChannelKt: long EB_COMPLETED_PAUSE_EXPAND_BUFFERS_BIT
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: long[] $this_asList
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: kotlin.random.Random $random
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention BINARY
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: int label
kotlin.io.encoding.DecodeInputStream: byte[] singleByteBuffer
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$2: kotlin.jvm.internal.Ref$ObjectRef $result
kotlin.reflect.WildcardTypeImpl: java.lang.reflect.Type upperBound
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: kotlin.jvm.functions.Function3 $action
kotlin.time.TimedValue: java.lang.Object value
kotlin.collections.builders.MapBuilder: int hashShift
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3: kotlin.jvm.functions.Function1 $selector
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: int label
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onStart$inlined
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: kotlinx.coroutines.flow.Flow $this_sample
kotlin.coroutines.CombinedContext$Serialized: kotlin.coroutines.CombinedContext$Serialized$Companion Companion
kotlinx.coroutines.flow.ChannelFlowBuilder: kotlin.jvm.functions.Function2 block
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Waiter waiters
kotlin.collections.builders.ListBuilder: int offset
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: java.lang.Object $initialValue
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: kotlin.jvm.functions.Function1 $predicate
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_catch$inlined
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind UNKNOWN
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: kotlin.jvm.functions.Function3 $operation
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: java.util.Enumeration $this_iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8: boolean[] $this_asSequence$inlined
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1: java.lang.Object[] $this_asSequence$inlined
kotlin.UInt: int data
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object result
kotlin.UShortArray$Iterator: short[] array
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: int I$0
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass[] EMPTY_K_CLASS_ARRAY
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object result
kotlinx.coroutines.channels.BufferedChannelKt: int RESULT_SUSPEND
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1: java.util.Comparator $this_thenByDescending
kotlin.ranges.UIntProgressionIterator: int finalElement
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $operation$inlined
kotlin.comparisons.ReverseOrderComparator: kotlin.comparisons.ReverseOrderComparator INSTANCE
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: int label
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: int label
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9: char[] $this_asIterable$inlined
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: kotlinx.coroutines.flow.SharedFlowImpl this$0
kotlin.ranges.ClosedFloatRange: float _start
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] EMPTY
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.selects.SelectClause1Impl: kotlin.jvm.functions.Function3 onCancellationConstructor
kotlinx.coroutines.DispatchersKt: java.lang.String IO_PARALLELISM_PROPERTY_NAME
kotlinx.coroutines.flow.internal.SafeCollectorKt: kotlin.jvm.functions.Function3 emitFun
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: kotlin.jvm.functions.Function4 $transform$inlined
kotlin.ranges.CharProgression: kotlin.ranges.CharProgression$Companion Companion
kotlin.jvm.internal.Ref$ByteRef: byte element
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1: java.lang.Object L$1
kotlin.jvm.internal.FloatCompanionObject: float MIN_VALUE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: int label
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol CLOSED_EMPTY
kotlinx.coroutines.selects.SelectImplementation$ClauseData: kotlinx.coroutines.selects.SelectImplementation this$0
kotlinx.coroutines.internal.LimitedDispatcher$Worker: kotlinx.coroutines.internal.LimitedDispatcher this$0
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicLongFieldUpdater _state$FU
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1: java.lang.Object[] $this_asIterable$inlined
kotlin.io.LineReader: java.nio.CharBuffer charBuf
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: kotlin.coroutines.jvm.internal.CoroutineStackFrame creationStackBottom
kotlin.coroutines.jvm.internal.DebugMetadataKt: int COROUTINES_DEBUG_METADATA_VERSION
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: kotlinx.coroutines.channels.ReceiveChannel $channel
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2: java.lang.Object $value$inlined
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1: java.lang.Comparable $key
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: int label
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode FIXED_PERIOD
kotlin.reflect.KVariance: kotlin.reflect.KVariance IN
kotlin.jvm.internal.ArrayFloatIterator: int index
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: int label
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object result
kotlinx.coroutines.flow.internal.AbortFlowException: kotlinx.coroutines.flow.FlowCollector owner
kotlinx.coroutines.JobSupport$onAwaitInternal$2: kotlinx.coroutines.JobSupport$onAwaitInternal$2 INSTANCE
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: int label
kotlinx.coroutines.channels.BufferedChannelKt: int RESULT_BUFFERED
kotlinx.coroutines.AwaitAll: int notCompletedCount
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1: kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1 INSTANCE
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.ConcurrentWeakMap callerInfoCache
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.lang.String schedulerName
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2: kotlin.jvm.functions.Function3 $operation
kotlin.coroutines.SafeContinuation: kotlin.coroutines.Continuation delegate
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: int label
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int index
kotlin.jvm.internal.PrimitiveSpreadBuilder: int position
kotlin.jvm.internal.ClassReference: java.util.HashMap primitiveWrapperFqNames
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: java.lang.Object result
kotlin.ranges.UIntProgression: kotlin.ranges.UIntProgression$Companion Companion
kotlinx.coroutines.channels.Channel: int OPTIONAL_CHANNEL
kotlin.UByte: byte MAX_VALUE
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: kotlinx.coroutines.flow.internal.ChannelFlowOperator this$0
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol NO_RECEIVE_RESULT
kotlinx.coroutines.scheduling.TasksKt: int CORE_POOL_SIZE
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: java.lang.Object L$0
kotlinx.coroutines.channels.BufferedChannelKt: int CLOSE_STATUS_CANCELLED
kotlinx.coroutines.internal.ThreadState: int i
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object L$0
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: int threshold
kotlinx.coroutines.internal.OnDemandAllocatingPool: int controlState
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2: kotlin.jvm.functions.Function1 $selector
kotlin.sequences.DistinctIterator: kotlin.jvm.functions.Function1 keySelector
kotlinx.coroutines.channels.BroadcastChannelImpl: java.util.concurrent.locks.ReentrantLock lock
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object L$2
kotlinx.coroutines.CancelledContinuation: int _resumed
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long CLOSED_MASK
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: kotlinx.coroutines.flow.internal.SendingCollector $collector
kotlin.sequences.DropSequence$iterator$1: java.util.Iterator iterator
kotlinx.coroutines.scheduling.TaskContextImpl: int taskMode
kotlin.io.path.PathTreeWalk: kotlin.io.path.PathWalkOption[] options
kotlinx.coroutines.channels.BufferedChannel$onSend$1: kotlinx.coroutines.channels.BufferedChannel$onSend$1 INSTANCE
kotlinx.coroutines.DebugKt: java.lang.String DEBUG_PROPERTY_VALUE_ON
kotlin.UInt: int SIZE_BYTES
kotlin.jvm.internal.DoubleCompanionObject: int SIZE_BITS
kotlin.collections.RingBuffer: java.lang.Object[] buffer
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlinx.coroutines.channels.BroadcastChannelImpl: java.lang.Object lastConflatedElement
kotlinx.coroutines.channels.LazyActorCoroutine: kotlin.coroutines.Continuation continuation
kotlin.jvm.internal.TypeParameterReference: boolean isReified
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
kotlin.math.Constants: double epsilon
kotlinx.coroutines.DefaultExecutor: int FRESH
kotlin.jvm.internal.DoubleCompanionObject: double NaN
kotlin.UShort: int SIZE_BITS
kotlin.text.Regex$Serialized: long serialVersionUID
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder: int index
kotlin.text.Typography: char less
kotlinx.coroutines.scheduling.CoroutineScheduler: long CREATED_MASK
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isTerminated$FU
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: int label
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object result
kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method addSuppressed
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object L$2
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: kotlin.coroutines.CoroutineContext emitContext
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean enableCreationStackTraces
kotlin.jvm.internal.ArrayLongIterator: int index
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label
kotlin.KotlinVersion: int version
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: int label
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core this$0
kotlin.text.SystemProperties: kotlin.text.SystemProperties INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: int label
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4: java.util.Iterator $this_asFlow$inlined
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] $VALUES
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7 this$0
kotlinx.coroutines.sync.MutexImpl$onLock$2: kotlinx.coroutines.sync.MutexImpl$onLock$2 INSTANCE
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.flow.FlowCollector $collector
kotlinx.coroutines.CancellableContinuationImplKt: int NO_INDEX
kotlin.io.LineReader: int BUFFER_SIZE
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.selects.SelectImplementation$ClauseData: java.lang.Object clauseObject
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: kotlinx.coroutines.sync.MutexImpl this$0
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3: java.util.stream.LongStream $this_asSequence$inlined
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: java.lang.Object result
kotlin.ULongArray$Iterator: int index
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
kotlin.UnsafeLazyImpl: java.lang.Object _value
kotlin.jvm.internal.FloatCompanionObject: float NaN
kotlin.collections.IndexingIterable: kotlin.jvm.functions.Function0 iteratorFactory
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicLongFieldUpdater completedExpandBuffersAndPauseFlag$FU
kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function1 getNextValue
kotlin.io.encoding.Base64Kt: int[] base64DecodeMap
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: int label
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onEmpty$inlined
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1 this$0
kotlin._Assertions: kotlin._Assertions INSTANCE
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CoroutineDispatcher dispatcher
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1: kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1 INSTANCE
kotlinx.coroutines.flow.StartedLazily$command$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: kotlinx.coroutines.flow.Flow[] $flows$inlined
kotlinx.coroutines.selects.SelectClause1Impl: java.lang.Object clauseObject
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1: java.util.Comparator $this_thenComparator
kotlin.jvm.internal.ArrayIntIterator: int index
kotlin.random.KotlinRandom: long serialVersionUID
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: kotlin.coroutines.CoroutineContext $$delegate_0
kotlin.UInt: int MIN_VALUE
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: kotlin.sequences.Sequence $this_runningReduce
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Companion Companion
kotlin.jvm.internal.FloatCompanionObject: float NEGATIVE_INFINITY
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: kotlin.sequences.Sequence $this_ifEmpty
kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: int label
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol REUSABLE_CLAIMED
kotlin.text.Typography: char doubleDagger
kotlinx.coroutines.channels.LazyActorCoroutine$onSend$1: kotlinx.coroutines.channels.LazyActorCoroutine$onSend$1 INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: java.lang.Object L$0
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
kotlinx.coroutines.sync.MutexKt$withLock$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: kotlinx.coroutines.flow.Flow $inner
kotlinx.coroutines.CompletedWithCancellation: kotlin.jvm.functions.Function1 onCancellation
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: int I$0
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlin.jvm.internal.IntCompanionObject: int SIZE_BYTES
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object L$1
kotlin.collections.EmptyMap: long serialVersionUID
kotlin.jvm.internal.Ref$LongRef: long element
kotlinx.coroutines.AwaitKt$joinAll$1: int I$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: int label
kotlin.text.StringsKt___StringsKt$windowedSequence$2: kotlin.jvm.functions.Function1 $transform
kotlin.ranges.ClosedDoubleRange: double _endInclusive
kotlinx.coroutines.flow.StartedWhileSubscribed: long replayExpiration
kotlin.random.Random$Default$Serialized: long serialVersionUID
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: kotlin.jvm.internal.Ref$ObjectRef $lastValue
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol STATE_CANCELLED
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.CharSequence $this_splitToSequence
kotlin.text.Regex: java.util.Set _options
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol STATE_COMPLETED
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1: kotlin.jvm.functions.Function2 $block
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext coroutineContext
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.Thread lastObservedThread
kotlin.text.CharCategory: kotlin.text.CharCategory START_PUNCTUATION
kotlin.collections.EmptySet: kotlin.collections.EmptySet INSTANCE
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3: kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3 INSTANCE
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: kotlinx.coroutines.channels.BufferedChannel this$0
kotlin.text.DelimitedRangesSequence$iterator$1: int currentStartIndex
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlin.ranges.LongProgressionIterator: long next
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: kotlin.jvm.internal.Ref$ObjectRef $fromDownstream
kotlin.jvm.internal.AdaptedFunctionReference: java.lang.Class owner
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: kotlinx.coroutines.channels.ReceiveChannel $this_mapIndexed
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState: int fileIndex
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 onLeave
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object result
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1: long J$0
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: int label
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 updateState
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1: java.lang.CharSequence $this_asSequence$inlined
kotlinx.coroutines.AwaitKt$joinAll$1: int I$1
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: kotlinx.coroutines.debug.internal.StackTraceFrame creationStackBottom
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: long idleWorkerKeepAliveNs
kotlin.jvm.internal.AdaptedFunctionReference: boolean isTopLevel
kotlinx.coroutines.sync.SemaphoreImpl: int _availablePermits
kotlin.jvm.internal.DoubleCompanionObject: kotlin.jvm.internal.DoubleCompanionObject INSTANCE
kotlin.text.Typography: char half
kotlin.collections.AbstractList$SubList: kotlin.collections.AbstractList list
kotlin.sequences.TakeSequence: kotlin.sequences.Sequence sequence
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext$Key key
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: java.lang.Object L$1
kotlinx.coroutines.sync.MutexKt: int TRY_LOCK_SUCCESS
kotlin.io.encoding.DecodeInputStream: kotlin.io.encoding.Base64 base64
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object L$2
kotlin.sequences.SubSequence$iterator$1: kotlin.sequences.SubSequence this$0
kotlin.text.MatcherMatchResult: java.util.List groupValues_
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState state
kotlinx.coroutines.internal.MainDispatchersKt: java.lang.String FAST_SERVICE_LOADER_PROPERTY_NAME
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: kotlinx.coroutines.flow.FlowCollector $downstream
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: java.lang.Object L$0
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: java.lang.Object L$2
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object $element
kotlinx.coroutines.flow.internal.NopCollector: kotlinx.coroutines.flow.internal.NopCollector INSTANCE
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7: int[] $this_asFlow$inlined
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: int label
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality POP_DIRECTIONAL_FORMAT
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object[] buffer
kotlinx.coroutines.flow.StateFlowImpl: int sequence
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_RETRY
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1: kotlin.jvm.functions.Function2 $comparison
kotlin.text.ScreenFloatValueRegEx: kotlin.text.ScreenFloatValueRegEx INSTANCE
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicLongFieldUpdater receivers$FU
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3 this$0
kotlin.collections.MutableMapWithDefaultImpl: kotlin.jvm.functions.Function1 default
kotlinx.coroutines.selects.SelectImplementation$ClauseData: kotlin.jvm.functions.Function3 regFunc
kotlinx.coroutines.AwaitKt$joinAll$3: java.lang.Object result
kotlinx.coroutines.CancellableContinuationImplKt: int UNDECIDED
kotlin.io.path.PathNode: java.nio.file.Path path
kotlin.text.RegexOption: kotlin.text.RegexOption LITERAL
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: int I$0
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1 this$0
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _closeCause$FU
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int MAX_CAPACITY_MASK
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: kotlinx.coroutines.android.HandlerContext this$0
kotlinx.coroutines.channels.BroadcastChannelImpl: java.util.List subscribers
kotlin.ranges.UIntProgressionIterator: boolean hasNext
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: int label
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: boolean[] $this_asList
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: java.lang.Object $element
kotlinx.coroutines.DebugKt: java.lang.String DEBUG_PROPERTY_VALUE_OFF
kotlin.text.Typography: char degree
kotlinx.coroutines.channels.BufferedChannel$SendBroadcast: kotlinx.coroutines.CancellableContinuation cont
kotlinx.coroutines.selects.SelectClause0Impl: kotlin.jvm.functions.Function3 processResFunc
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.Flow $flow2
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2 this$0
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: int label
kotlin.io.encoding.EncodeOutputStream: java.io.OutputStream output
kotlinx.coroutines.channels.BufferedChannelKt: int SEGMENT_SIZE
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1: kotlin.sequences.Sequence $this_sortedWith
kotlin.sequences.FilteringSequence$iterator$1: java.lang.Object nextItem
kotlin.sequences.MergingSequence: kotlin.sequences.Sequence sequence1
kotlin.random.XorWowRandom: int z
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1: kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1 INSTANCE
kotlin.text.Typography: char leftSingleQuote
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: kotlinx.coroutines.flow.FlowCollector $collector
kotlinx.coroutines.flow.StartedLazily$command$1$1: kotlin.jvm.internal.Ref$BooleanRef $started
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: int label
kotlin.text.Typography: char cent
kotlin.collections.ArrayDeque: int size
kotlinx.coroutines.CancelledContinuation: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _resumed$FU
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1: kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1 INSTANCE
kotlin.jvm.internal.ShortCompanionObject: short MIN_VALUE
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: java.lang.Object $initial
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: java.lang.Object L$1
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: java.lang.Object result
kotlin.sequences.FilteringSequence$iterator$1: kotlin.sequences.FilteringSequence this$0
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: kotlinx.coroutines.sync.MutexImpl this$0
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext left
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object $fallback
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE
kotlinx.coroutines.channels.BufferedChannelKt: long BUFFER_END_RENDEZVOUS
kotlin.ranges.ULongProgression: long last
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1 this$0
kotlin.jvm.internal.ClassReference: java.util.Map simpleNames
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: int unmatchedResume
kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator iterator
kotlinx.coroutines.flow.DistinctFlowImpl: kotlin.jvm.functions.Function2 areEquivalent
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $action$inlined
kotlinx.coroutines.channels.BroadcastChannelImpl: java.util.HashMap onSendInternalResult
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState DORMANT
kotlin.jvm.internal.ClassReference: java.util.Map FUNCTION_CLASSES
kotlinx.coroutines.scheduling.TaskImpl: java.lang.Runnable block
kotlin.sequences.MergingSequence$iterator$1: kotlin.sequences.MergingSequence this$0
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.CompletedWithCancellation: java.lang.Object result
kotlin.jvm.internal.ArrayByteIterator: int index
kotlin.jvm.internal.IntCompanionObject: int SIZE_BITS
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: int I$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: java.lang.Object L$1
kotlin.jvm.internal.ByteCompanionObject: byte MIN_VALUE
kotlin.text.RegexOption: kotlin.text.RegexOption[] $VALUES
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: int label
kotlinx.coroutines.CompletedContinuation: java.lang.Object idempotentResume
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object L$2
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: java.lang.Object L$0
kotlinx.coroutines.sync.SemaphoreKt: int SEGMENT_SIZE
kotlin.sequences.SequencesKt___SequencesKt$onEachIndexed$1: kotlin.jvm.functions.Function2 $action
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: java.lang.Object L$1
kotlin.time.DurationKt: long MAX_NANOS_IN_MILLIS
kotlinx.coroutines.channels.BroadcastChannelKt: kotlinx.coroutines.internal.Symbol NO_ELEMENT
kotlin.sequences.SequencesKt___SequencesKt$elementAt$1: int $index
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: java.lang.Object result
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: long offset
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long HEAD_MASK
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: int label
kotlinx.coroutines.sync.MutexKt: int HOLDS_LOCK_UNLOCKED
kotlin.text.CharCategory: kotlin.text.CharCategory CONNECTOR_PUNCTUATION
kotlin.sequences.SubSequence$iterator$1: int position
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object L$0
kotlin.io.encoding.EncodeOutputStream: byte[] byteBuffer
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8: boolean[] $this_asIterable$inlined
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater producerIndex$FU
kotlinx.coroutines.selects.OnTimeout$register$$inlined$Runnable$1: kotlinx.coroutines.selects.OnTimeout this$0
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: int label
kotlin.text.StringsKt__StringsKt$iterator$1: java.lang.CharSequence $this_iterator
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol UNINITIALIZED
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: kotlinx.coroutines.flow.Flow $this_debounceInternal
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: int label
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.ThreadLocalEventLoop INSTANCE
kotlin.concurrent.TimersKt$timerTask$1: kotlin.jvm.functions.Function1 $action
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1: java.lang.Object[] $elements$inlined
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$3
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: int label
kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1: long J$0
kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object nextItem
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $VALUES
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: java.lang.Object result
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: int label
kotlinx.coroutines.flow.SubscribedFlowCollector: kotlin.jvm.functions.Function2 action
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: kotlinx.coroutines.CompletableDeferred $result
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: int label
kotlinx.coroutines.sync.MutexImpl$onLock$1: kotlinx.coroutines.sync.MutexImpl$onLock$1 INSTANCE
kotlin.time.DurationUnit: kotlin.time.DurationUnit DAYS
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: int label
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: kotlinx.coroutines.flow.internal.SendingCollector $collector
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: int label
kotlin.text.Typography: char rightDoubleQuote
kotlin.properties.Delegates: kotlin.properties.Delegates INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object L$1
kotlinx.coroutines.flow.SafeFlow: kotlin.jvm.functions.Function2 block
kotlin.collections.builders.SerializedMap: kotlin.collections.builders.SerializedMap$Companion Companion
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1: int $index
kotlin.jvm.internal.CallableReference: boolean isTopLevel
kotlin.sequences.TakeWhileSequence$iterator$1: java.util.Iterator iterator
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$3
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$3
kotlinx.coroutines.channels.BufferedChannel$onReceive$1: kotlinx.coroutines.channels.BufferedChannel$onReceive$1 INSTANCE
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int[] $this_asList
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: kotlinx.coroutines.flow.internal.ChannelFlow this$0
kotlin.ranges.ComparableRange: java.lang.Comparable start
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object result
kotlin.sequences.IndexingSequence: kotlin.sequences.Sequence sequence
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: kotlinx.coroutines.CancellableContinuationImpl cont
kotlin.text.CharCategory: kotlin.text.CharCategory MODIFIER_SYMBOL
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: int label
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.Delay $$delegate_0
kotlin.sequences.FilteringSequence$iterator$1: int nextState
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: int I$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: java.lang.Object result
kotlinx.coroutines.channels.Channel: int CONFLATED
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: int label
kotlinx.coroutines.internal.ThreadContextKt: kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: kotlinx.coroutines.CompletableDeferred $result
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: kotlin.jvm.functions.Function7 $transform$inlined
kotlin.jvm.internal.LongCompanionObject: long MIN_VALUE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object L$2
kotlin.collections.ArrayDeque: int head
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object L$1
kotlinx.coroutines.AwaitKt$joinAll$3: java.lang.Object L$0
kotlinx.coroutines.flow.SharedFlowImpl: long minCollectorIndex
kotlinx.coroutines.ResumeAwaitOnCompletion: kotlinx.coroutines.CancellableContinuationImpl continuation
kotlinx.coroutines.selects.SelectImplementation$ClauseData: java.lang.Object block
kotlin.collections.AbstractMap$keys$1$iterator$1: java.util.Iterator $entryIterator
kotlin.io.encoding.DecodeInputStream: int byteBufferStartIndex
kotlinx.coroutines.channels.ChannelResult$Closed: java.lang.Throwable cause
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5: long[] $this_asSequence$inlined
kotlinx.coroutines.flow.SharedFlowImpl: long replayIndex
kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onVisitFileFailed
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: int $i
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: int label
kotlin.io.path.PathTreeWalk: java.nio.file.Path start
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1: kotlin.jvm.functions.Function2 $predicate$inlined
kotlin.io.encoding.Base64Kt: int[] base64UrlDecodeMap
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: kotlin.jvm.functions.Function4 $transform$inlined
kotlin.text.CharCategory: kotlin.text.CharCategory$Companion Companion
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: java.lang.Object L$0
kotlin.io.encoding.EncodeOutputStream: boolean isClosed
kotlinx.coroutines.debug.internal.AgentInstallationType: boolean isInstalledStatically
kotlinx.coroutines.future.FutureKt$await$2$1: java.util.concurrent.CompletableFuture $future
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.debug.internal.DebuggerInfo: long sequenceNumber
kotlinx.coroutines.flow.AbstractFlow$collect$1: int label
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlin.jvm.functions.Function2 defaultAreEquivalent
kotlin.reflect.KVariance: kotlin.reflect.KVariance INVARIANT
kotlinx.coroutines.channels.Channel: java.lang.String DEFAULT_BUFFER_PROPERTY_NAME
kotlinx.coroutines.channels.BroadcastKt$broadcast$1: kotlinx.coroutines.channels.ReceiveChannel $this_broadcast
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: java.lang.Object L$1
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2: java.util.Comparator $comparator
kotlin.text.Typography: char leftGuillemet
kotlin.sequences.DropWhileSequence$iterator$1: java.util.Iterator iterator
kotlin.text.Typography: char lowSingleQuote
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $transform$inlined$1
kotlin.collections.EmptyList: long serialVersionUID
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.Object value
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: java.lang.Object L$0
kotlinx.coroutines.CoroutineContextKt: java.lang.String DEBUG_THREAD_NAME_SEPARATOR
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1: java.nio.file.Path $target
kotlin.jvm.internal.ArrayBooleanIterator: boolean[] array
kotlinx.coroutines.scheduling.WorkQueueKt: int STEAL_BLOCKING_ONLY
kotlin.io.path.PathNode: java.util.Iterator contentIterator
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: java.lang.Object L$0
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object tail
kotlin.io.encoding.EncodeOutputStream: byte[] symbolBuffer
kotlin.io.FileTreeWalk: int maxDepth
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_retryWhen$inlined
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: kotlin.jvm.functions.Function2 $predicate
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: int I$0
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: kotlin.jvm.functions.Function2 factory
kotlin.collections.ArraysKt___ArraysKt$withIndex$5: long[] $this_withIndex
kotlin.ranges.IntProgression: int last
kotlin.collections.ReversedList: java.util.List delegate
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int mask
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object L$1
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: char[] $this_asList
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: int label
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: java.lang.Object result
kotlin.text.Typography: char bullet
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: kotlinx.coroutines.flow.Flow[] $flowArray$inlined
kotlin.collections.builders.ListBuilder: kotlin.collections.builders.ListBuilder backing
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$4
kotlin.coroutines.CombinedContext$toString$1: kotlin.coroutines.CombinedContext$toString$1 INSTANCE
kotlin.jvm.internal.IntCompanionObject: int MAX_VALUE
kotlin.sequences.GeneratorSequence$iterator$1: int nextState
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_TERMINATOR
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8: long[] $this_asFlow$inlined
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
kotlin.jvm.internal.CallableReference: java.lang.Class owner
kotlin.random.XorWowRandom: int addend
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER
kotlin.io.LineReader: byte[] bytes
kotlin.time.DurationUnit: kotlin.time.DurationUnit SECONDS
kotlin.collections.builders.MapBuilder: int maxProbeDistance
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.scheduling.DefaultIoScheduler: kotlinx.coroutines.scheduling.DefaultIoScheduler INSTANCE
kotlin.text.RegexOption: kotlin.text.RegexOption CANON_EQ
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: kotlinx.coroutines.CancellableContinuationImpl continuation
kotlin.sequences.DistinctIterator: java.util.HashSet observed
kotlin.text.Typography: char rightGuillemete
kotlinx.coroutines.AwaitAll$AwaitAllNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _disposer$FU
kotlin.time.DurationJvmKt: java.lang.ThreadLocal[] precisionFormats
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState: kotlin.io.FileTreeWalk$FileTreeWalkIterator this$0
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.ThreadLocal threadLocal
kotlinx.coroutines.scheduling.CoroutineScheduler: int CLAIMED
kotlinx.coroutines.flow.StateFlowImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_runningFold$inlined
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget TYPE
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2 this$0
kotlinx.coroutines.EventLoop: long useCount
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object L$1
kotlinx.coroutines.DelayKt$awaitCancellation$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: int label
kotlinx.coroutines.DefaultExecutor: int debugStatus
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart LAZY
kotlin.ranges.UIntProgression: int step
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater blockingTasksInBuffer$FU
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: int label
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: java.lang.Object L$0
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: java.lang.Object L$1
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext lastEmissionContext
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext immediate
kotlin.reflect.ParameterizedTypeImpl: java.lang.reflect.Type ownerType
kotlin.collections.builders.MapBuilder: boolean isReadOnly
kotlinx.coroutines.DefaultExecutorKt: boolean defaultMainDelayOptIn
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion: kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion INSTANCE
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode PUBLICATION
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: int label
kotlin.reflect.KTypeProjection: kotlin.reflect.KVariance variance
kotlin.text.RegexOption: kotlin.text.RegexOption IGNORE_CASE
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: kotlinx.coroutines.flow.SharedFlowImpl flow
kotlin.time.TimeSource$Companion: kotlin.time.TimeSource$Companion $$INSTANCE
kotlin.collections.AbstractList$IteratorImpl: kotlin.collections.AbstractList this$0
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget LOCAL_VARIABLE
kotlinx.coroutines.scheduling.UnlimitedIoScheduler: kotlinx.coroutines.scheduling.UnlimitedIoScheduler INSTANCE
kotlin.ULong: long data
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: java.lang.Object result
kotlin.random.KotlinRandom: boolean seedInitialized
kotlinx.coroutines.stream.StreamFlow$collect$1: kotlinx.coroutines.stream.StreamFlow this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: int I$0
kotlinx.coroutines.flow.SharingConfig: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.InvokeOnCancelling: int _invoked
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: int index
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2 this$0
kotlinx.coroutines.CompletedContinuation: kotlin.jvm.functions.Function1 onCancellation
kotlinx.coroutines.internal.MainDispatcherLoader: boolean FAST_SERVICE_LOADER_ENABLED
kotlin.jvm.internal.TypeReference: kotlin.reflect.KClassifier classifier
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 INSTANCE
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: int label
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object L$1
kotlinx.coroutines.AwaitAll$AwaitAllNode: java.lang.Object _disposer
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 onEnter
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1: kotlin.jvm.functions.Function2 $handler
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String schedulerName
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3: kotlin.jvm.functions.Function3 $onError
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol CANCELLED
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: kotlinx.coroutines.AwaitAll this$0
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: int label
kotlin.sequences.TakeSequence$iterator$1: int left
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: java.lang.Object result
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol TOO_LATE_TO_CANCEL
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] a
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState PARKING
kotlinx.coroutines.debug.AgentPremain$DebugProbesTransformer: kotlinx.coroutines.debug.AgentPremain$DebugProbesTransformer INSTANCE
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: java.lang.Object result
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet: kotlinx.coroutines.debug.internal.ConcurrentWeakMap this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: java.lang.Object L$0
kotlinx.coroutines.DebugKt: java.lang.String DEBUG_PROPERTY_NAME
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater head$FU
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: kotlin.jvm.functions.Function4 $transform$inlined
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: java.lang.Object L$0
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: java.lang.Object result
kotlin.jvm.internal.BooleanSpreadBuilder: boolean[] values
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: kotlinx.coroutines.flow.Flow $flow2
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1: java.lang.Object $element
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1: kotlinx.coroutines.channels.ProducerScope $$this$produce
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: long J$0
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2 this$0
kotlin.collections.RingBuffer: int capacity
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2: kotlin.jvm.internal.Ref$ObjectRef $accumulator
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: kotlin.sequences.Sequence $this_runningFold
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: int label
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2: java.util.stream.IntStream $this_asSequence$inlined
kotlin.text.MatcherMatchResult: java.lang.CharSequence input
kotlin.UByte: int SIZE_BITS
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: kotlin.jvm.functions.Function5 $transform$inlined
kotlin.jvm.internal.ByteCompanionObject: int SIZE_BITS
kotlinx.coroutines.channels.BufferedChannelKt: int CLOSE_STATUS_ACTIVE
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object L$1
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: java.lang.Object value
kotlin.jvm.internal.CharCompanionObject: char MAX_VALUE
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1 this$0
kotlin.collections.builders.SerializedCollection: int tagSet
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PUBLIC
kotlin.KotlinVersion: kotlin.KotlinVersion CURRENT
kotlin.jvm.internal.AdaptedFunctionReference: int flags
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
kotlin.RequiresOptIn$Level: kotlin.RequiresOptIn$Level WARNING
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2 this$0
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper sequenceNumber$kotlinx$VolatileWrapper
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1: kotlin.sequences.SequencesKt___SequencesKt$flatMap$1 INSTANCE
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: int label
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: int label
kotlin.sequences.TransformingIndexedSequence: kotlin.jvm.functions.Function2 transformer
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.selects.SelectImplementation$ClauseData: kotlin.jvm.functions.Function3 processResFunc
kotlin.ranges.IntProgressionIterator: int step
kotlinx.coroutines.channels.BufferedChannelKt: long EB_COMPLETED_COUNTER_MASK
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.JobSupportKt: int TRUE
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: java.lang.Object countOrElement
kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause
kotlin.jvm.internal.AdaptedFunctionReference: java.lang.String name
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2: kotlin.jvm.functions.Function2 $transform$inlined
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2: kotlin.jvm.internal.Ref$ObjectRef $result
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: int label
kotlin.collections.State: kotlin.collections.State Done
kotlin.RequiresOptIn$Level: kotlin.RequiresOptIn$Level[] $VALUES
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: java.lang.Object L$0
kotlin.ranges.ComparableOpenEndRange: java.lang.Comparable endExclusive
kotlinx.coroutines.channels.BroadcastChannelImpl: int capacity
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: kotlin.jvm.functions.Function7 $transform$inlined
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: double startedAt
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: int label
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: java.lang.Object L$0
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: int maxPoolSize
kotlinx.coroutines.flow.SharedFlowSlot: long index
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: java.lang.Object L$1
kotlin.collections.SlidingWindowKt$windowedIterator$1: int $step
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.util.concurrent.atomic.AtomicReferenceFieldUpdater core$FU
kotlin.KotlinVersion: kotlin.KotlinVersion$Companion Companion
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion: java.lang.Integer sdkVersion
kotlin.jvm.internal.AdaptedFunctionReference: java.lang.Object receiver
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Unconfined
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: java.lang.Object L$2
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol RESUMING_BY_EB
kotlinx.coroutines.ThreadState: kotlinx.coroutines.Job job
kotlinx.coroutines.channels.Channel$Factory: int CHANNEL_DEFAULT_CAPACITY
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlin.collections.builders.MapBuilder: int INITIAL_CAPACITY
kotlin.text.CharCategory: kotlin.text.CharCategory COMBINING_SPACING_MARK
kotlin.random.Random: kotlin.random.Random$Default Default
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality COMMON_NUMBER_SEPARATOR
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection BOTTOM_UP
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1: kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: long $initialDelayMillis
kotlin.random.PlatformRandom: long serialVersionUID
kotlin.text.CharCategory: kotlin.text.CharCategory SPACE_SEPARATOR
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1 this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3: kotlinx.coroutines.flow.Flow[] $flows$inlined
kotlin.SynchronizedLazyImpl: java.lang.Object lock
kotlin.text.StringsKt___StringsKt$windowed$1: kotlin.text.StringsKt___StringsKt$windowed$1 INSTANCE
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol NO_OWNER
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object L$0
kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_NotReady
kotlin.collections.builders.MapBuilderValues: kotlin.collections.builders.MapBuilder backing
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
kotlin.io.encoding.DecodeInputStream: java.io.InputStream input
kotlinx.coroutines.channels.ChannelIterator$next0$1: java.lang.Object L$0
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6: float[] $this_asSequence$inlined
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1 this$0
kotlinx.coroutines.selects.SelectImplementation$doSelectSuspend$1: java.lang.Object L$0
kotlin.SafePublicationLazyImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget PROPERTY_SETTER
kotlin.sequences.FlatteningSequence: kotlin.jvm.functions.Function1 transformer
kotlinx.coroutines.flow.internal.ChannelFlowMerge: kotlinx.coroutines.flow.Flow flow
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: kotlin.jvm.functions.Function2 emitRef
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4: java.nio.file.Path $target
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String state
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: kotlinx.coroutines.channels.ReceiveChannel $this_takeWhile
kotlin.io.path.ExceptionsCollector: int limit
kotlinx.coroutines.internal.LimitedDispatcher: java.util.concurrent.atomic.AtomicIntegerFieldUpdater runningWorkers$FU
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: java.lang.Object L$1
kotlin.sequences.SequenceBuilderIterator: int state
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: java.lang.Object result
kotlinx.coroutines.flow.SharingConfig: int extraBufferCapacity
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: int label
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceArray buffer
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: int label
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$1
kotlin.text.Charsets: java.nio.charset.Charset utf_32
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: kotlin.jvm.functions.Function3 $operation
kotlin.jvm.internal.TypeReference: kotlin.reflect.KType platformTypeUpperBound
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: int label
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function0 $this_asFlow$inlined
kotlin.ranges.CharRange: kotlin.ranges.CharRange$Companion Companion
kotlin.time.AbstractLongTimeSource$LongTimeMark: long offset
kotlinx.coroutines.channels.ChannelsKt: java.lang.String DEFAULT_CLOSE_MESSAGE
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: java.lang.Object result
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: java.lang.Object receiveResult
kotlin.collections.MutableMapWithDefaultImpl: java.util.Map map
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _queue$FU
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int ADD_SUCCESS
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PROTECTED
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.util.List $delimitersList
kotlin.text.MatcherMatchResult$groupValues$1: kotlin.text.MatcherMatchResult this$0
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: int label
kotlinx.coroutines.channels.BufferedChannelKt: int RESULT_SUSPEND_NO_WAITER
kotlin.text.Charsets: java.nio.charset.Charset US_ASCII
kotlin.text.Typography: char copyright
kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList list
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object $cnt
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: java.lang.Object result
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: kotlinx.coroutines.debug.internal.Marked MARKED_TRUE
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: kotlin.jvm.functions.Function0 $block
kotlin.ranges.ClosedFloatRange: float _endInclusive
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: int arity
kotlinx.coroutines.internal.ThreadState: java.lang.Object[] values
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.flow.Flow $flow
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: kotlin.jvm.functions.Function3 transform
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: java.util.Iterator $this_asSequence$inlined
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: java.lang.Object L$1
kotlin.jvm.internal.DoubleCompanionObject: int SIZE_BYTES
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: kotlin.jvm.functions.Function2 $predicate
kotlin.jvm.internal.IntCompanionObject: int MIN_VALUE
kotlin.collections.ArraysKt___ArraysKt$withIndex$7: double[] $this_withIndex
kotlin.collections.builders.SerializedCollection: int tag
kotlin.collections.SlidingWindowKt$windowedIterator$1: int label
kotlin.io.encoding.DecodeInputStream: byte[] byteBuffer
kotlinx.coroutines.future.FutureKt$asCompletableFuture$2: java.util.concurrent.CompletableFuture $future
kotlinx.coroutines.JobSupport$ChildCompletion: java.lang.Object proposedUpdate
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache cache
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: java.lang.Object L$0
kotlinx.coroutines.flow.SharedFlowImpl: int queueSize
kotlinx.coroutines.internal.ClassValueCtorCache: kotlinx.coroutines.internal.ClassValueCtorCache$cache$1 cache
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode[] $VALUES
kotlin.math.Constants: double upper_taylor_2_bound
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$3
kotlinx.coroutines.internal.Symbol: java.lang.String symbol
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2 this$0
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object L$0
kotlinx.coroutines.flow.ReadonlyStateFlow: kotlinx.coroutines.flow.StateFlow $$delegate_0
kotlin.text.CharCategory: kotlin.text.CharCategory NON_SPACING_MARK
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: java.lang.Object L$0
kotlinx.coroutines.DefaultExecutorKt: kotlinx.coroutines.Delay DefaultDelay
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object L$0
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] $VALUES
kotlin.collections.MovingSubList: java.util.List list
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: kotlinx.coroutines.channels.ReceiveChannel $this_dropWhile
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_combine$inlined
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: int label
kotlinx.coroutines.flow.FlowKt__MergeKt: int DEFAULT_CONCURRENCY
kotlin.reflect.GenericArrayTypeImpl: java.lang.reflect.Type elementType
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence sequence
kotlin.sequences.SequencesKt___SequencesKt$distinct$1: kotlin.sequences.SequencesKt___SequencesKt$distinct$1 INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: kotlin.jvm.functions.Function2 $predicate
kotlinx.coroutines.sync.MutexImpl: java.lang.Object owner
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: int label
kotlin.jvm.internal.PackageReference: java.lang.String moduleName
kotlinx.coroutines.DispatchedTaskKt: int MODE_UNINITIALIZED
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler coroutineScheduler
kotlin.coroutines.ContinuationKt$Continuation$1: kotlin.jvm.functions.Function1 $resumeWith
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlin.text.Regex$splitToSequence$1: java.lang.CharSequence $input
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: java.lang.Object L$0
kotlin.jvm.internal.CharCompanionObject: char MIN_HIGH_SURROGATE
kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings: int[] $EnumSwitchMapping$0
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: int label
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
kotlin.random.FallbackThreadLocalRandom: kotlin.random.FallbackThreadLocalRandom$implStorage$1 implStorage
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$keys$1: kotlinx.coroutines.debug.internal.ConcurrentWeakMap$keys$1 INSTANCE
kotlin.time.DurationUnit: kotlin.time.DurationUnit MICROSECONDS
kotlin.sequences.SequencesKt___SequencesKt$minus$1: kotlin.sequences.Sequence $this_minus
kotlin.jvm.internal.ByteSpreadBuilder: byte[] values
kotlinx.coroutines.scheduling.WorkQueueKt: long NOTHING_TO_STEAL
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: kotlin.jvm.functions.Function5 $transform$inlined
kotlinx.coroutines.AwaitKt$joinAll$3: int label
kotlin.text.RegexOption: int value
kotlin.collections.AbstractList$IteratorImpl: int index
kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1: java.lang.Object result
kotlin.io.FileSystemException: java.io.File other
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: java.lang.Object result
kotlin.time.DurationKt: long MAX_MILLIS
kotlin.collections.State: kotlin.collections.State Ready
kotlinx.coroutines.selects.SelectClause0Impl: kotlin.jvm.functions.Function3 regFunc
kotlinx.coroutines.ResumeUndispatchedRunnable: kotlinx.coroutines.CancellableContinuation continuation
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: kotlinx.coroutines.flow.SharingStarted $started
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4: kotlin.jvm.functions.Function3 $onError
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$0
kotlin.ranges.IntProgressionIterator: int next
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget EXPRESSION
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2: java.util.Collection $destination
kotlinx.coroutines.selects.SelectImplementation$ClauseData: kotlin.jvm.functions.Function3 onCancellationConstructor
kotlin.jvm.internal.PackageReference: java.lang.Class jClass
kotlinx.coroutines.channels.BufferedChannel: kotlin.jvm.functions.Function3 onUndeliveredElementReceiveCancellationConstructor
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlin.coroutines.CombinedContext$writeReplace$1: kotlin.coroutines.CoroutineContext[] $elements
kotlin.jvm.internal.ClassReference: java.lang.Class jClass
kotlinx.coroutines.flow.ReadonlySharedFlow: kotlinx.coroutines.flow.SharedFlow $$delegate_0
kotlinx.coroutines.TimeoutCancellationException: kotlinx.coroutines.Job coroutine
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object $expect$inlined
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol NO_RESULT
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1: kotlin.jvm.functions.Function2 $transform$inlined$1
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object L$1
kotlin.jvm.internal.ArrayIterator: java.lang.Object[] array
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: java.lang.Object L$0
kotlin.io.path.PathRelativizer: java.nio.file.Path parentPath
kotlin.time.AdjustedTimeMark: long adjustment
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol INTERRUPTED_SEND
kotlin.io.encoding.DecodeInputStream: boolean isClosed
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind AT_MOST_ONCE
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$0
kotlinx.coroutines.channels.Channel$Factory: kotlinx.coroutines.channels.Channel$Factory $$INSTANCE
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: java.lang.Object L$0
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget FUNCTION
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: int MIN_CAPACITY
kotlin.ranges.ULongProgressionIterator: long step
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1: int[] $this_withIndex
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: java.lang.Object result
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: java.lang.Object $cnt
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.coroutines.CoroutineContext $scopeContext
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long reading
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.Long coroutineId
kotlinx.coroutines.internal.MainDispatchersKt: boolean SUPPORT_MISSING
kotlin.time.TimeSource: kotlin.time.TimeSource$Companion Companion
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: java.lang.Runnable $block
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object L$4
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: java.lang.Object L$1
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: kotlin.jvm.functions.Function3 $currentFunction$inlined
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: kotlin.coroutines.CoroutineContext $context
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1 this$0
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.Job job
kotlin.sequences.TransformingSequence$iterator$1: java.util.Iterator iterator
kotlin.text.CharCategory: kotlin.text.CharCategory TITLECASE_LETTER
kotlinx.coroutines.channels.BufferedChannel$sendImpl$1: kotlinx.coroutines.channels.BufferedChannel$sendImpl$1 INSTANCE
kotlin.text.MatcherMatchResult: kotlin.text.MatchGroupCollection groups
kotlin.enums.EnumEntriesKt$enumEntries$1: java.lang.Enum[] $entries
kotlinx.coroutines.DebugKt: boolean DEBUG
kotlinx.coroutines.flow.SharedFlowImpl: int bufferCapacity
kotlinx.coroutines.flow.SubscribedSharedFlow: kotlin.jvm.functions.Function2 action
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object L$0
kotlinx.coroutines.scheduling.LimitingDispatcher: java.util.concurrent.atomic.AtomicIntegerFieldUpdater inFlightTasks$FU
kotlin.sequences.FlatteningSequence: kotlin.sequences.Sequence sequence
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: kotlin.sequences.Sequence $this_windowedSequence$inlined
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$4
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol CLOSE_HANDLER_INVOKED
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: java.lang.Object L$1
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: java.lang.Object L$1
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object result
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2 this$0
kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object L$1
kotlinx.coroutines.scheduling.TasksKt: long WORK_STEALING_TIME_RESOLUTION_NS
kotlinx.coroutines.DefaultExecutor: long DEFAULT_KEEP_ALIVE_MS
kotlinx.coroutines.JobSupport$children$1: kotlinx.coroutines.JobSupport this$0
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: kotlinx.coroutines.channels.SendChannel $this_sendBlocking
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $VALUES
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: java.lang.Object result
kotlinx.coroutines.flow.internal.StackFrameContinuation: kotlin.coroutines.Continuation uCont
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5: kotlin.jvm.functions.Function3 $onError
kotlinx.coroutines.scheduling.CoroutineScheduler: int MIN_SUPPORTED_POOL_SIZE
kotlin.text.Typography: char rightGuillemet
kotlinx.coroutines.selects.SelectImplementation$processResultAndInvokeBlockRecoveringException$1: kotlinx.coroutines.selects.SelectImplementation this$0
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: int label
kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onPostVisitDirectory
kotlinx.coroutines.android.HandlerDispatcherKt: long MAX_DELAY
kotlin.io.encoding.Base64: byte padSymbol
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: int label
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: java.lang.Object result
kotlin.io.FileTreeWalk: kotlin.io.FileWalkDirection direction
kotlin.io.ByteStreamsKt$iterator$1: boolean nextPrepared
kotlinx.coroutines.flow.FlowKt__CountKt$count$4: kotlin.jvm.internal.Ref$IntRef $i
kotlinx.coroutines.debug.internal.DebugProbesImpl$startWeakRefCleanerThread$1: kotlinx.coroutines.debug.internal.DebugProbesImpl$startWeakRefCleanerThread$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.AwaitKt$joinAll$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: int label
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1: kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1 INSTANCE
kotlinx.coroutines.ChildContinuation: kotlinx.coroutines.CancellableContinuationImpl child
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: kotlinx.coroutines.flow.DistinctFlowImpl$collect$2 this$0
kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1: java.util.List $other
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.NonCancellable: java.lang.String message
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection$Companion Companion
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1: int label
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1: long J$0
kotlin.jvm.internal.FunInterfaceConstructorReference: java.lang.Class funInterface
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: kotlinx.coroutines.flow.FlowCollector $collector
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: int label
kotlin.io.path.LinkFollowing: kotlin.io.path.LinkFollowing INSTANCE
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: java.lang.Object L$1
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _size$FU
kotlinx.coroutines.ExecutorCoroutineDispatcher: kotlinx.coroutines.ExecutorCoroutineDispatcher$Key Key
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.ConcurrentWeakMap capturedCoroutinesMap
kotlin.jvm.internal.ArrayIterator: int index
kotlin.jvm.internal.IntCompanionObject: kotlin.jvm.internal.IntCompanionObject INSTANCE
kotlinx.coroutines.debug.internal.DebuggerInfo: java.util.List lastObservedStackTrace
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_SEPARATOR
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: int label
kotlinx.coroutines.stream.StreamFlow$collect$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: java.lang.Object result
kotlinx.coroutines.channels.Channel$Factory: java.lang.String DEFAULT_BUFFER_PROPERTY_NAME
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: java.lang.Object L$0
kotlinx.coroutines.scheduling.CoroutineScheduler: int maxPoolSize
kotlin.sequences.SequencesKt___SequencesKt$minus$3: kotlin.sequences.Sequence $this_minus
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object L$0
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: kotlinx.coroutines.debug.internal.StackTraceFrame $bottom
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object L$1
kotlinx.coroutines.internal.ConcurrentKt: java.lang.reflect.Method REMOVE_FUTURE_ON_CANCEL
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: long $timeout
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted Lazily
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: java.lang.Object result
kotlin.io.LineReader: java.nio.ByteBuffer byteBuf
kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$0
kotlinx.coroutines.android.HandlerContext: java.lang.String name
kotlin.ranges.ULongProgression: long first
kotlin.SynchronizedLazyImpl: kotlin.jvm.functions.Function0 initializer
kotlin.time.MonotonicTimeSource: long zero
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: int label
kotlinx.coroutines.selects.SelectImplementation$ClauseData: int indexInSegment
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: kotlinx.coroutines.flow.internal.SendingCollector $collector
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: long index
kotlinx.coroutines.internal.AtomicOp: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _consensus$FU
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
kotlin.jvm.internal.ArrayLongIterator: long[] array
kotlin.reflect.TypesJVMKt$typeToString$unwrap$1: kotlin.reflect.TypesJVMKt$typeToString$unwrap$1 INSTANCE
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1: int label
kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong COROUTINE_ID
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1: kotlin.jvm.internal.Ref$BooleanRef $removed
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Failed failed
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object L$3
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1: int label
kotlin.ranges.LongRange: kotlin.ranges.LongRange EMPTY
kotlin.sequences.MergingSequence: kotlin.sequences.Sequence sequence2
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1: kotlinx.coroutines.flow.Flow[] $flowArray
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: java.lang.Object result
kotlinx.coroutines.sync.MutexImpl: kotlin.jvm.functions.Function3 onSelectCancellationUnlockConstructor
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: java.lang.Object L$2
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String $indent
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String errorHint
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: long sequenceNumber
kotlinx.coroutines.scheduling.WorkQueueKt: long TASK_STOLEN
kotlin.text.Typography: char almostEqual
kotlin.collections.SlidingWindowKt$windowedIterator$1: boolean $reuseBuffer
kotlin.sequences.TransformingIndexedSequence: kotlin.sequences.Sequence sequence
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: kotlinx.coroutines.channels.ReceiveChannel $this_drop
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: java.lang.Object result
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol NO_CLOSE_CAUSE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object L$0
kotlin.text.CharCategory: kotlin.text.CharCategory SURROGATE
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CancelHandler cancelHandler
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$0
kotlin.sequences.DistinctSequence: kotlin.sequences.Sequence source
kotlin.jvm.internal.CharCompanionObject: kotlin.jvm.internal.CharCompanionObject INSTANCE
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int[] $this_asList
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: kotlinx.coroutines.android.HandlerContext this$0
kotlin.sequences.DropWhileSequence$iterator$1: java.lang.Object nextItem
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1: java.lang.Object result
kotlin.sequences.SequencesKt___SequencesKt$minus$2: kotlin.sequences.Sequence $this_minus
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1 this$0
kotlin.ranges.ClosedDoubleRange: double _start
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: java.lang.Object L$0
kotlinx.coroutines.JobSupport$SelectOnJoinCompletionHandler: kotlinx.coroutines.selects.SelectInstance select
kotlinx.coroutines.selects.SelectImplementation: int indexInSegment
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
kotlin.reflect.WildcardTypeImpl: kotlin.reflect.WildcardTypeImpl$Companion Companion
kotlin.jvm.internal.ShortCompanionObject: int SIZE_BYTES
kotlinx.coroutines.selects.SelectImplementation$doSelectSuspend$1: kotlinx.coroutines.selects.SelectImplementation this$0
kotlin.sequences.FlatteningSequence: kotlin.jvm.functions.Function1 iterator
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1: java.lang.Object L$0
kotlin.UByte: byte MIN_VALUE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object L$1
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1 this$0
kotlin.math.Constants: double taylor_2_bound
kotlinx.coroutines.channels.ConflatedBufferedChannel: int capacity
kotlinx.coroutines.InterruptibleKt: int FINISHED
kotlinx.coroutines.debug.AgentPremain: boolean enableCreationStackTraces
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.util.Iterator $iterator
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: int I$1
kotlin.random.PlatformRandom: java.util.Random impl
kotlinx.coroutines.flow.FlowKt__CountKt$count$4: kotlin.jvm.functions.Function2 $predicate
kotlin.Result: java.lang.Object value
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext$Element element
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: int I$0
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: int shift
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: boolean $reuseBuffer$inlined
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: int $count
kotlinx.coroutines.sync.SemaphoreImpl$tryResumeNextFromQueue$createNewSegment$1: kotlinx.coroutines.sync.SemaphoreImpl$tryResumeNextFromQueue$createNewSegment$1 INSTANCE
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget PROPERTY
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$1
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: int label
kotlin.io.LineReader: kotlin.io.LineReader INSTANCE
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: int label
kotlin.collections.builders.MapBuilder$EntryRef: int index
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater sendSegment$FU
kotlinx.coroutines.CoroutineDispatcher$Key$1: kotlinx.coroutines.CoroutineDispatcher$Key$1 INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: kotlin.jvm.functions.Function2 $transform
kotlin.jvm.internal.Reflection: kotlin.jvm.internal.ReflectionFactory factory
kotlin.internal.PlatformImplementationsKt: kotlin.internal.PlatformImplementations IMPLEMENTATIONS
kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.BroadcastChannelImpl broadcast
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted Eagerly
kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.ChildJob childJob
kotlin.text.ScreenFloatValueRegEx: kotlin.text.Regex value
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: kotlinx.coroutines.flow.SubscribedSharedFlow this$0
kotlin.text.Typography: kotlin.text.Typography INSTANCE
kotlin.text.DelimitedRangesSequence$iterator$1: int nextSearchIndex
kotlinx.coroutines.channels.ConflatedBufferedChannel: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
kotlin.jvm.internal.TypeReference: int IS_MUTABLE_COLLECTION_TYPE
kotlin.ranges.UIntRange: kotlin.ranges.UIntRange EMPTY
kotlin.text.Charsets: java.nio.charset.Charset UTF_16LE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object L$2
kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.SchedulerTimeSource schedulerTimeSource
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3: short[] $this_asSequence$inlined
kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult[] $VALUES
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlinx.coroutines.channels.ReceiveChannel $ticker
kotlin.DeprecationLevel: kotlin.DeprecationLevel WARNING
kotlin.text.RegexOption: kotlin.text.RegexOption DOT_MATCHES_ALL
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $action$inlined
kotlin.DeepRecursiveScopeImpl: java.lang.Object value
kotlin.jvm.internal.CharCompanionObject: char MIN_SURROGATE
kotlin.jvm.internal.ShortCompanionObject: short MAX_VALUE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: java.lang.Object L$1
kotlinx.coroutines.EventLoop: kotlin.collections.ArrayDeque unconfinedQueue
kotlin.sequences.DropWhileSequence$iterator$1: int dropState
kotlin.io.path.OnErrorResult: kotlin.io.path.OnErrorResult[] $VALUES
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2 this$0
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext collectContext
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol DONE_RCV
kotlinx.coroutines.ThreadLocalEventLoop: java.lang.ThreadLocal ref
kotlin.text.CharCategory: kotlin.text.CharCategory INITIAL_QUOTE_PUNCTUATION
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1$1: java.lang.Object $owner
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object L$1
kotlinx.coroutines.selects.SelectImplementation: kotlin.coroutines.CoroutineContext context
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicLongFieldUpdater deqIdx$FU
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: int label
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: kotlin.jvm.functions.Function2 $transform
kotlin.text.Regex$splitToSequence$1: kotlin.text.Regex this$0
kotlin.text.Typography: char middleDot
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] slots
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object L$1
kotlin.text.Typography: char plusMinus
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: kotlin.jvm.functions.Function2 $transform$inlined
kotlinx.coroutines.internal.ThreadState: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1 this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $predicate$inlined
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _removedRef$FU
kotlin.Result: kotlin.Result$Companion Companion
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName$Key Key
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int TAIL_SHIFT
kotlinx.coroutines.AwaitAll$AwaitAllNode: kotlinx.coroutines.AwaitAll this$0
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: int label
kotlin.collections.IndexingIterator: java.util.Iterator iterator
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: java.lang.Object result
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$2
kotlin.jvm.internal.PropertyReference: boolean syntheticJavaProperty
kotlin.collections.AbstractMap: kotlin.collections.AbstractMap$Companion Companion
kotlinx.coroutines.selects.SelectClause0Impl: java.lang.Object clauseObject
kotlin.text.CharCategory: kotlin.text.CharCategory CONTROL
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2: kotlin.jvm.functions.Function1 $block
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function0 $arrayFactory
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: int $count
kotlinx.coroutines.scheduling.WorkQueueKt: int BUFFER_CAPACITY_BASE
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher dispatcher
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1 this$0
kotlin.Pair: java.lang.Object first
kotlin.sequences.DropWhileSequence: kotlin.sequences.Sequence sequence
kotlin.sequences.SequencesKt___SequencesKt$minus$2: java.lang.Object[] $elements
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater receiveSegment$FU
kotlin.ranges.IntProgression: int first
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlin.collections.builders.SerializedCollection: kotlin.collections.builders.SerializedCollection$Companion Companion
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2: java.util.Comparator $this_thenByDescending
kotlin.properties.Delegates$observable$1: kotlin.jvm.functions.Function3 $onChange
kotlin.time.Duration: long ZERO
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: java.lang.Object result
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: java.lang.Object L$0
kotlin.ranges.IntProgressionIterator: int finalElement
kotlin.text.MatcherMatchResult: java.util.regex.Matcher matcher
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1: kotlin.sequences.Sequence $this_groupingBy
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: kotlin.jvm.functions.Function3 $predicate
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method getModuleMethod
kotlin.text.MatcherMatchResult$groups$1: kotlin.text.MatcherMatchResult this$0
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: int label
kotlinx.coroutines.InvokeOnCancel: kotlin.jvm.functions.Function1 handler
kotlin.collections.ArraysKt___ArraysKt$withIndex$3: short[] $this_withIndex
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2: long $timeoutMillis
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1: int label
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String baseContinuationImplClass
kotlinx.coroutines.scheduling.LimitingDispatcher: int parallelism
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3: java.nio.file.Path $target
kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol DONE
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String lastObservedThreadState
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.internal.ThreadContextKt$findOne$1 INSTANCE
kotlin.text.CharCategory: kotlin.text.CharCategory UPPERCASE_LETTER
kotlin.sequences.ConstrainedOnceSequence: java.util.concurrent.atomic.AtomicReference sequenceRef
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol SUSPEND
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: java.lang.Object L$0
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object L$5
kotlinx.coroutines.internal.Segment: long id
kotlin.time.TimeSource$Monotonic: kotlin.time.TimeSource$Monotonic INSTANCE
kotlinx.coroutines.flow.SharedFlowImpl: int replay
kotlinx.coroutines.sync.SemaphoreImpl: long deqIdx
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: kotlin.jvm.functions.Function1 $selector
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String dispatcher
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: long $retries
kotlin.ranges.CharProgressionIterator: boolean hasNext
kotlin.text.CharCategory: int value
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: int label
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$4
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: short[] $this_asList
kotlin.time.DurationUnit: kotlin.time.DurationUnit MILLISECONDS
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: kotlinx.coroutines.flow.Flow $this_debounceInternal
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1 this$0
kotlinx.coroutines.internal.FastServiceLoader: java.lang.String PREFIX
kotlin.jvm.internal.LongSpreadBuilder: long[] values
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: int label
kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_ManyReady
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: kotlin.jvm.functions.Function6 $transform$inlined
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: java.lang.Object $receiver$inlined
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String stackTraceRecoveryClassName
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $VALUES
kotlin.jvm.internal.TypeReference$asString$args$1: kotlin.jvm.internal.TypeReference this$0
kotlin.io.path.DirectoryEntriesReader: boolean followLinks
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_flattenConcat$inlined
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1: kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1 INSTANCE
kotlin.UIntArray$Iterator: int[] array
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object L$1
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlinx.coroutines.channels.Channel $resultChannel
kotlin.reflect.KTypeProjection$WhenMappings: int[] $EnumSwitchMapping$0
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicLongFieldUpdater sendersAndCloseStatus$FU
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlin.sequences.SubSequence: kotlin.sequences.Sequence sequence
kotlin.ranges.CharRange: kotlin.ranges.CharRange EMPTY
kotlin.text.Regex$splitToSequence$1: int label
kotlin.text.Typography: char nbsp
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_takeWhile$inlined
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: kotlinx.coroutines.JobSupport this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: int label
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object L$2
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality OTHER_NEUTRALS
kotlin.jvm.internal.ArrayShortIterator: int index
kotlin.io.LinesSequence$iterator$1: java.lang.String nextValue
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: java.lang.Object L$2
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult SUCCESSFUL
kotlin.ranges.ComparableOpenEndRange: java.lang.Comparable start
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget FILE
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2: java.util.Comparator $comparator
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$2
kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_ManyNotReady
kotlin.jvm.internal.TypeReference: int IS_NOTHING_TYPE
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int rngState
kotlin.io.FilesKt__UtilsKt$copyRecursively$2: kotlin.jvm.functions.Function2 $onError
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: kotlin.jvm.internal.Ref$ObjectRef $accumulator
kotlin.collections.builders.ListBuilder: kotlin.collections.builders.ListBuilder root
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilderEntries entriesView
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: java.lang.Object result
kotlinx.coroutines.scheduling.TasksKt: int MAX_POOL_SIZE
kotlin.collections.ArrayDeque: java.lang.Object[] emptyElementData
kotlinx.coroutines.internal.WeakMapCtorCache: java.util.concurrent.locks.ReentrantReadWriteLock cacheLock
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $action$inlined
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1: kotlin.jvm.functions.Function3 $transform$inlined
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol STATE_REG
kotlin.jvm.internal.ByteCompanionObject: int SIZE_BYTES
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: kotlinx.coroutines.channels.BroadcastChannelImpl this$0
kotlinx.coroutines.scheduling.CoroutineScheduler: long BLOCKING_MASK
kotlinx.coroutines.sync.MutexImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater owner$FU
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1: kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_withIndex$inlined
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: java.lang.Object L$0
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol BUFFERED
kotlin.sequences.SequencesKt__SequencesKt$flatten$3: kotlin.sequences.SequencesKt__SequencesKt$flatten$3 INSTANCE
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind COMPILER_VERSION
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: int label
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: kotlinx.coroutines.flow.CancellableFlowImpl$collect$2 this$0
kotlinx.coroutines.scheduling.LimitingDispatcher: kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher dispatcher
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: java.lang.Object L$1
kotlinx.coroutines.channels.BroadcastCoroutine: kotlinx.coroutines.channels.BroadcastChannel _channel
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $predicate$inlined
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol CLOSE_HANDLER_CLOSED
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart UNDISPATCHED
kotlin.Triple: java.lang.Object second
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: boolean $ignoreCase
kotlinx.coroutines.internal.ClassValueCtorCache: kotlinx.coroutines.internal.ClassValueCtorCache INSTANCE
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$0
kotlinx.coroutines.internal.LockFreeLinkedListKt: int FAILURE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: kotlinx.coroutines.channels.ReceiveChannel $this_take
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind[] $VALUES
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1: int $i
kotlinx.coroutines.internal.ConcurrentLinkedListKt: int POINTERS_SHIFT
kotlinx.coroutines.scheduling.CoroutineScheduler: int BLOCKING_SHIFT
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode newNode
kotlin.sequences.TakeSequence: int count
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: kotlinx.coroutines.flow.Flow $this_sample
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: java.lang.Object result
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1$1: kotlinx.coroutines.sync.MutexImpl this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: java.lang.Object L$1
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart ATOMIC
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: int label
kotlin.text.StringsKt___StringsKt$groupingBy$1: kotlin.jvm.functions.Function1 $keySelector
kotlinx.coroutines.scheduling.DefaultIoScheduler: kotlinx.coroutines.CoroutineDispatcher default
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $transform$inlined
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater parkedWorkersStack$FU
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: kotlin.jvm.functions.Function2 $predicate
kotlinx.coroutines.channels.BufferedChannelKt: int EXPAND_BUFFER_COMPLETION_WAIT_ITERATIONS
androidx.work.impl.utils.futures.AbstractFuture$Waiter: java.lang.Thread thread
kotlin.coroutines.CombinedContext$writeReplace$1: kotlin.jvm.internal.Ref$IntRef $index
kotlin.collections.AbstractCollection$toString$1: kotlin.collections.AbstractCollection this$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: int I$1
kotlin.reflect.KTypeProjection: kotlin.reflect.KType type
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
kotlinx.coroutines.JobSupportKt: int RETRY
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher IO
kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_Failed
kotlin.collections.builders.SerializedMap: java.util.Map map
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: java.lang.Object value
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_ARABIC
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String lastObservedThreadName
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: java.lang.Object L$0
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1: kotlin.jvm.functions.Function1 $keySelector
kotlin.DeepRecursiveScopeImpl: kotlin.jvm.functions.Function3 function
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: int label
kotlin.text.Regex$findAll$2: kotlin.text.Regex$findAll$2 INSTANCE
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _state
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: kotlin.jvm.functions.Function2 $operation
kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator itemIterator
kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlin.collections.AbstractIterator: java.lang.Object nextValue
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1: kotlinx.coroutines.channels.Channel $resultChannel
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_runningReduce$inlined
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: java.lang.Object owner
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion Companion
kotlinx.coroutines.ThreadState: int _state
kotlin.ranges.LongProgressionIterator: long step
kotlin.ranges.CharProgression: char first
kotlin.ranges.ULongProgression: long step
kotlin.time.DurationUnitKt__DurationUnitJvmKt$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: kotlinx.coroutines.flow.MutableSharedFlow $shared
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: kotlinx.coroutines.CancellableContinuationImpl cont
kotlin.collections.RingBuffer$iterator$1: int count
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2: kotlin.jvm.functions.Function1 $this_createCoroutineUnintercepted$inlined
kotlinx.coroutines.flow.StartedLazily$command$1: kotlinx.coroutines.flow.StateFlow $subscriptionCount
kotlinx.coroutines.channels.BufferedChannel$receiveImpl$1: kotlinx.coroutines.channels.BufferedChannel$receiveImpl$1 INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1: kotlinx.coroutines.flow.Flow[] $flows
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] $VALUES
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: java.lang.Object L$1
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1: boolean $ignoreCase
kotlinx.coroutines.flow.ChannelAsFlow: java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumed$FU
kotlin.concurrent.ThreadsKt$thread$thread$1: kotlin.jvm.functions.Function0 $block
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: kotlin.sequences.Sequence $this_runningReduceIndexed
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: byte[] $this_asList
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object L$0
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _availablePermits$FU
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.scheduling.CoroutineScheduler: int TERMINATED
kotlinx.coroutines.scheduling.TasksKt: long IDLE_WORKER_KEEP_ALIVE_NS
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: kotlin.jvm.internal.Ref$ObjectRef $accumulator
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
kotlin.coroutines.SafeContinuation: java.lang.Object result
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: kotlin.jvm.functions.Function2 $operation
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1 this$0
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object L$1
kotlin.text.Typography: char leftGuillemete
kotlin.sequences.FilteringSequence: kotlin.sequences.Sequence sequence
kotlinx.coroutines.scheduling.NanoTimeSource: kotlinx.coroutines.scheduling.NanoTimeSource INSTANCE
kotlin.UShort: short MAX_VALUE
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$2
kotlin.reflect.WildcardTypeImpl: kotlin.reflect.WildcardTypeImpl STAR
kotlin.jvm.internal.CallableReference$NoReceiver: kotlin.jvm.internal.CallableReference$NoReceiver INSTANCE
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention SOURCE
kotlin.comparisons.NaturalOrderComparator: kotlin.comparisons.NaturalOrderComparator INSTANCE
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: java.lang.Object result
kotlin.jvm.internal.CallableReference: java.lang.String signature
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object L$0
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: kotlin.DeepRecursiveScopeImpl this$0
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode oldNext
kotlinx.coroutines.flow.internal.ChannelFlowOperator: kotlinx.coroutines.flow.Flow flow
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: int label
kotlinx.coroutines.sync.MutexKt: int HOLDS_LOCK_ANOTHER_OWNER
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: kotlinx.coroutines.flow.StartedWhileSubscribed this$0
kotlinx.coroutines.internal.WeakMapCtorCache: java.util.WeakHashMap exceptionCtors
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function2 onFail
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: java.lang.Object result
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality NONSPACING_MARK
kotlin.io.encoding.Base64: kotlin.io.encoding.Base64$Default Default
kotlin.collections.ArraysKt___ArraysKt$withIndex$1: java.lang.Object[] $this_withIndex
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: java.lang.Object result
kotlin.text.CharDirectionality: int value
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: int label
kotlin.text.StringsKt___StringsKt$windowedSequence$2: java.lang.CharSequence $this_windowedSequence
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction[] $VALUES
kotlin.reflect.ParameterizedTypeImpl: java.lang.Class rawType
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode SYNCHRONIZED
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$2: kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$2 INSTANCE
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1: kotlin.jvm.functions.Function1 $selector
kotlinx.coroutines.BuildersKt__Builders_commonKt: int UNDECIDED
kotlinx.coroutines.InterruptibleKt: int INTERRUPTED
kotlinx.coroutines.channels.ChannelResult: java.lang.Object holder
kotlin.sequences.SequencesKt___SequencesKt$zip$1: kotlin.sequences.SequencesKt___SequencesKt$zip$1 INSTANCE
kotlin.UByte: int SIZE_BYTES
kotlin.KotlinVersionCurrentValue: kotlin.KotlinVersionCurrentValue INSTANCE
kotlin.text.DelimitedRangesSequence: int limit
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: int $n
kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper: int installations
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: int label
kotlin.io.FilePathComponents: java.io.File root
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: int label
kotlin.text.Typography: char greaterOrEqual
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: java.lang.Object L$0
kotlinx.coroutines.JobSupport$onJoin$1: kotlinx.coroutines.JobSupport$onJoin$1 INSTANCE
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.text.DelimitedRangesSequence this$0
kotlin.collections.ArrayDeque: kotlin.collections.ArrayDeque$Companion Companion
kotlin.io.encoding.Base64: int mimeGroupsPerLine
kotlin.collections.AbstractIterator$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object result
kotlin.math.MathKt: double PI
kotlin.io.FileTreeWalk$FileTreeWalkIterator: java.util.ArrayDeque state
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: int index
kotlin.collections.builders.ListBuilder$Itr: kotlin.collections.builders.ListBuilder list
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: java.lang.Object result
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: kotlinx.coroutines.flow.CallbackFlowBuilder this$0
kotlin.collections.builders.MapBuilderEntries: kotlin.collections.builders.MapBuilder backing
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: double[] $this_asList
kotlinx.coroutines.selects.SelectImplementation$doSelectSuspend$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object L$1
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: int label
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality SEGMENT_SEPARATOR
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: kotlin.jvm.internal.Ref$ObjectRef $accumulator
kotlin.sequences.DistinctIterator: java.util.Iterator source
kotlin.jvm.internal.Reflection: java.lang.String REFLECTION_NOT_AVAILABLE
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_dropWhile$inlined
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol POISONED
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: kotlin.jvm.functions.Function2 $transform$inlined
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.StateFlowImpl$collect$1: kotlinx.coroutines.flow.StateFlowImpl this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: int label
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: kotlinx.coroutines.channels.ReceiveChannel $this_filter
kotlin.text.CharCategory: kotlin.text.CharCategory END_PUNCTUATION
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1: kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1 INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object L$0
kotlin.text.SystemProperties: java.lang.String LINE_SEPARATOR
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $transform$inlined
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2: int label
kotlinx.coroutines.internal.LockFreeLinkedListKt: int SUCCESS
kotlinx.coroutines.channels.Channel$Factory: int BUFFERED
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.lang.String state
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
kotlin.ranges.CharProgressionIterator: int next
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2 this$0
kotlin.SynchronizedLazyImpl: java.lang.Object _value
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: java.lang.Object result
kotlinx.coroutines.selects.SelectImplementation$processResultAndInvokeBlockRecoveringException$1: java.lang.Object result
kotlin.text.Typography: char registered
kotlin.io.LineReader: boolean directEOL
kotlinx.coroutines.channels.BufferedChannel$onSend$2: kotlinx.coroutines.channels.BufferedChannel$onSend$2 INSTANCE
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.internal.MainDispatcherLoader INSTANCE
kotlinx.coroutines.JobSupportKt: int FALSE
kotlin.text.MatchResult$Destructured: kotlin.text.MatchResult match
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: java.lang.Object L$0
kotlinx.coroutines.DelayKt$awaitCancellation$1: java.lang.Object result
kotlin.SafePublicationLazyImpl: java.lang.Object _value
kotlin.io.path.PathWalkOption: kotlin.io.path.PathWalkOption FOLLOW_LINKS
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean singleConsumer
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object L$0
kotlin.text.Regex$splitToSequence$1: int I$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2 this$0
kotlin.collections.EmptySet: long serialVersionUID
kotlin.text.CharCategory: kotlin.text.CharCategory MATH_SYMBOL
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5 this$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlin.jvm.internal.ArrayDoubleIterator: double[] array
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention RUNTIME
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$1
kotlinx.coroutines.flow.SharingConfig: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
kotlin.DeprecationLevel: kotlin.DeprecationLevel ERROR
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1 this$0
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object L$1
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2: boolean $followLinks
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: kotlin.jvm.internal.Ref$BooleanRef $matched
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.channels.BufferedChannelKt: long SENDERS_COUNTER_MASK
kotlin.InitializedLazyImpl: java.lang.Object value
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: java.lang.Object result
kotlinx.coroutines.CancellableContinuationImplKt: int SUSPENDED
kotlin.collections.MapsKt__MapsJVMKt: int INT_MAX_POWER_OF_TWO
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: int label
kotlinx.coroutines.flow.SharedFlowImpl: int bufferSize
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: kotlinx.coroutines.CancellableContinuation $continuation$inlined
kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$2
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
kotlinx.coroutines.CancelFutureOnCompletion: java.util.concurrent.Future future
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlin.jvm.internal.ArrayFloatIterator: float[] array
kotlinx.coroutines.debug.internal.StackTraceFrame: java.lang.StackTraceElement stackTraceElement
kotlin.jvm.internal.TypeParameterReference: java.util.List bounds
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object head
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$2
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: int label
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget CLASS
kotlin.io.ConstantsKt: int MINIMUM_BLOCK_SIZE
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object L$3
kotlin.math.Constants: kotlin.math.Constants INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object L$1
kotlinx.coroutines.flow.ReadonlyStateFlow: kotlinx.coroutines.Job job
kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1: int label
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4: java.nio.file.Path $this_copyToRecursively
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind EXTENSION_RECEIVER
kotlin.collections.ArrayAsCollection: boolean isVarargs
kotlinx.coroutines.InterruptibleKt: int INTERRUPTING
kotlin.sequences.MergingSequence: kotlin.jvm.functions.Function2 transform
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: long sequenceNumber
kotlinx.coroutines.CoroutineId: long id
kotlinx.coroutines.DefaultExecutor: java.lang.String THREAD_NAME
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4: int[] $this_asIterable$inlined
kotlin.io.LinesSequence$iterator$1: kotlin.io.LinesSequence this$0
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: kotlinx.coroutines.flow.SubscribedFlowCollector this$0
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater controlState$FU
kotlinx.coroutines.CoroutineContextKt$foldCopies$1: kotlinx.coroutines.CoroutineContextKt$foldCopies$1 INSTANCE
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: int label
kotlin.collections.builders.ListBuilder$Itr: int index
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: java.lang.Object L$0
kotlinx.coroutines.JobSupport$Finishing: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isCompleting$FU
kotlin.collections.AbstractList$ListIteratorImpl: kotlin.collections.AbstractList this$0
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: int $step$inlined
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: byte[] $this_asList
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: java.lang.Object L$0
kotlin.sequences.TakeWhileSequence$iterator$1: java.lang.Object nextItem
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $flow$inlined
kotlinx.coroutines.sync.MutexKt: int TRY_LOCK_FAILED
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.internal.Symbol NONE
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1: kotlinx.coroutines.flow.Flow[] $flows$inlined
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: int label
kotlinx.coroutines.scheduling.CoroutineScheduler: int CPU_PERMITS_SHIFT
kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object L$1
kotlin.SafePublicationLazyImpl: kotlin.jvm.functions.Function0 initializer
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object L$1
kotlinx.coroutines.CancellableContinuationImplKt: int INDEX_MASK
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: java.lang.String schedulerName
kotlin.ranges.ULongRange: kotlin.ranges.ULongRange EMPTY
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: int $n
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1: kotlinx.coroutines.flow.Flow[] $flowArray
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $transform$inlined
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $flow$inlined
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: int _size
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
kotlinx.coroutines.internal.ThreadSafeHeap: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _size$FU
kotlin.sequences.SequenceBuilderIterator: kotlin.coroutines.Continuation nextStep
kotlinx.coroutines.selects.SelectKt: int TRY_SELECT_ALREADY_SELECTED
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $transform$inlined
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper: java.util.concurrent.atomic.AtomicLongFieldUpdater sequenceNumber$FU
kotlin.io.ByteStreamsKt$iterator$1: java.io.BufferedInputStream $this_iterator
kotlin.text.Charsets: java.nio.charset.Charset utf_32be
kotlin.io.path.OnErrorResult: kotlin.io.path.OnErrorResult SKIP_SUBTREE
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: java.lang.Object $initial
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1 this$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: int label
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand STOP_AND_RESET_REPLAY_CACHE
kotlinx.coroutines.flow.internal.ChannelFlowMerge: int concurrency
kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1: java.lang.Class $klass
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9: char[] $this_asSequence$inlined
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality UNDEFINED
kotlin.coroutines.jvm.internal.RunSuspend: kotlin.Result result
kotlin.ranges.UIntProgression: int last
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$3: java.lang.reflect.Constructor $constructor
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.UndispatchedCoroutine: java.lang.ThreadLocal threadStateToRecover
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater tail$FU
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1: int $count$inlined
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol PARAM_CLAUSE_0
kotlin.time.MonotonicTimeSource: kotlin.time.MonotonicTimeSource INSTANCE
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1: int label
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult CANCELLED
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8 this$0
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: java.lang.Object key
kotlin.jvm.internal.ArrayShortIterator: short[] array
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality PARAGRAPH_SEPARATOR
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind VALUE
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlinx.coroutines.flow.internal.NoOpContinuation INSTANCE
kotlin.collections.builders.MapBuilder: int length
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object L$3
kotlinx.coroutines.internal.OnDemandAllocatingPool: java.util.concurrent.atomic.AtomicReferenceArray elements
kotlin.jvm.internal.Ref$BooleanRef: boolean element
kotlin.io.FileTreeWalk$WalkState: java.io.File root
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1: kotlinx.coroutines.channels.ReceiveChannel[] $channels
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: int label
kotlin.text.DelimitedRangesSequence$iterator$1: int counter
kotlinx.coroutines.scheduling.CoroutineScheduler: long PARKED_INDEX_MASK
kotlinx.coroutines.flow.ChannelAsFlow: int consumed
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlin.jvm.internal.ArrayBooleanIterator: int index
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: int AVAILABLE_PROCESSORS
kotlinx.coroutines.RunnableKt$Runnable$1: kotlin.jvm.functions.Function0 $block
kotlin.jvm.internal.StringCompanionObject: kotlin.jvm.internal.StringCompanionObject INSTANCE
kotlin.ranges.LongProgression: long step
kotlin.enums.EnumEntriesList: kotlin.jvm.functions.Function0 entriesProvider
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1: kotlinx.coroutines.selects.SelectBuilderImpl this$0
kotlin.io.path.PathRelativizer: java.nio.file.Path emptyPath
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1: java.nio.file.Path $this_copyToRecursively
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.util.concurrent.atomic.AtomicIntegerFieldUpdater workerCtl$FU
kotlin.io.encoding.EncodeOutputStream: int byteBufferLength
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: int label
kotlin.text.RegexOption: kotlin.text.RegexOption COMMENTS
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: kotlinx.coroutines.channels.BufferedChannel this$0
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: long $timeout
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlin.jvm.functions.Function1 defaultKeySelector
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3: kotlin.jvm.functions.Function6 $transform$inlined$1
kotlinx.coroutines.scheduling.TasksKt: int TASK_PROBABLY_BLOCKING
kotlinx.coroutines.DispatchedTaskKt: int MODE_ATOMIC
kotlinx.coroutines.flow.DistinctFlowImpl: kotlinx.coroutines.flow.Flow upstream
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1: kotlin.jvm.functions.Function1 $block
kotlin.collections.builders.SerializedCollection: int tagList
kotlinx.coroutines.selects.SelectKt: int TRY_SELECT_SUCCESSFUL
kotlinx.coroutines.sync.SemaphoreKt: int MAX_SPIN_CYCLES
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $action$inlined
kotlin.io.path.DirectoryEntriesReader: kotlin.collections.ArrayDeque entries
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: long $delayMillis
kotlin.LazyKt__LazyJVMKt$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: int label
kotlinx.coroutines.EventLoop_commonKt: long MAX_MS
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] $VALUES
kotlinx.coroutines.selects.OnTimeout$selectClause$1: kotlinx.coroutines.selects.OnTimeout$selectClause$1 INSTANCE
kotlinx.coroutines.JobSupport$SelectOnJoinCompletionHandler: kotlinx.coroutines.JobSupport this$0
kotlinx.coroutines.LazyStandaloneCoroutine: kotlin.coroutines.Continuation continuation
kotlin.io.FileSystemException: java.io.File file
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: java.lang.Object L$0
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: int label
kotlinx.coroutines.channels.Channel$Factory: int RENDEZVOUS
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int INITIAL_CAPACITY
kotlinx.coroutines.JobSupport$SelectOnAwaitCompletionHandler: kotlinx.coroutines.selects.SelectInstance select
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $transform$inlined$1
kotlinx.coroutines.CoroutineExceptionHandler: kotlinx.coroutines.CoroutineExceptionHandler$Key Key
kotlin.collections.EmptyMap: kotlin.collections.EmptyMap INSTANCE
kotlinx.coroutines.selects.SelectClause0Impl: kotlin.jvm.functions.Function3 onCancellationConstructor
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater lastScheduledTask$FU
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: long J$0
kotlinx.coroutines.selects.SelectImplementation: java.util.concurrent.atomic.AtomicReferenceFieldUpdater state$FU
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState: java.io.File[] fileList
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: int label
kotlin.io.FilePathComponents: java.util.List segments
kotlin.text.DelimitedRangesSequence$iterator$1: int nextState
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6: float[] $this_asIterable$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlin.io.path.DefaultCopyActionContext: kotlin.io.path.DefaultCopyActionContext INSTANCE
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: kotlinx.coroutines.flow.FlowCollector $downStream
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind INSTANCE
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: java.lang.Object result
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: int label
kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_Ready
kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1: kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: int label
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: int label
kotlinx.coroutines.channels.ProduceKt$awaitClose$2: kotlinx.coroutines.channels.ProduceKt$awaitClose$2 INSTANCE
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: kotlinx.coroutines.flow.Flow[] $flows
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: java.lang.Object L$0
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: kotlin.sequences.Sequence $this_shuffled
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.lang.ref.ReferenceQueue weakRefQueue
kotlin.random.KotlinRandom: kotlin.random.KotlinRandom$Companion Companion
kotlinx.coroutines.DefaultExecutor: long KEEP_ALIVE_NANOS
kotlin.ranges.OpenEndFloatRange: float _endExclusive
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4: java.util.stream.DoubleStream $this_asSequence$inlined
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: java.lang.Object result
kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory: kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory INSTANCE
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow _subscriptionCount
kotlin.sequences.TransformingSequence$iterator$1: kotlin.sequences.TransformingSequence this$0
kotlinx.coroutines.channels.Channel: int BUFFERED
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PRIVATE
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: int label
kotlinx.coroutines.JobSupport$AwaitContinuation: kotlinx.coroutines.JobSupport job
kotlinx.coroutines.sync.MutexKt$withLock$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object $initialValue
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: java.lang.Object L$1
kotlin.collections.AbstractList$SubList: int _size
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: int label
kotlinx.coroutines.scheduling.Task: long submissionTime
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2: byte[] $this_asSequence$inlined
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: int label
kotlin.time.Duration: long INFINITE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: int label
kotlin.text.MatcherMatchResult$groups$1$iterator$1: kotlin.text.MatcherMatchResult$groups$1 this$0
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.Continuation delegate
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: int corePoolSize
kotlin.ranges.ULongProgressionIterator: long finalElement
kotlin.jvm.internal.DoubleCompanionObject: double MAX_VALUE
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.util.concurrent.atomic.AtomicIntegerFieldUpdater load$FU
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1: kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl this$0
kotlin.UByteArray: byte[] storage
kotlin.sequences.SequenceBuilderIterator: java.util.Iterator nextIterator
kotlin.enums.EnumEntriesList: java.lang.Enum[] _entries
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: int label
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion
kotlin.collections.SlidingWindowKt$windowedIterator$1: int I$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object L$1
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decisionAndIndex$FU
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.Continuation completion
kotlinx.coroutines.debug.internal.StackTraceFrame: kotlin.coroutines.jvm.internal.CoroutineStackFrame callerFrame
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: java.lang.Object result
kotlinx.coroutines.AwaitAll: kotlinx.coroutines.Deferred[] deferreds
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: kotlin.jvm.functions.Function1 $this_bindCancellationFun
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object L$0
kotlin.jvm.internal.Lambda: int arity
kotlinx.coroutines.scheduling.Task: kotlinx.coroutines.scheduling.TaskContext taskContext
kotlin.time.Duration: long rawValue
kotlin.KotlinVersion: int major
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object L$0
kotlin.collections.AbstractMap: java.util.Set _keys
kotlin.jvm.internal.Ref$ShortRef: short element
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: java.lang.Object L$0
kotlin.ranges.UIntProgression: int first
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object L$0
kotlin.text.MatchGroup: kotlin.ranges.IntRange range
kotlin.UInt: kotlin.UInt$Companion Companion
kotlin.jvm.internal.LongCompanionObject: long MAX_VALUE
kotlin.collections.EmptyList: kotlin.collections.EmptyList INSTANCE
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection TOP_DOWN
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object L$0
kotlinx.coroutines.flow.ReadonlySharedFlow: kotlinx.coroutines.Job job
kotlinx.coroutines.DebugKt: boolean RECOVER_STACK_TRACES
kotlinx.coroutines.selects.SelectKt: int TRY_SELECT_CANCELLED
kotlin.UnsafeLazyImpl: kotlin.jvm.functions.Function0 initializer
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: kotlinx.coroutines.flow.FlowCollector $collector
kotlin.collections.ArrayDeque: int defaultMinCapacity
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: kotlinx.coroutines.flow.Flow $this_timeoutInternal
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: int label
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.internal.Symbol PENDING
kotlinx.coroutines.selects.SelectClause1Impl: kotlin.jvm.functions.Function3 processResFunc
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: java.lang.Object result
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_ACTIVE
kotlin.collections.IndexedValue: int index
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2 this$0
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1: java.lang.Object $element
kotlin.time.AbstractLongTimeSource$LongTimeMark: long startedAt
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: java.lang.Object L$1
kotlin.jvm.internal.AdaptedFunctionReference: int arity
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: int I$0
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: int label
kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object value
kotlinx.coroutines.Job$Key: kotlinx.coroutines.Job$Key $$INSTANCE
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection star
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: long $timeMillis
kotlin.text.CharDirectionality: kotlin.Lazy directionalityMap$delegate
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1: kotlin.jvm.functions.Function1 $selector
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: int label
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicLongFieldUpdater enqIdx$FU
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_LATEST
kotlin.io.FilesKt__FileReadWriteKt$readLines$1: java.util.ArrayList $result
kotlinx.coroutines.sync.SemaphoreSegment: java.util.concurrent.atomic.AtomicReferenceArray acquirers
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlinx.coroutines.flow.FlowCollector $downstream
kotlin.random.PlatformRandom: kotlin.random.PlatformRandom$Companion Companion
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberBuffered: kotlinx.coroutines.channels.BroadcastChannelImpl this$0
kotlin.io.encoding.Base64: int bytesPerGroup
kotlinx.coroutines.EventLoop_commonKt: int SCHEDULE_COMPLETED
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object L$1
kotlin.time.DurationUnitKt__DurationUnitKt$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.internal.LockFreeLinkedListKt: int UNDECIDED
kotlin.ranges.CharProgressionIterator: int finalElement
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.Executor executor
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: kotlin.coroutines.CoroutineContext $scopeContext
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2: java.nio.file.Path $target
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
kotlin.ranges.UIntProgressionIterator: int step
kotlin.io.path.PathTreeWalk$bfsIterator$1: kotlin.io.path.PathTreeWalk this$0
kotlin.collections.builders.MapBuilder: int[] hashArray
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_take$inlined
kotlin.random.XorWowRandom: int v
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.selects.SelectClause2Impl: kotlin.jvm.functions.Function3 onCancellationConstructor
kotlin.UByteArray$Iterator: int index
kotlin.io.ConstantsKt: int DEFAULT_BLOCK_SIZE
kotlin.text.StringsKt___StringsKt$windowedSequence$1: kotlin.text.StringsKt___StringsKt$windowedSequence$1 INSTANCE
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: int label
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2: kotlin.jvm.functions.Function3 $onError
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object L$2
kotlin.text.MatchGroup: java.lang.String value
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method nameMethod
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.Symbol REMOVE_FROZEN
kotlinx.coroutines.internal.LimitedDispatcher: java.lang.Object workerAllocationLock
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2: kotlinx.coroutines.flow.FlowCollector $collector
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1 this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: int label
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: int label
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet: kotlin.jvm.functions.Function2 factory
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_EMBEDDING
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.text.SimpleDateFormat dateFormat
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: int label
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: kotlin.jvm.internal.Ref$ObjectRef $lastValue
kotlinx.coroutines.flow.FlowKt: java.lang.String DEFAULT_CONCURRENCY_PROPERTY_NAME
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2: kotlin.reflect.KClass $klass$inlined
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: java.lang.Object result
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean mayHaveLocalTasks
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object L$1
kotlinx.coroutines.DefaultExecutor: int SHUTDOWN_ACK
kotlinx.coroutines.selects.OnTimeout$register$$inlined$Runnable$1: kotlinx.coroutines.selects.SelectInstance $select$inlined
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1: kotlin.jvm.functions.Function2 $transform$inlined$1
kotlin.ULongArray: long[] storage
kotlin.collections.builders.MapBuilder$Itr: kotlin.collections.builders.MapBuilder map
kotlin.ranges.IntProgressionIterator: boolean hasNext
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: int corePoolSize
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$2: kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$2 INSTANCE
kotlinx.coroutines.BuildersKt__Builders_commonKt: int SUSPENDED
kotlinx.coroutines.Active: kotlinx.coroutines.Active INSTANCE
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget PROPERTY_GETTER
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: int I$1
kotlin.jvm.internal.TypeReference: int IS_MARKED_NULLABLE
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $predicate$inlined
kotlin.UByte: byte data
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: kotlin.jvm.functions.Function2 $transform$inlined
kotlinx.coroutines.flow.internal.SendingCollector: kotlinx.coroutines.channels.SendChannel channel
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol CHANNEL_CLOSED
kotlin.sequences.SubSequence: int startIndex
kotlin.ranges.IntProgression: int step
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: java.lang.Iterable flows
kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_SYMBOL
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int ADD_FROZEN
kotlinx.coroutines.selects.SelectClause2Impl: kotlin.jvm.functions.Function3 regFunc
kotlin.Pair: java.lang.Object second
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: java.lang.Object L$0
kotlinx.coroutines.JobSupport$Finishing: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _exceptionsHolder$FU
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1: kotlin.jvm.functions.Function1 $keySelector
kotlin.text.Charsets: java.nio.charset.Charset UTF_16
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $predicate$inlined
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.WorkQueue localQueue
kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1: kotlinx.coroutines.channels.BroadcastChannel $this_asFlow$inlined
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$0
kotlin.collections.builders.ListBuilder: int length
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $action$inlined
kotlinx.coroutines.sync.SemaphoreImpl: long enqIdx
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object L$1
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol SEALED
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: int label
kotlin.io.path.ExceptionsCollector: java.util.List collectedExceptions
kotlinx.coroutines.scheduling.LimitingDispatcher: int taskMode
kotlin.sequences.SubSequence$iterator$1: java.util.Iterator iterator
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long TAIL_MASK
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
kotlin.text.Regex: java.util.regex.Pattern nativePattern
kotlin.jvm.internal.Ref$DoubleRef: double element
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality ARABIC_NUMBER
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object L$1
kotlin.jvm.internal.TypeParameterReference: kotlin.reflect.KVariance variance
kotlin.collections.ArraysKt___ArraysKt$withIndex$6: float[] $this_withIndex
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: int I$0
kotlin.text.Typography: char prime
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object L$1
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object disposableHandleOrSegment
kotlin.ULong: kotlin.ULong$Companion Companion
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object L$1
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.NonCancellable INSTANCE
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int MIN_ADD_SPIN_CAPACITY
kotlin.collections.builders.MapBuilder: int size
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: java.lang.Object L$0
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: int MAGIC
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: short[] $this_asList
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumerIndex$FU
kotlinx.coroutines.flow.ThrowingCollector: java.lang.Throwable e
kotlinx.coroutines.BlockingEventLoop: java.lang.Thread thread
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.FlowCollector $this_combineInternal
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2: kotlin.jvm.functions.Function5 $transform$inlined$1
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: java.lang.Object L$0
kotlin.text.Typography: char leftDoubleQuote
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: kotlinx.coroutines.debug.internal.Marked MARKED_NULL
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: int label
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: kotlinx.coroutines.channels.ReceiveChannel $this_map
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1: char[] $delimiters
kotlin.ranges.IntRange: kotlin.ranges.IntRange EMPTY
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object L$0
kotlin.text.Regex$Serialized: java.lang.String pattern
kotlinx.coroutines.CoroutineExceptionHandler$Key: kotlinx.coroutines.CoroutineExceptionHandler$Key $$INSTANCE
kotlinx.coroutines.DispatchedCoroutine: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decision$FU
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
kotlin.Unit: kotlin.Unit INSTANCE
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: java.lang.Object L$0
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand STOP
kotlin.text.Regex$findAll$1: java.lang.CharSequence $input
kotlin.text.RegexKt$fromInt$1$1: int $value
kotlin.text.CharCategory: kotlin.text.CharCategory CURRENCY_SYMBOL
kotlinx.coroutines.channels.Channel$Factory: int OPTIONAL_CHANNEL
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: kotlinx.coroutines.flow.FlowCollector $downstream
kotlin.text.CharCategory: kotlin.text.CharCategory ENCLOSING_MARK
kotlinx.coroutines.flow.DistinctFlowImpl: kotlin.jvm.functions.Function1 keySelector
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: java.lang.Object L$0
kotlinx.coroutines.sync.MutexKt$withLock$1: java.lang.Object result
kotlin.UShort: int SIZE_BYTES
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: int I$1
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1 this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object L$0
kotlinx.coroutines.DebugKt: boolean ASSERTIONS_ENABLED
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$2: kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$2 INSTANCE
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object L$0
kotlin.text.Typography: char ellipsis
kotlin.text.Regex$findAll$1: kotlin.text.Regex this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: int label
kotlinx.coroutines.flow.internal.SafeCollector: kotlinx.coroutines.flow.FlowCollector collector
kotlin.io.path.PathWalkOption: kotlin.io.path.PathWalkOption BREADTH_FIRST
kotlinx.coroutines.DisposeOnCompletion: kotlinx.coroutines.DisposableHandle handle
kotlinx.coroutines.internal.OnDemandAllocatingPool: kotlin.jvm.functions.Function1 create
kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5: java.nio.file.Path $this_copyToRecursively
kotlin.jvm.internal.DoubleCompanionObject: double POSITIVE_INFINITY
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: kotlin.jvm.functions.Function4 $transform$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: int label
kotlinx.coroutines.DefaultExecutor: int SHUTDOWN_REQ
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget[] $VALUES
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: int label
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1: kotlinx.coroutines.CancellableContinuation $cont
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: java.lang.Object result
kotlin.io.ConstantsKt: int DEFAULT_BUFFER_SIZE
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$1: kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$1 INSTANCE
kotlin.collections.builders.SerializedCollection: long serialVersionUID
kotlin.collections.SlidingWindowKt$windowedIterator$1: boolean $partialWindows
kotlinx.coroutines.selects.SelectKt: kotlin.jvm.functions.Function3 DUMMY_PROCESS_RESULT_FUNCTION
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: int label
kotlinx.coroutines.DispatchedCoroutine: int _decision
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: int label
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: java.lang.Object L$0
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2: java.util.Comparator $this_thenBy
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: int label
kotlinx.coroutines.selects.SelectImplementation$processResultAndInvokeBlockRecoveringException$1: int label
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN
kotlinx.coroutines.EventLoop_commonKt: int SCHEDULE_OK
kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1: kotlin.sequences.Sequence $this_requireNoNulls
kotlin.sequences.FilteringSequence$iterator$1: java.util.Iterator iterator
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$tryResume$token$1: kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner this$1
androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object value
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1: int $count$inlined
kotlinx.coroutines.internal.ExceptionSuccessfullyProcessed: kotlinx.coroutines.internal.ExceptionSuccessfullyProcessed INSTANCE
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.DebugProbesImpl INSTANCE
kotlin.collections.builders.MapBuilder: java.lang.Object[] valuesArray
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2 this$0
kotlin.io.encoding.Base64: int bitsPerByte
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: kotlinx.coroutines.EventLoopImplBase this$0
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1: kotlin.jvm.functions.Function1 $selector
kotlin.ULong: int SIZE_BITS
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1 this$0
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlinx.coroutines.channels.ReceiveChannel $second
kotlin.ranges.ULongProgressionIterator: long next
kotlin.ranges.LongProgressionIterator: boolean hasNext
kotlin.ranges.ULongRange: kotlin.ranges.ULongRange$Companion Companion
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: int label
kotlin.sequences.TakeWhileSequence: kotlin.jvm.functions.Function1 predicate
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: java.lang.Object L$0
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlin.io.path.FileVisitorImpl: kotlin.jvm.functions.Function2 onPreVisitDirectory
kotlin.io.ByteStreamsKt$iterator$1: int nextByte
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: kotlinx.coroutines.CancellableContinuation cont
kotlin.text.Typography: char lowDoubleQuote
kotlin.text.Regex$splitToSequence$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$1
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList list
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlin.jvm.internal.Ref$ObjectRef stolenTask
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 countAll
kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] $VALUES
kotlinx.coroutines.channels.BufferedChannel$receiveCatching$1: kotlinx.coroutines.channels.BufferedChannel this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object L$0
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2: kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2 INSTANCE
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget VALUE_PARAMETER
kotlinx.coroutines.internal.InlineList: java.lang.Object holder
kotlin.time.DurationJvmKt: boolean durationAssertionsEnabled
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: int label
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: kotlinx.coroutines.CoroutineScope $$this$launch
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: int label
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1: kotlin.jvm.functions.Function3 $copyAction
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
kotlin.io.path.PathTreeWalk$bfsIterator$1: int label
kotlin.sequences.MergingSequence$iterator$1: java.util.Iterator iterator1
kotlinx.coroutines.internal.DispatchedContinuation: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _reusableCancellableContinuation$FU
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult SKIP_SUBTREE
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1: kotlin.jvm.functions.Function0 $iterator
kotlin.coroutines.SafeContinuation: java.util.concurrent.atomic.AtomicReferenceFieldUpdater RESULT
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.internal.LockFreeTaskQueue queue
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: kotlinx.coroutines.channels.ProducerScope $scope
kotlin.collections.AbstractIterator: kotlin.collections.State state
kotlin.time.DurationUnit: kotlin.time.DurationUnit HOURS
kotlin.ranges.IntProgression: kotlin.ranges.IntProgression$Companion Companion
kotlin.jvm.internal.CharCompanionObject: char MIN_VALUE
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1: kotlinx.coroutines.CancellableContinuation $cont$inlined
kotlinx.coroutines.ThreadState: java.lang.Thread targetThread
kotlinx.coroutines.flow.SharedFlowSlot: kotlin.coroutines.Continuation cont
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $flow2$inlined
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.ChildHandleNode child
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: kotlinx.coroutines.flow.FlowCollector $collector
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3: kotlin.jvm.functions.Function2 $action
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: kotlin.text.StringsKt__IndentKt$getIndentFunction$1 INSTANCE
kotlinx.coroutines.channels.Channel$Factory: int CONFLATED
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilderValues valuesView
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: kotlin.sequences.Sequence $this_runningFoldIndexed
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: kotlin.jvm.internal.Ref$IntRef $skipped
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.ChannelFlow: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1: kotlinx.coroutines.channels.ProducerScope $$this$produce
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: kotlin.sequences.Sequence $this_zipWithNext
kotlinx.coroutines.channels.ChannelIterator$next0$1: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: java.lang.Object result
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 findOne
kotlinx.coroutines.stream.StreamFlow: java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumed$FU
kotlin.sequences.TakeWhileSequence: kotlin.sequences.Sequence sequence
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int CLOSED_SHIFT
kotlinx.coroutines.android.HandlerContext: android.os.Handler handler
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.CoroutineScope $$this$coroutineScope
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object L$0
kotlinx.coroutines.sync.MutexKt: int HOLDS_LOCK_YES
kotlin.text.CharCategory: kotlin.text.CharCategory FORMAT
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: kotlinx.coroutines.flow.Flow[] $flows
kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $operation$inlined
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: int label
kotlin.text.CharCategory: kotlin.text.CharCategory DASH_PUNCTUATION
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId$Key Key
kotlinx.coroutines.internal.OnDemandAllocatingPool: int maxCapacity
kotlin.reflect.KVariance: kotlin.reflect.KVariance[] $VALUES
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: java.lang.Object result
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: kotlinx.coroutines.flow.DistinctFlowImpl this$0
kotlin.io.path.PathTreeWalk$dfsIterator$1: kotlin.io.path.PathTreeWalk this$0
kotlin.random.XorWowRandom: kotlin.random.XorWowRandom$Companion Companion
kotlinx.coroutines.channels.ChannelIterator$next0$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: java.lang.Object L$0
kotlin.text.CharCategory: kotlin.text.CharCategory MODIFIER_LETTER
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.coroutines.CoroutineContext$Key topmostKey
kotlin.UByte: kotlin.UByte$Companion Companion
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _parentHandle$FU
kotlin.jvm.internal.TypeReference: int flags
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: long J$0
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilderKeys keysView
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined
kotlin.io.path.LinkFollowing: java.util.Set nofollowVisitOption
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
kotlin.collections.RingBuffer$iterator$1: int index
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: java.lang.Object L$1
kotlinx.coroutines.selects.SelectClause2Impl: java.lang.Object clauseObject
kotlin.sequences.GeneratorSequence$iterator$1: kotlin.sequences.GeneratorSequence this$0
kotlin.text.Charsets: java.nio.charset.Charset UTF_8
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object L$1
kotlinx.coroutines.selects.SelectImplementation$doSelectSuspend$1: java.lang.Object result
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.util.concurrent.atomic.AtomicReferenceArray keys
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object result
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler this$0
kotlin.jvm.internal.TypeParameterReference: java.lang.String name
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: long $delayMillis
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: java.lang.Object result
kotlinx.coroutines.stream.StreamFlow$collect$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: java.lang.Object L$0
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5: kotlin.jvm.functions.Function3 $copyAction
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: int label
kotlin.jvm.internal.FloatSpreadBuilder: float[] values
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1: int label
kotlinx.coroutines.selects.SelectImplementation: java.util.List clauses
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object L$0
kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_PUNCTUATION
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object L$1
kotlin.ULongArray$Iterator: long[] array
kotlin.jvm.internal.CharCompanionObject: char MAX_SURROGATE
kotlin.ranges.OpenEndFloatRange: float _start
kotlin.collections.AbstractMap$toString$1: kotlin.collections.AbstractMap this$0
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1: kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1 this$0
kotlin.time.DurationKt: int NANOS_IN_MILLIS
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Listener listeners
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object result
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$resume$2: kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner this$1
kotlinx.coroutines.android.HandlerContext: boolean invokeImmediately
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
kotlin.ranges.ULongProgressionIterator: boolean hasNext
kotlin.text.Typography: char amp
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: int label
kotlinx.coroutines.flow.SharedFlowImpl$WhenMappings: int[] $EnumSwitchMapping$0
kotlin.SafePublicationLazyImpl: kotlin.SafePublicationLazyImpl$Companion Companion
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2: kotlin.jvm.functions.Function1 $selector
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: java.lang.Object $initial$inlined
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility INTERNAL
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons RESUMED
kotlin.jvm.internal.LongCompanionObject: kotlin.jvm.internal.LongCompanionObject INSTANCE
kotlin.DeprecationLevel: kotlin.DeprecationLevel HIDDEN
kotlin.io.path.ExceptionsCollector: java.nio.file.Path path
kotlin.text.StringsKt___StringsKt$withIndex$1: java.lang.CharSequence $this_withIndex
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: int label
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object L$3
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: int label
kotlin.sequences.DropSequence: kotlin.sequences.Sequence sequence
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl this$0
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1: kotlin.jvm.functions.Function2 $predicate
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1 INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: int label
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2: byte[] $this_asIterable$inlined
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.GlobalScope: kotlinx.coroutines.GlobalScope INSTANCE
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol FAILED
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2 this$0
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$2: java.lang.reflect.Constructor $constructor
kotlinx.coroutines.ThreadState: kotlinx.coroutines.DisposableHandle cancelHandle
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object L$0
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache notOnJava9
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2: kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2 INSTANCE
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: int label
kotlinx.coroutines.ResumeUndispatchedRunnable: kotlinx.coroutines.CoroutineDispatcher dispatcher
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$0
kotlin.random.Random: kotlin.random.Random defaultRandom
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: int label
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: int label
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.TaskContext BlockingContext
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind LANGUAGE_VERSION
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol BROKEN
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: int label
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$1: java.lang.reflect.Constructor $constructor
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue globalCpuQueue
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1 this$0
kotlinx.coroutines.DispatchedTask: int resumeMode
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicLongFieldUpdater bufferEnd$FU
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4: boolean $followLinks
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: int I$0
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1: java.lang.Object[] $this_groupingBy
kotlin.SafePublicationLazyImpl: java.lang.Object final
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState: boolean failed
kotlin.KotlinVersion: int patch
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: java.lang.Object L$1
kotlin.io.FileSystemException: java.lang.String reason
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: kotlinx.coroutines.flow.Flow $this_launchIn
kotlinx.coroutines.AbstractTimeSourceKt: kotlinx.coroutines.AbstractTimeSource timeSource
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: kotlinx.coroutines.channels.ReceiveChannel $this_withIndex
kotlinx.coroutines.internal.FastServiceLoaderKt: boolean ANDROID_DETECTED
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: java.lang.Object result
kotlinx.coroutines.CoroutineStart$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlin.jvm.functions.Function3 $transform
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5: java.nio.file.Path $target
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlin.jvm.functions.Function3 $transform
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3: java.util.Comparator $comparator
kotlinx.coroutines.YieldContext: kotlinx.coroutines.YieldContext$Key Key
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object L$3
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$WhenMappings: int[] $EnumSwitchMapping$1
kotlinx.coroutines.flow.SharingStarted: kotlinx.coroutines.flow.SharingStarted$Companion Companion
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2: long[] $this_withIndex
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: java.lang.Object L$0
kotlin.random.Random$Default$Serialized: kotlin.random.Random$Default$Serialized INSTANCE
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object CONDITION_FALSE
kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1: kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1 INSTANCE
kotlin.reflect.TypeVariableImpl: kotlin.reflect.KTypeParameter typeParameter
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1: kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1 INSTANCE
kotlin.time.AbstractDoubleTimeSource: kotlin.time.DurationUnit unit
kotlin.math.Constants: double upper_taylor_n_bound
kotlin.sequences.IndexingSequence$iterator$1: int index
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: int label
kotlin.time.DurationKt: long MAX_NANOS
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: int I$0
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: kotlinx.coroutines.debug.internal.ConcurrentWeakMap this$0
kotlinx.coroutines.DisposeOnCancel: kotlinx.coroutines.DisposableHandle handle
kotlin.io.encoding.DecodeInputStream: byte[] symbolBuffer
kotlin.math.MathKt: double E
kotlinx.coroutines.flow.StartedWhileSubscribed: long stopTimeout
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.util.concurrent.atomic.AtomicInteger $nonClosed
kotlin.collections.RingBuffer: int startIndex
kotlinx.coroutines.flow.CancellableFlowImpl: kotlinx.coroutines.flow.Flow flow
kotlinx.coroutines.selects.SelectKt: int TRY_SELECT_REREGISTER
kotlinx.coroutines.DebugKt: java.lang.String DEBUG_PROPERTY_VALUE_AUTO
kotlin.jvm.internal.Ref$FloatRef: float element
kotlinx.coroutines.flow.internal.StackFrameContinuation: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.Empty: boolean isActive
kotlinx.coroutines.DefaultExecutor: kotlinx.coroutines.DefaultExecutor INSTANCE
kotlin.io.LineReader: char[] chars
kotlinx.coroutines.future.FutureKt$await$2$1: kotlinx.coroutines.future.ContinuationHandler $consumer
kotlinx.coroutines.JobSupport$onAwaitInternal$1: kotlinx.coroutines.JobSupport$onAwaitInternal$1 INSTANCE
kotlinx.coroutines.flow.internal.ChannelFlow: int capacity
kotlinx.coroutines.channels.Channel: int UNLIMITED
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: kotlinx.coroutines.flow.Flow $upstream
kotlinx.coroutines.channels.BufferedChannel: long receivers
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3$WhenMappings: int[] $EnumSwitchMapping$0
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality WHITESPACE
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4 this$0
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1: long J$1
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2: kotlin.jvm.functions.Function1 $selector
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long minDelayUntilStealableTaskNs
kotlin.sequences.TakeWhileSequence$iterator$1: int nextState
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget CONSTRUCTOR
kotlin.sequences.TakeSequence$iterator$1: java.util.Iterator iterator
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: int label
kotlin._Assertions: boolean ENABLED
kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult TERMINATE
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object state
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1 this$0
androidx.work.impl.utils.futures.AbstractFuture$Waiter: androidx.work.impl.utils.futures.AbstractFuture$Waiter next
kotlin.sequences.FlatteningSequence$iterator$1: kotlin.sequences.FlatteningSequence this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: kotlin.jvm.functions.Function3 $transform
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: long[] $this_asList
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: int label
kotlin.DeprecationLevel: kotlin.DeprecationLevel[] $VALUES
kotlin.sequences.EmptySequence: kotlin.sequences.EmptySequence INSTANCE
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: java.lang.Object L$0
kotlinx.coroutines.EventLoop_commonKt: long MS_TO_NS
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object L$2
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: kotlinx.coroutines.selects.SelectInstanceInternal select
kotlin.jvm.internal.PrimitiveSpreadBuilder: java.lang.Object[] spreads
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: int label
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2: java.lang.Object $seed
kotlin.jvm.internal.CharCompanionObject: char MAX_LOW_SURROGATE
kotlinx.coroutines.DispatchedTaskKt: int MODE_CANCELLABLE
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5: long[] $this_asIterable$inlined
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onCompletion$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.stream.StreamFlow: java.util.stream.Stream stream
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: java.lang.Object L$0
kotlin.jvm.internal.LongCompanionObject: int SIZE_BITS
kotlin.jvm.internal.ArrayByteIterator: byte[] array
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: kotlinx.coroutines.flow.Flow $this_transform
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlinx.coroutines.internal.CtorCache ctorCache
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_drop$inlined
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: java.lang.Object L$0
kotlinx.coroutines.channels.LazyBroadcastCoroutine: kotlin.coroutines.Continuation continuation
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: int label
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
kotlinx.coroutines.stream.StreamFlow: int consumed
kotlin.jvm.internal.ArrayCharIterator: char[] array
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _delayed$FU
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: int I$0
kotlinx.coroutines.stream.StreamFlow$collect$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2: kotlinx.coroutines.flow.Flow[] $flows$inlined
kotlinx.coroutines.internal.DiagnosticCoroutineContextException: kotlin.coroutines.CoroutineContext context
kotlin.coroutines.CombinedContext$Serialized: kotlin.coroutines.CoroutineContext[] elements
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean sanitizeStackTraces
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object L$3
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_NEW
kotlinx.coroutines.CancellableContinuationImplKt: int RESUMED
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object L$0
kotlinx.coroutines.InvokeOnCancelling: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _invoked$FU
kotlin.jvm.internal.ReflectionFactory: java.lang.String KOTLIN_JVM_FUNCTIONS
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: java.lang.Object L$0
kotlin.reflect.ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments
kotlin.collections.builders.SetBuilder: kotlin.collections.builders.MapBuilder backing
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: kotlin.coroutines.CoroutineContext $context
kotlin.random.XorWowRandom: int x
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: int I$0
kotlin.text.Typography: char ndash
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: java.lang.Object result
kotlin.collections.AbstractSet: kotlin.collections.AbstractSet$Companion Companion
kotlin.io.path.PathRelativizer: kotlin.io.path.PathRelativizer INSTANCE
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2: kotlin.jvm.functions.Function2 $predicate$inlined
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: kotlinx.coroutines.flow.MutableSharedFlow $shared
kotlinx.coroutines.scheduling.CoroutineScheduler: int corePoolSize
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6 this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$2
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion: kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion INSTANCE
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection[] $VALUES
kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1: java.lang.Object[] $elements
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object L$5
kotlinx.coroutines.flow.internal.AbstractSharedFlow: int nCollectors
kotlin.jvm.internal.ClassReference: kotlin.jvm.internal.ClassReference$Companion Companion
kotlinx.coroutines.selects.SelectBuilderImpl: kotlinx.coroutines.CancellableContinuationImpl cont
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
kotlinx.coroutines.channels.BufferedChannelKt: int RESULT_CLOSED
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7: double[] $this_asIterable$inlined
kotlinx.coroutines.flow.StartedLazily$command$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1: kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1 INSTANCE
kotlin.time.TestTimeSource: long reading
kotlinx.coroutines.AwaitAll: java.util.concurrent.atomic.AtomicIntegerFieldUpdater notCompletedCount$FU
kotlin.collections.MapWithDefaultImpl: kotlin.jvm.functions.Function1 default
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
kotlin.text.CharCategory: kotlin.text.CharCategory[] $VALUES
kotlin.random.KotlinRandom: kotlin.random.Random impl
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object L$1
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object result
kotlin.text.CharCategory: kotlin.text.CharCategory UNASSIGNED
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: int label
kotlin.jvm.internal.ArrayDoubleIterator: int index
kotlinx.coroutines.sync.SemaphoreImpl$addAcquireToQueue$createNewSegment$1: kotlinx.coroutines.sync.SemaphoreImpl$addAcquireToQueue$createNewSegment$1 INSTANCE
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: int load
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2: kotlin.jvm.functions.Function2 $predicate$inlined
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object result
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
kotlinx.coroutines.flow.internal.SafeCollector: int collectContextSize
kotlin.reflect.TypesJVMKt$WhenMappings: int[] $EnumSwitchMapping$0
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.ContinuationInterceptor$Key Key
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object L$0
kotlin.sequences.SequencesKt___SequencesKt$flatMap$2: kotlin.sequences.SequencesKt___SequencesKt$flatMap$2 INSTANCE
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: kotlinx.coroutines.flow.Flow $upstream
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction TERMINATE
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: java.lang.Object result
kotlinx.coroutines.DispatchedTaskKt: int MODE_CANCELLABLE_REUSABLE
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU
kotlin.jvm.internal.CharCompanionObject: int SIZE_BITS
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality BOUNDARY_NEUTRAL
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: java.lang.Object $element
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: kotlin.jvm.functions.Function6 $transform$inlined
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object L$1
kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: java.lang.Object L$0
kotlinx.coroutines.future.FutureKt$asCompletableFuture$1: java.util.concurrent.CompletableFuture $future
kotlin.io.path.LinkFollowing: java.nio.file.LinkOption[] followLinkOption
kotlin.collections.builders.MapBuilder: int MAGIC
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object $value
kotlin.UShort: short data
kotlin.text.Typography: char section
kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1: java.util.Collection $other
kotlin.text.DelimitedRangesSequence: java.lang.CharSequence input
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1: kotlin.jvm.functions.Function0 $iterator
kotlin.time.AbstractLongTimeSource$LongTimeMark: kotlin.time.AbstractLongTimeSource timeSource
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9: kotlin.ranges.IntRange $this_asFlow$inlined
kotlin.collections.ArrayDeque: java.lang.Object[] elementData
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: kotlin.coroutines.Continuation delegate
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: int label
kotlin.text.CharCategory: kotlin.text.CharCategory LETTER_NUMBER
kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt: java.util.Collection platformExceptionHandlers
kotlin.jvm.internal.BooleanCompanionObject: kotlin.jvm.internal.BooleanCompanionObject INSTANCE
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind API_VERSION
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String baseContinuationImplClassName
kotlin.jvm.internal.Ref$IntRef: int element
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1: kotlinx.coroutines.channels.BufferedChannel this$0
kotlin.io.path.FileVisitorImpl: kotlin.jvm.functions.Function2 onVisitFile
kotlin.text.Typography: char notEqual
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: int label
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: int label
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: java.lang.Object L$0
kotlinx.coroutines.channels.BufferedChannelKt: long BUFFER_END_UNLIMITED
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: java.lang.Object L$2
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol DISPOSED_TASK
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$0
kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper: long sequenceNumber
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object L$0
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.lang.Object core
kotlin.collections.MapWithDefaultImpl: java.util.Map map
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9 this$0
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlin.jvm.internal.CallableReference: java.lang.String name
kotlin.text.CharCategory: kotlin.text.CharCategory LOWERCASE_LETTER
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1: int label
kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onVisitFile
kotlin.collections.AbstractMap$values$1$iterator$1: java.util.Iterator $entryIterator
kotlin.io.encoding.Base64: boolean isUrlSafe
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$0
kotlin.io.path.FileVisitorBuilderImpl: boolean isBuilt
kotlin.sequences.SequenceBuilderIterator: java.lang.Object nextValue
kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 getNextMatch
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState TERMINATED
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1: java.util.Comparator $this_thenBy
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: java.lang.Object result
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind AT_LEAST_ONCE
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: kotlin.jvm.functions.Function3 $operation
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1: kotlin.sequences.Sequence $this_asIterable$inlined
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$3: kotlin.jvm.functions.Function1 $timeout
kotlinx.coroutines.DispatcherExecutor: kotlinx.coroutines.CoroutineDispatcher dispatcher
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: java.lang.Object result
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever INSTANCE
kotlinx.coroutines.channels.BufferedChannel$onReceive$2: kotlinx.coroutines.channels.BufferedChannel$onReceive$2 INSTANCE
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1: kotlin.jvm.functions.Function2 $predicate
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState: int fileIndex
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: kotlinx.coroutines.flow.FlowKt__CountKt$count$4 this$0
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind EXACTLY_ONCE
kotlin.text.CharCategory: kotlin.text.CharCategory LINE_SEPARATOR
kotlinx.coroutines.internal.ConcurrentLinkedListKt: kotlinx.coroutines.internal.Symbol CLOSED
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: int label
kotlin.ranges.OpenEndDoubleRange: double _endExclusive
kotlinx.coroutines.InterruptibleKt: int WORKING
kotlin.text.CharCategory: kotlin.text.CharCategory PARAGRAPH_SEPARATOR
kotlin.sequences.DropSequence$iterator$1: int left
kotlin.properties.Delegates$vetoable$1: kotlin.jvm.functions.Function3 $onChange
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: int label
kotlin.text.Typography: char tm
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol UNDEFINED
kotlin.coroutines.EmptyCoroutineContext: long serialVersionUID
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlin.jvm.internal.Ref$ObjectRef $lastValue
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$2
kotlin.io.FilesKt__UtilsKt$copyRecursively$1: kotlin.io.FilesKt__UtilsKt$copyRecursively$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: int label
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int ADD_CLOSED
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: kotlinx.coroutines.channels.ReceiveChannel $this_requireNoNulls
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: kotlinx.coroutines.channels.BroadcastChannelImpl this$0
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$3
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher Main
kotlinx.coroutines.scheduling.CoroutineScheduler: long CPU_PERMITS_MASK
kotlin.collections.builders.MapBuilder$EntryRef: kotlin.collections.builders.MapBuilder map
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1: kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1 INSTANCE
kotlinx.coroutines.InvokeOnCompletion: kotlin.jvm.functions.Function1 handler
kotlin.UInt: int SIZE_BITS
kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function0 getInitialValue
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImplKt: java.lang.String SUSPENDED
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand[] $VALUES
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: java.lang.Object $receiver$inlined
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue globalBlockingQueue
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1 this$0
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult ALREADY_SELECTED
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.internal.Symbol NOT_IN_STACK
kotlin.collections.builders.MapBuilder: int INITIAL_MAX_PROBE_DISTANCE
kotlin.io.path.DirectoryEntriesReader: kotlin.io.path.PathNode directoryNode
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
kotlin.sequences.MergingSequence$iterator$1: java.util.Iterator iterator2
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: java.lang.Object L$1
kotlinx.coroutines.internal.Segment: java.util.concurrent.atomic.AtomicIntegerFieldUpdater cleanedAndPointers$FU
kotlin.text.Charsets: java.nio.charset.Charset utf_32le
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE
kotlin.collections.IndexedValue: java.lang.Object value
kotlin.text.StringsKt__StringsKt$splitToSequence$2: java.lang.CharSequence $this_splitToSequence
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: int label
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: java.lang.Object L$0
kotlin.text.StringsKt___StringsKt$groupingBy$1: java.lang.CharSequence $this_groupingBy
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
kotlin.io.encoding.EncodeOutputStream: int lineLength
kotlin.collections.MovingSubList: int _size
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget TYPE_PARAMETER
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.util.List lastObservedStackTrace
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int label
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3 this$0
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4: short[] $this_withIndex
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: java.lang.Object L$2
kotlin.text.Regex$findAll$1: int $startIndex
kotlin.collections.IndexingIterator: int index
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$2: kotlin.jvm.internal.Ref$ObjectRef $result
kotlin.text.Regex: kotlin.text.Regex$Companion Companion
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: java.lang.Object L$0
kotlin.io.LineReader: java.nio.charset.CharsetDecoder decoder
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImplKt: java.lang.String RUNNING
kotlin.UIntArray$Iterator: int index
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: kotlinx.coroutines.channels.ReceiveChannel $this_distinctBy
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$3
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: kotlin.jvm.internal.Ref$IntRef $consumed
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol RESUMING_BY_RCV
kotlinx.coroutines.scheduling.TasksKt: int TASK_NON_BLOCKING
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2 this$0
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.DispatchedTaskKt: int MODE_UNDISPATCHED
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2 this$0
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: kotlinx.coroutines.flow.Flow $flow
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlinx.coroutines.flow.Flow $this_transformWhile
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: kotlin.jvm.functions.Function6 $transform$inlined
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: java.lang.Object value
kotlin.jvm.internal.CollectionToArray: int MAX_SIZE
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: kotlin.coroutines.Continuation $cont$inlined
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: java.lang.Object L$0
kotlinx.coroutines.JobSupport$SelectOnAwaitCompletionHandler: kotlinx.coroutines.JobSupport this$0
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: kotlinx.coroutines.sync.Semaphore $semaphore
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: int label
kotlinx.coroutines.future.FutureKt$asDeferred$2: kotlinx.coroutines.CompletableDeferred $result
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object L$0
kotlin.enums.EnumEntriesSerializationProxy: java.lang.Class c
kotlinx.coroutines.scheduling.LimitingDispatcher: java.lang.String name
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1: java.lang.Iterable $this_withIndex
kotlin.io.encoding.Base64: int bitsPerSymbol
kotlin.collections.builders.ListBuilder: boolean isReadOnly
kotlinx.coroutines.sync.MutexKt$withLock$1: int label
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.scheduling.DefaultScheduler INSTANCE
kotlin.jvm.internal.TypeParameterReference: java.lang.Object container
kotlin.collections.AbstractList$SubList: int fromIndex
kotlin.text.Typography: char lessOrEqual
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: int label
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$1
kotlinx.coroutines.internal.LimitedDispatcher$Worker: java.lang.Runnable currentTask
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int FROZEN_SHIFT
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: java.lang.Object L$1
kotlin.text.Typography: char quote
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object L$2
kotlinx.coroutines.flow.ChannelAsFlow: boolean consume
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: boolean $partialWindows$inlined
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: java.lang.Object L$1
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.String _state
kotlin.ranges.LongProgression: long last
kotlin.jvm.internal.ClassReference: java.util.HashMap classFqNames
kotlinx.coroutines.channels.BufferedChannelKt: int SENDERS_CLOSE_STATUS_SHIFT
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: int label
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.util.concurrent.atomic.AtomicReferenceArray values
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: kotlinx.coroutines.flow.StartedLazily$command$1$1 this$0
kotlinx.coroutines.EventLoop: boolean shared
kotlinx.coroutines.JobImpl: boolean handlesException
kotlin.collections.builders.SerializedCollection: java.util.Collection collection
kotlin.sequences.FilteringSequence: kotlin.jvm.functions.Function1 predicate
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2 this$0
kotlinx.coroutines.BlockingCoroutine: java.lang.Thread blockedThread
kotlinx.coroutines.sync.SemaphoreImpl: kotlin.jvm.functions.Function1 onCancellationRelease
kotlin.io.path.PathWalkOption: kotlin.io.path.PathWalkOption INCLUDE_DIRECTORIES
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: int label
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: java.lang.Object L$0
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4: int[] $this_asSequence$inlined
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Throwable cause
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation continuation
kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_LETTER
kotlin.collections.builders.MapBuilder$Itr: int index
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: int $size$inlined
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: int I$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: int label
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1: kotlin.jvm.functions.Function3 $onError
kotlin.text.Typography: char dollar
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: kotlin.jvm.internal.Ref$ObjectRef $leftoverContext
kotlin.RequiresOptIn$Level: kotlin.RequiresOptIn$Level ERROR
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: int label
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: kotlin.jvm.functions.Function1 $iterator
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2: int label
kotlin.io.encoding.Base64: byte[] mimeLineSeparatorSymbols
kotlin.ranges.CharProgressionIterator: int step
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object L$0
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: kotlin.jvm.functions.Function0 $condition
kotlin.properties.ObservableProperty: java.lang.Object value
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: int label
kotlinx.coroutines.CancellableContinuationImplKt: kotlinx.coroutines.internal.Symbol RESUME_TOKEN
kotlin.io.TextStreamsKt$readLines$1: java.util.ArrayList $result
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: long $timeMillis
kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onPreVisitDirectory
kotlin.io.path.ExceptionsCollector: int totalExceptions
kotlin.io.encoding.EncodeOutputStream: kotlin.io.encoding.Base64 base64
kotlinx.coroutines.JobSupport$Finishing: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _rootCause$FU
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: kotlin.jvm.functions.Function3 $operation
kotlin.Triple: java.lang.Object first
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1: java.lang.Object L$1
kotlin.io.encoding.Base64Kt: byte[] base64EncodeMap
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol SUSPEND_NO_WAITER
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method getDescriptorMethod
kotlin.io.path.FileVisitorImpl: kotlin.jvm.functions.Function2 onPostVisitDirectory
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: int label
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState: boolean rootVisited
kotlin.jvm.internal.ByteCompanionObject: byte MAX_VALUE
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: boolean $isNewCoroutine
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: int label
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode FIXED_DELAY
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: long $initialDelayMillis
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: int label
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: int label
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10: kotlin.ranges.LongRange $this_asFlow$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: java.lang.Object L$1
kotlinx.coroutines.channels.BufferedChannelKt: int RESULT_RENDEZVOUS
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: int label
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1: kotlin.jvm.functions.Function2 $block$inlined
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget TYPEALIAS
kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_Done
kotlin.collections.EmptyIterator: kotlin.collections.EmptyIterator INSTANCE
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: int label
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol ON_LOCK_ALREADY_LOCKED_BY_OWNER
kotlin.jvm.internal.CharCompanionObject: char MAX_HIGH_SURROGATE
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: kotlin.coroutines.jvm.internal.CoroutineStackFrame lastObservedFrame
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: int label
kotlin.collections.builders.SerializedMap: long serialVersionUID
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: java.lang.Object $value
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlin.jvm.functions.Function1 dynamicAttach
kotlinx.coroutines.channels.Channel: int RENDEZVOUS
kotlin.collections.ArrayAsCollection: java.lang.Object[] values
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: int label
kotlin.io.path.PathNode: kotlin.io.path.PathNode parent
kotlin.sequences.DropSequence: int count
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget ANNOTATION_CLASS
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object L$2
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind[] $VALUES
kotlinx.coroutines.scheduling.WorkQueueKt: int STEAL_CPU_ONLY
kotlin.text.Typography: char euro
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1 this$0
kotlinx.coroutines.debug.internal.Marked: java.lang.Object ref
kotlin.ranges.LongProgressionIterator: long finalElement
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImplKt: java.lang.String CREATED
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: kotlin.time.AbstractDoubleTimeSource timeSource
kotlinx.coroutines.stream.StreamFlow$collect$1: java.lang.Object result
kotlin.jvm.internal.ClassReference: java.util.HashMap primitiveFqNames
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2 this$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: java.lang.Object L$1
kotlinx.coroutines.DefaultExecutor: int ACTIVE
kotlin.jvm.internal.DoubleCompanionObject: double NEGATIVE_INFINITY
kotlin.io.encoding.Base64Kt: byte[] base64UrlEncodeMap
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: int label
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int capacity
kotlin.sequences.TransformingIndexedSequence$iterator$1: kotlin.sequences.TransformingIndexedSequence this$0
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: kotlinx.coroutines.flow.internal.SafeCollector $this_checkContext
kotlinx.coroutines.flow.StateFlowImpl$collect$1: int label
kotlin.ranges.CharProgression: char last
kotlin.text.Charsets: kotlin.text.Charsets INSTANCE
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object L$0
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: int label
kotlinx.coroutines.internal.OnDemandAllocatingPoolKt: int IS_CLOSED_MASK
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: java.lang.Object result
kotlinx.coroutines.debug.internal.AgentInstallationType: kotlinx.coroutines.debug.internal.AgentInstallationType INSTANCE
kotlin.sequences.SequencesKt___SequencesKt$sorted$1: kotlin.sequences.Sequence $this_sorted
kotlin.ranges.ComparableRange: java.lang.Comparable endInclusive
kotlin.collections.AbstractMap$keys$1: kotlin.collections.AbstractMap this$0
kotlin.text.CharCategory: kotlin.text.CharCategory DECIMAL_DIGIT_NUMBER
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1: kotlinx.coroutines.sync.SemaphoreImpl this$0
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 transformer
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.flow.ChannelAsFlow: kotlinx.coroutines.channels.ReceiveChannel channel
kotlin.text.Regex$Serialized: int flags
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3: byte[] $this_withIndex
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.util.List creationStackTrace
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $predicate$inlined
kotlin.io.path.LinkFollowing: java.util.Set followVisitOption
kotlin.ranges.OpenEndDoubleRange: double _start
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$2
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: kotlinx.coroutines.channels.ReceiveChannel $this_flatMap
kotlinx.coroutines.AwaitAll$AwaitAllNode: kotlinx.coroutines.DisposableHandle handle
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState: java.io.File[] fileList
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1: java.lang.Object result
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long FROZEN_MASK
kotlin.UShortArray: short[] storage
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$1: kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$1 INSTANCE
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$2
kotlin.Result$Failure: java.lang.Throwable exception
kotlin.text.Regex$splitToSequence$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: java.lang.Object L$0
kotlin.ranges.UIntRange: kotlin.ranges.UIntRange$Companion Companion
kotlinx.coroutines.selects.SelectImplementation$ClauseData: java.lang.Object param
kotlinx.coroutines.flow.EmptyFlow: kotlinx.coroutines.flow.EmptyFlow INSTANCE
kotlin.jvm.internal.ByteCompanionObject: kotlin.jvm.internal.ByteCompanionObject INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object L$2
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object L$0
kotlinx.coroutines.Unconfined: kotlinx.coroutines.Unconfined INSTANCE
kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont
kotlin.jvm.internal.EnumCompanionObject: kotlin.jvm.internal.EnumCompanionObject INSTANCE
kotlin.collections.builders.MapBuilder: java.lang.Object[] keysArray
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: java.lang.Object L$0
kotlin.jvm.internal.ShortCompanionObject: kotlin.jvm.internal.ShortCompanionObject INSTANCE
kotlin.collections.AbstractMap: java.util.Collection _values
kotlinx.coroutines.JobSupport$children$1: int label
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
kotlinx.coroutines.internal.ExceptionsConstructorKt: int throwableFields
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1: kotlin.jvm.functions.Function1 $this_createCoroutineUnintercepted$inlined
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.jvm.functions.Function1 safeCast
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1: java.lang.Iterable $this_groupingBy
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST
kotlin.jvm.internal.FloatCompanionObject: float MAX_VALUE
kotlin.jvm.internal.Ref$CharRef: char element
kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1 INSTANCE
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget FIELD
kotlin.text.CharCategory: kotlin.text.CharCategory PRIVATE_USE
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: int label
kotlin.jvm.internal.FloatCompanionObject: float POSITIVE_INFINITY
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 INSTANCE
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1: kotlinx.coroutines.sync.MutexImpl this$0
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2: kotlin.jvm.functions.Function3 $copyAction
kotlinx.coroutines.channels.ReceiveCatching: kotlinx.coroutines.CancellableContinuationImpl cont
kotlin.text.Typography: char dagger
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1: java.util.stream.Stream $this_asSequence$inlined
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$5
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: int label
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object L$0
kotlin.io.encoding.DecodeInputStream: boolean isEOF
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2: kotlin.reflect.KClass $klass$inlined
kotlinx.coroutines.internal.LockFreeTaskQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: int label
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: java.lang.Object L$0
kotlinx.coroutines.ThreadState: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _state$FU
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol IN_BUFFER
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object L$2
kotlin.time.TimedValue: long duration
kotlin.collections.AbstractMap$values$1: kotlin.collections.AbstractMap this$0
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1: java.lang.Iterable $this_asSequence$inlined
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object L$0
kotlinx.coroutines.channels.Channel: kotlinx.coroutines.channels.Channel$Factory Factory
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object L$1
kotlin.jvm.internal.DoubleCompanionObject: double MIN_VALUE
kotlin.io.encoding.Base64: int symbolsPerGroup
kotlin.text.Typography: char greater
kotlinx.coroutines.sync.MutexKt: int TRY_LOCK_ALREADY_LOCKED_BY_OWNER
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _parentHandle$FU
kotlin.coroutines.CombinedContext$Serialized: long serialVersionUID
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.lang.StackTraceElement ARTIFICIAL_FRAME
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object result
kotlin.coroutines.jvm.internal.CompletedContinuation: kotlin.coroutines.jvm.internal.CompletedContinuation INSTANCE
kotlinx.coroutines.channels.BufferedChannelKt: int CLOSE_STATUS_CLOSED
kotlin.sequences.TransformingIndexedSequence$iterator$1: java.util.Iterator iterator
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object L$2
kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState: kotlin.io.FileTreeWalk$FileTreeWalkIterator this$0
kotlin.jvm.internal.FunctionReference: int flags
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: int I$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object L$1
kotlin.io.encoding.Base64: boolean isMimeScheme
kotlin.math.Constants: double taylor_n_bound
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1: kotlin.jvm.internal.Ref$BooleanRef $isEmpty
kotlin.text.CharCategory: kotlin.text.CharCategory FINAL_QUOTE_PUNCTUATION
kotlin.collections.ArraysKt___ArraysKt$withIndex$2: byte[] $this_withIndex
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: kotlin.jvm.functions.Function2 $predicate
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: long J$0
kotlinx.coroutines.flow.StartedLazily$command$1: int label
kotlin.jvm.internal.ArrayCharIterator: int index
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol PERMIT
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlinx.coroutines.flow.Flow[] $flows
kotlin.text.StringsKt___StringsKt$windowedSequence$2: int $size
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$3: kotlin.jvm.functions.Function2 $create
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: kotlinx.coroutines.channels.ReceiveChannel $this_filterIndexed
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2: java.util.Comparator $comparator
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object L$0
kotlin.sequences.DistinctSequence: kotlin.jvm.functions.Function1 keySelector
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1 this$0
kotlin.properties.NotNullVar: java.lang.Object value
kotlin.io.encoding.Base64: kotlin.io.encoding.Base64 Mime
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.ref.WeakReference _context
kotlin.UShort: short MIN_VALUE
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isCompleted$FU
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater closeHandler$FU
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object L$2
kotlin.io.FileTreeWalk: java.io.File start
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $transform$inlined
kotlinx.coroutines.selects.OnTimeout: long timeMillis
kotlin.time.DurationUnit: java.util.concurrent.TimeUnit timeUnit
kotlin.jvm.internal.ShortSpreadBuilder: short[] values
kotlinx.coroutines.internal.ThreadLocalKey: java.lang.ThreadLocal threadLocal
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: java.lang.Object L$1
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.JobSupport$Finishing state
kotlin.jvm.internal.IntSpreadBuilder: int[] values
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow$inlined
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: int label
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: kotlin.jvm.internal.Ref$ObjectRef $state
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: kotlinx.coroutines.CompletableJob $collectJob
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality$Companion Companion
kotlinx.coroutines.scheduling.WorkQueueKt: int MASK
kotlin.io.FileTreeWalk$FileTreeWalkIterator: kotlin.io.FileTreeWalk this$0
kotlin.sequences.TransformingIndexedSequence$iterator$1: int index
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: long $periodMillis
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object L$0
kotlinx.coroutines.internal.LimitedDispatcher: int parallelism
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.ref.WeakReference _lastObservedFrame
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.Channel _channel
kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1: kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: java.lang.Object result
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction SKIP
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object L$0
kotlin.io.path.PathNode: java.lang.Object key
kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
kotlinx.coroutines.flow.internal.AbstractSharedFlow: int nextIndex
kotlinx.coroutines.channels.BufferedChannel$receiveCatching$1: java.lang.Object result
kotlinx.coroutines.flow.CallbackFlowBuilder: kotlin.jvm.functions.Function2 block
kotlin.text.Typography: char times
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object L$1
kotlin.collections.ArraysKt___ArraysKt$withIndex$4: int[] $this_withIndex
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object countOrElement
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: int label
kotlin.time.Duration: long NEG_INFINITE
kotlin.ranges.ULongProgression: kotlin.ranges.ULongProgression$Companion Companion
kotlin.sequences.SequencesKt___SequencesKt$minus$4: kotlin.sequences.Sequence $elements
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: int label
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$2
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object L$0
kotlin.sequences.SubSequence: int endIndex
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1 this$0
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$4
kotlin.collections.SlidingWindowKt$windowedIterator$1: int $size
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_OVERRIDE
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: java.lang.Object L$0
kotlin.ULong: int SIZE_BYTES
kotlin.UShortArray$Iterator: int index
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: int I$0
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: kotlin.jvm.functions.Function0 $defaultValue
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1: kotlin.jvm.internal.Ref$IntRef $index
kotlin.ranges.LongRange: kotlin.ranges.LongRange$Companion Companion
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: boolean Z$0
kotlin.jvm.internal.FunctionReference: int arity
kotlinx.coroutines.ResumeOnCompletion: kotlin.coroutines.Continuation continuation
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1: kotlin.jvm.functions.Function4 $transform$inlined$1
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_ALREADY
kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult CONTINUE
kotlin.text.Typography: char paragraph
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilder$Companion Companion
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: kotlinx.coroutines.AwaitAll$AwaitAllNode[] nodes
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object L$0
kotlin.collections.ArraysKt___ArraysKt$withIndex$9: char[] $this_withIndex
kotlin.text.StringsKt___StringsKt$chunkedSequence$1: kotlin.text.StringsKt___StringsKt$chunkedSequence$1 INSTANCE
kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_NUMBER
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object L$3
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3: short[] $this_asIterable$inlined
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.JobSupport parent
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object L$0
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: kotlinx.coroutines.flow.FlowCollector $collector
kotlin.text.CharDirectionality$Companion$directionalityMap$2: kotlin.text.CharDirectionality$Companion$directionalityMap$2 INSTANCE
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
kotlin.text.RegexOption: int mask
kotlin.DeepRecursiveKt: java.lang.Object UNDEFINED_RESULT
kotlinx.coroutines.scheduling.CoroutineScheduler: int PARKED
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object L$1
kotlinx.coroutines.flow.SharedFlowKt: kotlinx.coroutines.internal.Symbol NO_VALUE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: java.lang.Object result
kotlin.io.LineReader: java.lang.StringBuilder sb
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: int label
kotlin.time.DurationUnit: kotlin.time.DurationUnit MINUTES
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $transform$inlined
kotlin.ULong: long MAX_VALUE
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1: kotlinx.coroutines.flow.FlowCollector $$this$flow$inlined
kotlinx.coroutines.scheduling.CoroutineScheduler: long PARKED_VERSION_INC
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState: kotlin.io.FileTreeWalk$FileTreeWalkIterator this$0
kotlin.ranges.CharProgression: int step
kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.TaskContext NonBlockingContext
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object L$2
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String stackTraceRecoveryClass
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: kotlinx.coroutines.sync.Semaphore $semaphore
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState BLOCKING
kotlin.sequences.SequencesKt___SequencesKt$minus$3: java.lang.Iterable $elements
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object L$0
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1: java.util.Comparator $comparator
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1 this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: kotlin.jvm.functions.Function4 $transform$inlined
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7: double[] $this_asSequence$inlined
kotlin.KotlinVersion: int minor
kotlin.text.Regex$splitToSequence$1: int $limit
kotlin.DeepRecursiveScopeImpl: kotlin.coroutines.Continuation cont
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol TAKEN
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1: kotlinx.coroutines.selects.SelectInstance $select
kotlinx.coroutines.flow.AbstractFlow$collect$1: kotlinx.coroutines.flow.AbstractFlow this$0
kotlinx.coroutines.stream.StreamFlow$collect$1: java.lang.Object L$1
kotlin.io.encoding.Base64: int mimeLineLength
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2 this$0
kotlinx.coroutines.selects.SelectClause1Impl: kotlin.jvm.functions.Function3 regFunc
kotlinx.coroutines.CancelFutureOnCancel: java.util.concurrent.Future future
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: kotlin.jvm.functions.Function1 $selector
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.Flow $flow
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState CPU_ACQUIRED
kotlin.collections.builders.MapBuilder$Itr: int lastIndex
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int HEAD_SHIFT
kotlin.random.XorWowRandom: int y
kotlinx.coroutines.sync.SemaphoreImpl: int permits
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher$Key Key
kotlin.DeepRecursiveScopeImpl: java.lang.Object result
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.internal.ResizableAtomicArray workers
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: int label
kotlin.text.Regex$special$$inlined$fromInt$1: int $value
kotlinx.coroutines.future.ContinuationHandler: kotlin.coroutines.Continuation cont
kotlinx.coroutines.BlockingCoroutine: kotlinx.coroutines.EventLoop eventLoop
kotlinx.coroutines.CoroutineName: java.lang.String name
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1: kotlin.jvm.functions.Function1 $block
kotlin.jvm.internal.TypeReference$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object result
kotlin.sequences.SequencesKt__SequencesKt$flatten$1: kotlin.sequences.SequencesKt__SequencesKt$flatten$1 INSTANCE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3 this$0
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object L$0
kotlinx.coroutines.scheduling.WorkQueueKt: int STEAL_ANY
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $block$inlined
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Default
kotlinx.coroutines.scheduling.CoroutineScheduler: long PARKED_VERSION_MASK
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: long idleWorkerKeepAliveNs
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest this$0
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: int label
kotlin.jvm.internal.CharCompanionObject: char MIN_LOW_SURROGATE
kotlin.random.XorWowRandom: long serialVersionUID
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3: java.nio.file.Path $this_copyToRecursively
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: kotlinx.coroutines.selects.SelectInstance $select
kotlin.jvm.internal.CharCompanionObject: int SIZE_BYTES
kotlinx.coroutines.CompletedContinuation: java.lang.Object result
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: int maxPoolSize
kotlin.io.LinesSequence$iterator$1: boolean done
kotlin.io.path.OnErrorResult: kotlin.io.path.OnErrorResult TERMINATE
kotlin.enums.EnumEntriesSerializationProxy: long serialVersionUID
kotlinx.coroutines.internal.WeakMapCtorCache: kotlinx.coroutines.internal.WeakMapCtorCache INSTANCE
kotlinx.coroutines.LazyDeferredCoroutine: kotlin.coroutines.Continuation continuation
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
kotlin.UInt: int MAX_VALUE
kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method getSuppressed
kotlin.collections.builders.ListBuilder$Itr: int lastIndex
kotlin.jvm.internal.PrimitiveSpreadBuilder: int size
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: int label
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: int label
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $action$inlined
kotlin.jvm.internal.TypeReference: java.util.List arguments
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: java.lang.Object L$1
kotlinx.coroutines.scheduling.TasksKt: java.lang.String DEFAULT_SCHEDULER_NAME
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$4: java.lang.reflect.Constructor $constructor
kotlin.text.RegexOption: kotlin.text.RegexOption MULTILINE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: int label
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1: java.lang.CharSequence $this_asIterable$inlined
kotlinx.coroutines.EventLoop_commonKt: int SCHEDULE_DISPOSED
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object internalResult
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: java.lang.Object L$0
kotlin.sequences.TakeWhileSequence$iterator$1: kotlin.sequences.TakeWhileSequence this$0
kotlin.jvm.internal.LongCompanionObject: int SIZE_BYTES
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand START
kotlin.sequences.DropWhileSequence: kotlin.jvm.functions.Function1 predicate
kotlinx.coroutines.DisposableFutureHandle: java.util.concurrent.Future future
kotlin.coroutines.CoroutineContext$plus$1: kotlin.coroutines.CoroutineContext$plus$1 INSTANCE
kotlinx.coroutines.DefaultExecutor: int SHUTDOWN
kotlinx.coroutines.CompletedContinuation: java.lang.Throwable cancelCause
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5: kotlin.sequences.Sequence $this_asFlow$inlined
kotlinx.coroutines.scheduling.CoroutineScheduler: long idleWorkerKeepAliveNs
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object L$0
kotlinx.coroutines.UndispatchedMarker: kotlinx.coroutines.UndispatchedMarker INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: int label
kotlinx.coroutines.YieldContext: boolean dispatcherWasUnconfined
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: kotlin.jvm.functions.Function5 $transform$inlined
kotlinx.coroutines.channels.BufferedChannelKt: int CLOSE_STATUS_CANCELLATION_STARTED
kotlin.internal.PlatformImplementations$ReflectThrowable: kotlin.internal.PlatformImplementations$ReflectThrowable INSTANCE
kotlin.text.CharCategory: java.lang.String code
kotlin.sequences.DropWhileSequence$iterator$1: kotlin.sequences.DropWhileSequence this$0
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: int label
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int CAPACITY_BITS
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long terminationDeadline
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object L$1
kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState: boolean visited
kotlin.jvm.internal.CharSpreadBuilder: char[] values
kotlinx.coroutines.internal.OnDemandAllocatingPool: java.util.concurrent.atomic.AtomicIntegerFieldUpdater controlState$FU
kotlinx.coroutines.EventLoop_commonKt: long MAX_DELAY_NS
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String name
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlin.jvm.internal.Ref$ObjectRef $lastValue
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] $VALUES
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: int label
kotlinx.coroutines.selects.SelectImplementation$ClauseData: java.lang.Object disposableHandleOrSegment
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_OVERRIDE
kotlin.text.Charsets: java.nio.charset.Charset ISO_8859_1
kotlin.time.DurationUnit: kotlin.time.DurationUnit NANOSECONDS
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: int label
kotlin.ranges.IntRange: kotlin.ranges.IntRange$Companion Companion
kotlinx.coroutines.JobNode: kotlinx.coroutines.JobSupport job
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: java.lang.Object result
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadContextKt$updateState$1 INSTANCE
kotlinx.coroutines.debug.AgentPremain: kotlinx.coroutines.debug.AgentPremain INSTANCE
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater bufferEndSegment$FU
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: kotlinx.coroutines.channels.SendChannel $this_trySendBlocking
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1 this$0
kotlin.text.Typography: char mdash
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object result
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: kotlin.jvm.internal.Ref$ObjectRef $previousKey
kotlinx.coroutines.channels.BufferedChannelKt: int RESULT_FAILED
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol INTERRUPTED_RCV
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: int label
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: int label
kotlinx.coroutines.selects.SelectClause2Impl: kotlin.jvm.functions.Function3 processResFunc
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: float[] $this_asList
kotlinx.coroutines.flow.StateFlowSlot: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object L$4
kotlinx.coroutines.InvokeOnCancelling: kotlin.jvm.functions.Function1 handler
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: kotlinx.coroutines.channels.ReceiveChannel $other
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: int I$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6: java.lang.Object[] $this_asFlow$inlined
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.channels.ReceiveChannel $second
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask: java.lang.Runnable block
kotlinx.coroutines.TimeoutCoroutine: long time
kotlinx.coroutines.scheduling.WorkQueueKt: int BUFFER_CAPACITY
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: int label
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: int label
kotlin.io.path.LinkFollowing: java.nio.file.LinkOption[] nofollowLinkOption
kotlinx.coroutines.CancellableContinuationImplKt: int DECISION_SHIFT
kotlin.UShort: kotlin.UShort$Companion Companion
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange nextItem
kotlin.reflect.WildcardTypeImpl: java.lang.reflect.Type lowerBound
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: java.lang.Object result
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: kotlin.jvm.functions.Function3 $operation
kotlinx.coroutines.channels.WaiterEB: kotlinx.coroutines.Waiter waiter
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$1
kotlinx.coroutines.sync.MutexKt$withLock$1: java.lang.Object L$1
kotlin.jvm.internal.ShortCompanionObject: int SIZE_BITS
kotlin.text.Charsets: java.nio.charset.Charset UTF_16BE
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2 this$0
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object result
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$tryResume$token$1: kotlinx.coroutines.sync.MutexImpl this$0
kotlin.KotlinVersion: int MAX_COMPONENT_VALUE
kotlin.text.DelimitedRangesSequence: int startIndex
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext context
kotlin.sequences.SequencesKt___SequencesKt$minus$4: kotlin.sequences.Sequence $this_minus
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons COROUTINE_SUSPENDED
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object L$3
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3: java.lang.Iterable $this_asFlow$inlined
kotlinx.coroutines.future.FutureKt$asCompletableFuture$1: kotlinx.coroutines.Deferred $this_asCompletableFuture
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: int label
kotlin.ranges.UIntProgressionIterator: int next
kotlinx.coroutines.channels.ChannelSegment: kotlinx.coroutines.channels.BufferedChannel _channel
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
kotlinx.coroutines.AwaitAll$AwaitAllNode: kotlinx.coroutines.CancellableContinuation continuation
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: java.lang.Object L$1
kotlinx.coroutines.channels.Channel$Factory: int UNLIMITED
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow[] $flows$inlined
kotlin.time.Duration: kotlin.time.Duration$Companion Companion
kotlin.reflect.KVariance: kotlin.reflect.KVariance OUT
kotlin.jvm.internal.ArrayIntIterator: int[] array
kotlin.coroutines.ContinuationKt$Continuation$1: kotlin.coroutines.CoroutineContext $context
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int I$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: kotlin.jvm.functions.Function2 $selector
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: int allocated
kotlinx.coroutines.IncompleteStateBox: kotlinx.coroutines.Incomplete state
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
kotlin.collections.builders.MapBuilder: int[] presenceArray
kotlin.collections.State: kotlin.collections.State Failed
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$1
kotlin.collections.ArraysKt___ArraysKt$withIndex$8: boolean[] $this_withIndex
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlinx.coroutines.flow.Flow[] $flowArray
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$resume$2: kotlinx.coroutines.sync.MutexImpl this$0
kotlin.jvm.internal.DoubleSpreadBuilder: double[] values
kotlinx.coroutines.flow.internal.AbstractSharedFlowKt: kotlin.coroutines.Continuation[] EMPTY_RESUMES
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(boolean[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.contracts.SimpleEffect: kotlin.contracts.ConditionalEffect implies(boolean)
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1: java.lang.Boolean invoke(kotlin.collections.IndexedValue)
kotlin.text.FlagEnum: int getValue()
kotlin.internal.ProgressionUtilKt: int getProgressionLastElement(int,int,int)
kotlin.text.StringsKt__StringsKt: java.lang.String padEnd(java.lang.String,int,char)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: int compareTo(kotlin.time.ComparableTimeMark)
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: kotlin.coroutines.CoroutineContext getContext()
kotlin.UIntArray$Iterator: void remove()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: ChannelsKt__DeprecatedKt$filterNotNullTo$3(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api19Impl: android.os.Bundle getExtras(android.view.accessibility.AccessibilityNodeInfo)
kotlin.time.LongSaturatedMathKt: long checkInfiniteSumDefined-PjuGub4(long,long,long)
kotlin.collections.EmptySet: EmptySet()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List windowed(java.lang.Iterable,int,int,boolean,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.BooleanSpreadBuilder: boolean[] toArray()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] copyOf-QwZRm1k(long[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(short[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: short reduceIndexed-aLgx1Fo(short[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: double minOf(short[],kotlin.jvm.functions.Function1)
kotlin.UShortArray: boolean contains-xj2QHRw(short)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KMutableProperty$Setter getSetter()
kotlin.jvm.internal.LocalVariableReference: LocalVariableReference()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1: TickerChannelsKt$fixedPeriodTicker$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.Void fileAttributeViewNotAvailable(java.nio.file.Path,java.lang.Class)
kotlin.collections.builders.MapBuilder$Itr: int getIndex$kotlin_stdlib()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],double[])
kotlinx.coroutines.sync.MutexImpl: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ranges.IntRange: java.lang.Comparable getEndInclusive()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArrayAsCollection: java.lang.Object[] toArray(java.lang.Object[])
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,short)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow mapLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] sliceArray-xo_DsdI(byte[],java.util.Collection)
kotlinx.coroutines.channels.ProduceKt: java.lang.Object awaitClose$default(kotlinx.coroutines.channels.ProducerScope,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlin.collections.EmptyMap: boolean containsValue(java.lang.Void)
kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)
kotlinx.coroutines.channels.BufferedChannel: boolean isClosedForReceive()
kotlinx.coroutines.flow.StateFlowSlot: boolean takePending()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlinx.coroutines.intrinsics.CancellableKt: void runSafely(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function0)
kotlin.text.StringsKt___StringsKt: java.lang.Character getOrNull(java.lang.CharSequence,int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: boolean contains(java.lang.Object)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow retry$default(kotlinx.coroutines.flow.SharedFlow,long,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.AbstractTimeSource: void unregisterTimeLoopThread()
androidx.work.impl.WorkDatabase: WorkDatabase()
kotlinx.coroutines.flow.SubscribedFlowCollector: java.lang.Object onSubscription(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.random.FallbackThreadLocalRandom$implStorage$1: FallbackThreadLocalRandom$implStorage$1()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: ConcurrentWeakMap(boolean)
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.UnbiasedSelectImplementation: void invoke(kotlinx.coroutines.selects.SelectClause1,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List take-PpDY95g(byte[],int)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.Appendable filterIndexedTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function2)
kotlin.coroutines.jvm.internal.RunSuspend: void await()
kotlin.io.path.PathsKt__PathUtilsKt: void getPathString$annotations(java.nio.file.Path)
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId copy$default(kotlinx.coroutines.CoroutineId,long,int,java.lang.Object)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2: ComparisonsKt__ComparisonsKt$thenByDescending$2(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.time.TestTimeSource: TestTimeSource()
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError(java.lang.Throwable)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator thenByDescending(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.ranges.ULongProgressionIterator: void remove()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(long,short)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle-QwZRm1k(long[])
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.random.Random$Default: long nextLong(long)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] onEachIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: int count(long[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(double[],kotlin.jvm.functions.Function1)
kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineResumed(kotlin.coroutines.Continuation)
kotlin.collections.EmptyList: boolean addAll(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(char[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-QxgOkWg(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: double log(double,double)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object lastOrNull(java.lang.Iterable)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limited(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(boolean[],java.lang.Iterable)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.CharSequence castToCharSequence(android.text.PrecomputedText)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sortedByDescending(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CompletedContinuation copy$default(kotlinx.coroutines.CompletedContinuation,java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: FlowKt__MigrationKt$delayEach$1(long,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decodeToString(byte[],int,int,boolean)
kotlinx.coroutines.sync.Mutex: kotlinx.coroutines.selects.SelectClause2 getOnLock()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort getOrNull-nggk6HY(short[],int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(short[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractList$SubList: java.lang.Object get(int)
kotlin.UNumbersKt: int rotateRight-V7xB4Y4(int,int)
kotlinx.coroutines.internal.SegmentOrClosed: kotlinx.coroutines.internal.Segment getSegment-impl(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte maxWithOrNull(byte[],java.util.Comparator)
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.util.List lastObservedStackTrace()
kotlin.UByte: int minus-7apg3OU(byte,byte)
kotlin.sequences.FlatteningSequence: java.util.Iterator iterator()
kotlin.random.KotlinRandom: KotlinRandom(kotlin.random.Random)
kotlinx.coroutines.StandaloneCoroutine: StandaloneCoroutine(kotlin.coroutines.CoroutineContext,boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object minWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String getStateDebugRepresentation()
kotlinx.coroutines.android.HandlerContext: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(byte[],java.lang.Iterable)
kotlin.jvm.JvmClassMappingKt: void getDeclaringJavaClass$annotations(java.lang.Enum)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.OnTimeout: void register(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.TypeIntrinsics: java.util.Set asMutableSet(java.lang.Object,java.lang.String)
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$2: FlowKt__ReduceKt$lastOrNull$2(kotlin.jvm.internal.Ref$ObjectRef)
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext foldCopies(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,boolean)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
kotlin.random.Random$Default: int nextBits(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long last-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] $values()
kotlinx.coroutines.YieldKt: java.lang.Object yield(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: int minByOrThrow(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowImpl: long updateNewCollectorIndexLocked$kotlinx_coroutines_core()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flattenConcat(kotlinx.coroutines.flow.Flow)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
kotlin.time.TimeMark: boolean hasNotPassedNow()
kotlin.jvm.internal.Ref$ShortRef: Ref$ShortRef()
kotlin.coroutines.jvm.internal.Boxing: java.lang.Long boxLong(long)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map mapOf(kotlin.Pair)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: int index(int)
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1: void invoke(java.lang.Throwable)
kotlin.collections.CollectionsKt__MutableCollectionsKt: java.lang.Object removeLastOrNull(java.util.List)
kotlin.collections.builders.MapBuilderValues: MapBuilderValues(kotlin.collections.builders.MapBuilder)
kotlin.collections.builders.SetBuilder: void clear()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigDecimal toBigDecimal(java.lang.String)
kotlin.jvm.internal.Intrinsics: void throwAssert()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(float[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(float[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableIterator(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.IntRange,java.lang.Integer)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(float[])
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBefore$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: java.lang.Short get(int)
kotlin.collections.EmptyList: boolean isEmpty()
kotlin.ranges.URangesKt___URangesKt: boolean contains-fz5IDCE(kotlin.ranges.UIntRange,long)
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.time.DurationKt: void getDays$annotations(int)
kotlin.sequences.SequencesKt__SequenceBuilderKt: SequencesKt__SequenceBuilderKt()
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(long[])
kotlinx.coroutines.flow.internal.StackFrameContinuation: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
kotlin.io.FileTreeWalk$WalkState: java.io.File getRoot()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(byte[],kotlin.jvm.functions.Function1)
kotlin.UnsignedKt: int uintCompare(int,int)
kotlin.Metadata: java.lang.String xs()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-f7H3mmw(long[],java.lang.Object[])
kotlin.collections.ArraysKt___ArraysJvmKt: char[] plus(char[],char[])
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: void sortDescending(java.util.List)
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,int,java.lang.Object)
kotlin.io.encoding.Base64: int decodeIntoByteArray(java.lang.CharSequence,byte[],int,int,int)
kotlin.collections.CollectionsKt__MutableCollectionsKt: java.lang.Object removeLast(java.util.List)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: byte minOf-Wr6uiD8(byte,byte[])
kotlinx.coroutines.channels.BufferedChannel: boolean isClosedForSend()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.CharProgression step(kotlin.ranges.CharProgression,int)
kotlin.collections.builders.MapBuilder: void rehash(int)
kotlin.ReplaceWith: java.lang.String[] imports()
kotlin.UByte$Companion: UByte$Companion()
kotlin.collections.AbstractSet: java.util.Iterator iterator()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.CoroutineName: CoroutineName(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWithOrNull-LTi4i_s(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
kotlin.reflect.KCallable$DefaultImpls: void isOpen$annotations()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: ChannelsKt__Channels_commonKt$consumeEach$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.ParentJob$DefaultImpls: void cancel(kotlinx.coroutines.ParentJob)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collect(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
kotlin.collections.builders.MapBuilderEntries: boolean remove(java.util.Map$Entry)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterIndexedTo--6EtJGI(int[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.ranges.LongProgression$Companion: kotlin.ranges.LongProgression fromClosedRange(long,long,long)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowSlot: kotlin.coroutines.Continuation[] freeLocked(java.lang.Object)
kotlin.enums.EnumEntriesList: int lastIndexOf(java.lang.Enum)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2: int compare(java.lang.Object,java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.lang.Object remove(java.util.Map,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(float[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
kotlin.text.MatcherMatchResult: java.lang.String getValue()
kotlin.collections.ArraysKt___ArraysKt: boolean none(short[])
kotlin.io.ConsoleKt: void print(java.lang.Object)
kotlinx.coroutines.CoroutineStart: void isLazy$annotations()
kotlinx.coroutines.ThreadState: java.lang.Void invalidState(int)
kotlin.reflect.KTypeParameter: java.util.List getUpperBounds()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveOnNoWaiterSuspend(kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: SequencesKt__SequencesKt$ifEmpty$1(kotlin.sequences.Sequence,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
kotlin.collections.EmptySet: boolean isEmpty()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: FlowKt__DelayKt$debounceInternal$1$3$2(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.util.SortedSet toSortedSet(java.lang.Iterable,java.util.Comparator)
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: FlowKt__LimitKt$collectWhile$collector$1$emit$1(kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1,kotlin.coroutines.Continuation)
kotlin.UInt: kotlin.ranges.UIntRange rangeTo-WZ4Q5Ns(int,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)
kotlin.text.Regex: Regex(java.lang.String,kotlin.text.RegexOption)
kotlin.collections.ArraysKt___ArraysKt: long component2(long[])
kotlin.io.FilesKt__UtilsKt: java.io.File relativeToOrSelf(java.io.File,java.io.File)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.channels.ReceiveChannel fixedPeriodTicker$default(kotlinx.coroutines.CoroutineScope,long,long,int,java.lang.Object)
kotlinx.coroutines.flow.StateFlowImpl: boolean compareAndSet(java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobSupport: void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(byte[],kotlin.jvm.functions.Function1)
kotlin.streams.jdk8.StreamsKt: kotlin.sequences.Sequence asSequence(java.util.stream.IntStream)
kotlin.concurrent.TimersKt: java.util.Timer timer$default(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.experimental.BitwiseOperationsKt: byte or(byte,byte)
kotlin.properties.ObservableProperty: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
kotlin.time.Duration: double toDouble-impl(long,kotlin.time.DurationUnit)
kotlinx.coroutines.scheduling.CoroutineScheduler: int blockingTasks(long)
kotlin.collections.MutableMapWithDefaultImpl: int getSize()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int first--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.DelayKt: long toDelayMillis-LRDsOJo(long)
kotlin.reflect.TypesJVMKt: java.lang.reflect.Type computeJavaType(kotlin.reflect.KType,boolean)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(double[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(short[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double lastOrNull(double[])
kotlin.jvm.internal.Intrinsics: void checkFieldIsNotNull(java.lang.Object,java.lang.String,java.lang.String)
kotlin.concurrent.TimersKt: java.util.TimerTask scheduleAtFixedRate(java.util.Timer,java.util.Date,long,kotlin.jvm.functions.Function1)
kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult valueOf(java.lang.String)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow flatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.SharedFlowKt: void setBufferAt(java.lang.Object[],long,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(float[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.builders.MapBuilder: java.lang.Object get(java.lang.Object)
kotlin.collections.ArrayDeque: java.lang.Object lastOrNull()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer max(int[])
kotlin.collections.ArraysKt___ArraysKt: boolean none(double[],kotlin.jvm.functions.Function1)
kotlin.collections.SetsKt___SetsKt: java.util.Set plus(java.util.Set,java.lang.Iterable)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.lang.Object tryIgnoreNoSuchFileException$PathsKt__PathRecursiveFunctionsKt(kotlin.jvm.functions.Function0)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String toString()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.SupervisorJobImpl: SupervisorJobImpl(kotlinx.coroutines.Job)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
kotlin.text.StringsKt__StringsKt: boolean isNullOrEmpty(java.lang.CharSequence)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3: int compare(java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
kotlinx.coroutines.flow.StartedWhileSubscribed: long access$getStopTimeout$p(kotlinx.coroutines.flow.StartedWhileSubscribed)
kotlin.collections.RingBuffer: java.util.Iterator iterator()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long elementAtOrElse-Xw8i6dc(long[],int,kotlin.jvm.functions.Function1)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
kotlin.NumbersKt__NumbersKt: int countTrailingZeroBits(byte)
kotlin.text.CharsKt__CharKt: java.lang.Integer digitToIntOrNull(char,int)
kotlin.text.Regex: kotlin.text.MatchResult matchAt(java.lang.CharSequence,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel withIndex(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object maxOf(java.lang.Object,java.lang.Object,java.util.Comparator)
kotlin.io.path.PathsKt__PathReadWriteKt: void appendText(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.ranges.LongProgression: long getStep()
kotlin.random.Random: long nextLong(long,long)
kotlinx.coroutines.flow.FlowKt: void subscribe(kotlinx.coroutines.flow.Flow)
kotlin.collections.DoubleIterator: double nextDouble()
kotlin.jvm.internal.DoubleSpreadBuilder: DoubleSpreadBuilder(int)
kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt: void ensurePlatformExceptionHandlerLoaded(kotlinx.coroutines.CoroutineExceptionHandler)
kotlin.reflect.KClass$DefaultImpls: void getVisibility$annotations()
kotlinx.coroutines.android.HandlerContext: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.collections.EmptyList: boolean containsAll(java.util.Collection)
kotlin.text.CharsKt__CharKt: boolean equals(char,char,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],java.lang.Iterable)
kotlin.streams.jdk8.StreamsKt: kotlin.sequences.Sequence asSequence(java.util.stream.LongStream)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
kotlin.sequences.IndexingSequence: IndexingSequence(kotlin.sequences.Sequence)
kotlin.Triple: java.lang.Object getFirst()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filterNotNull(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.channels.BufferedChannel: void markCancellationStarted()
kotlin.collections.AbstractMap: boolean containsKey(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: void sendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object lastOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.jvm.functions.Function22: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.RingBuffer: int access$getStartIndex$p(kotlin.collections.RingBuffer)
kotlin.text.CharsKt__CharKt: java.lang.Integer digitToIntOrNull(char)
kotlin.Result: boolean isSuccess-impl(java.lang.Object)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2: ComparisonsKt__ComparisonsKt$compareByDescending$2(java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.random.KotlinRandom$Companion: KotlinRandom$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.io.NoSuchFileException: NoSuchFileException(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysJvmKt: double[] plus(double[],double[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(short[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
kotlinx.coroutines.JobKt: void cancelFutureOnCancellation(kotlinx.coroutines.CancellableContinuation,java.util.concurrent.Future)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.sync.SemaphoreSegment: java.lang.Object getAndSet(int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt minOrNull--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt: float[] reversedArray(float[])
kotlin.UInt: int floorDiv-WZ4Q5Ns(int,int)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object)
kotlin.sequences.TakeSequence: kotlin.sequences.Sequence take(int)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long reduceRightIndexedOrNull(long[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.lang.Object doSelect$suspendImpl(kotlinx.coroutines.selects.UnbiasedSelectImplementation,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: FlowKt__TransformKt$filter$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean)
kotlinx.coroutines.InvokeOnCancelling: java.lang.Object invoke(java.lang.Object)
kotlin.collections.SetsKt__SetsJVMKt: java.util.TreeSet sortedSetOf(java.util.Comparator,java.lang.Object[])
kotlin.collections.AbstractCollection$toString$1: java.lang.CharSequence invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: FlowKt__DelayKt$timeoutInternal$1$1$2(long,kotlin.coroutines.Continuation)
kotlin.NumbersKt__FloorDivModKt: long floorDiv(long,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],long[])
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: FlowKt__LimitKt$drop$2$1(kotlin.jvm.internal.Ref$IntRef,int,kotlinx.coroutines.flow.FlowCollector)
kotlin.ranges.RangesKt: RangesKt()
kotlinx.coroutines.channels.ChannelCoroutine: void cancelInternal(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean random(boolean[],kotlin.random.Random)
kotlinx.coroutines.BuildersKt__Builders_commonKt: java.lang.Object invoke$$forInline(kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: double[] toDoubleArray(java.lang.Double[])
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounceInternal$FlowKt__DelayKt(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: float nextTowards(float,float)
kotlinx.coroutines.channels.ChannelSegment: java.lang.Object getElement$kotlinx_coroutines_core(int)
kotlin.collections.SetsKt__SetsKt: SetsKt__SetsKt()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator nullsFirst(java.util.Comparator)
kotlinx.coroutines.ThreadState: void setup()
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(int[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: boolean any(char[],kotlin.jvm.functions.Function1)
kotlin.time.Duration: kotlin.time.Duration box-impl(long)
kotlin.collections.MutableMapWithDefaultImpl: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(byte[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte component2-GBYM_sE(byte[])
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndentByMargin$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.JobSupport$onAwaitInternal$1: void invoke(kotlinx.coroutines.JobSupport,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort reduceRightOrNull-xzaTVY8(short[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.InlineList: void forEachReversed-impl(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: void afterCompletion(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int last(int[])
kotlin.NumbersKt__FloorDivModKt: int floorDiv(short,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set intersect(java.lang.Iterable,java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(long[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filter-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.InactiveNodeList: InactiveNodeList(kotlinx.coroutines.NodeList)
kotlin.collections.CollectionsKt___CollectionsKt: int count(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.UByteArray: boolean equals(java.lang.Object)
kotlin.math.MathKt__MathJVMKt: int abs(int)
kotlin.math.MathKt__MathJVMKt: float ln1p(float)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
kotlinx.coroutines.channels.BufferedChannel: void resumeSenderOnCancelledChannel(kotlinx.coroutines.Waiter)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt__CollectionsKt: boolean isNullOrEmpty(java.util.Collection)
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1: java.lang.Void invoke()
kotlin.time.DurationKt: long access$durationOfNanos(long)
kotlinx.coroutines.AwaitAll$AwaitAllNode: void setHandle(kotlinx.coroutines.DisposableHandle)
kotlinx.coroutines.internal.DispatchedContinuation: boolean postponeCancellation$kotlinx_coroutines_core(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(boolean[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object foldRightIndexed(java.util.List,java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.time.Duration: boolean isInfinite-impl(long)
kotlinx.coroutines.channels.BroadcastChannelKt: kotlinx.coroutines.channels.BroadcastChannel BroadcastChannel(int)
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.EmptySet: boolean addAll(java.util.Collection)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte reduce-ELGow60(byte[],kotlin.jvm.functions.Function2)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: java.lang.Object suspendCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(float[],int)
kotlin.NumbersKt__NumbersJVMKt: boolean isInfinite(double)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(float[])
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findAnyTask(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(double[],kotlin.jvm.functions.Function2)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: long minOf-sambcqE(long,long,long)
kotlin.collections.MovingSubList: java.lang.Object get(int)
kotlin.jvm.internal.MutablePropertyReference1Impl: void set(java.lang.Object,java.lang.Object)
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.selects.TrySelectDetailedResult access$TrySelectDetailedResult(int)
kotlin.collections.MapsKt__MapsKt: void set(java.util.Map,java.lang.Object,java.lang.Object)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: CollectionsKt__MutableCollectionsJVMKt()
kotlinx.coroutines.internal.LockFreeTaskQueue: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: boolean equals$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$2: FlowKt__ReduceKt$last$2(kotlin.jvm.internal.Ref$ObjectRef)
kotlin.UNumbersKt: long rotateLeft-JSWoG40(long,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
kotlinx.coroutines.android.HandlerDispatcherKt: void access$postFrameCallback(android.view.Choreographer,kotlinx.coroutines.CancellableContinuation)
kotlin.ULongArray: java.lang.Object[] toArray()
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean)
kotlin.text.StringsKt__StringsJVMKt: int codePointCount(java.lang.String,int,int)
kotlin.sequences.TransformingIndexedSequence$iterator$1: int getIndex()
kotlin.collections.ArraysKt___ArraysKt: boolean minByOrThrow(boolean[],kotlin.jvm.functions.Function1)
kotlin.ULong: int toInt-impl(long)
kotlin.text.CharsKt__CharJVMKt: boolean isWhitespace(char)
kotlin.collections.ByteIterator: void remove()
kotlin.random.PlatformRandomKt: double doubleFromParts(int,int)
kotlinx.coroutines.internal.ExceptionsConstructorKt: int fieldsCount$default(java.lang.Class,int,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UShort max-rL5Bavg(short[])
kotlin.collections.ArrayDeque: boolean contains(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: SequencesKt___SequencesKt()
kotlin.UShortArray: boolean addAll(java.util.Collection)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UShort maxBy-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(double,java.math.MathContext)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.Double toDoubleOrNull(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character singleOrNull(char[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: void setTitle(int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object)
kotlin.NumbersKt__FloorDivModKt: int mod(int,int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigInteger sumOfBigInteger(long[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1: java.util.Iterator sourceIterator()
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object first(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence sequenceOf(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List map-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractList: boolean addAll(int,java.util.Collection)
kotlin.ULong$Companion: ULong$Companion()
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfterLast(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
kotlin.sequences.EmptySequence: kotlin.sequences.Sequence take(int)
kotlin.text.StringsKt___StringsKt: java.util.Map associateBy(java.lang.CharSequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.ChildJob$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.ChildJob,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(float[],float,int,int,int,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.FileVisitor fileVisitor(kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void probeCoroutineResumed$kotlinx_coroutines_core(kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt$iterator$1: StringsKt__StringsKt$iterator$1(java.lang.CharSequence)
kotlin.io.FilesKt__FileReadWriteKt: java.io.BufferedWriter bufferedWriter(java.io.File,java.nio.charset.Charset,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(float[],java.lang.Iterable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setContainerTitle(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
kotlin.io.FileTreeWalk$WalkState: java.io.File step()
kotlinx.coroutines.channels.Channel$DefaultImpls: void cancel(kotlinx.coroutines.channels.Channel)
kotlin.math.MathKt__MathJVMKt: double acos(double)
kotlin.time.Duration: int getMinutesComponent-impl(long)
kotlinx.coroutines.internal.SegmentOrClosed: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ChannelResult$Closed: int hashCode()
kotlin.ranges.RangesKt___RangesKt: int last(kotlin.ranges.IntProgression)
kotlinx.coroutines.Deferred$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.Deferred,kotlinx.coroutines.Job)
kotlin.collections.CollectionsKt__MutableCollectionsKt: CollectionsKt__MutableCollectionsKt()
kotlinx.coroutines.selects.SelectImplementation: boolean isSelected()
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow buffer$default(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Throwable,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(int)
kotlinx.coroutines.ChildJob$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.ChildJob,kotlin.coroutines.CoroutineContext$Key)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.MutableMapWithDefaultImpl: boolean containsKey(java.lang.Object)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext)
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1: java.util.Iterator invoke(java.lang.Iterable)
kotlinx.coroutines.channels.ChannelResult$Companion: ChannelResult$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.JobSupport$onJoin$1: void invoke(kotlinx.coroutines.JobSupport,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(double[])
kotlin.io.FilesKt__FileReadWriteKt: java.lang.String readText$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object)
kotlin.jvm.internal.unsafe.MonitorKt: void monitorExit(java.lang.Object)
kotlin.UByte: int mod-WZ4Q5Ns(byte,int)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger shr(java.math.BigInteger,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
kotlin.collections.ArraysKt___ArraysKt: double reduceRight(double[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$2: ExceptionsConstructorKt$createConstructor$1$2(java.lang.reflect.Constructor)
kotlin.KotlinVersion: boolean isAtLeast(int,int,int)
kotlinx.coroutines.flow.FlowKt: java.lang.Object firstOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.sequences.TakeWhileSequence$iterator$1: java.lang.Object getNextItem()
kotlin.ranges.CharProgressionIterator: boolean hasNext()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(java.lang.Comparable[],int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] plus-3uqUaXg(long[],long)
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(double[])
kotlin.comparisons.UComparisonsKt___UComparisonsKt: short maxOf-t1qELG4(short,short[])
kotlin.collections.ArraysKt___ArraysKt: float component5(float[])
kotlin.time.Duration$Companion: long getMicroseconds-UwyO8pc(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long component1-QwZRm1k(long[])
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: void reverse(byte[],int,int)
kotlinx.coroutines.flow.SharingStartedKt: kotlinx.coroutines.flow.SharingStarted WhileSubscribed-5qebJ5I$default(kotlinx.coroutines.flow.SharingStarted$Companion,long,long,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] copyInto-9-ak10g$default(short[],short[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl()
kotlin.time.DurationKt: long durationOfMillisNormalized(long)
kotlin.io.path.PathTreeWalk$dfsIterator$1: PathTreeWalk$dfsIterator$1(kotlin.io.path.PathTreeWalk,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5: java.util.Iterator iterator()
kotlin.UInt: long plus-VKZWuLQ(int,long)
kotlin.collections.AbstractSet$Companion: int unorderedHashCode$kotlin_stdlib(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character minWithOrNull(char[],java.util.Comparator)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator thenByDescending(java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short first-rL5Bavg(short[])
kotlin.collections.CollectionsKt___CollectionsKt: int indexOfFirst(java.util.List,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMutableMap: java.util.Collection getValues()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minOfWith(java.lang.Iterable,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(double[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl: int access$getTotalSize(kotlinx.coroutines.flow.SharedFlowImpl)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxByOrThrow(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UByte max-GBYM_sE(byte[])
kotlin.ranges.OpenEndRange: boolean isEmpty()
kotlinx.coroutines.JobSupport: boolean isActive()
kotlin.UByteArray$Iterator: byte next-w2LRezQ()
kotlin.jvm.internal.ClassReference: boolean isValue()
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(int[])
kotlin.io.TextStreamsKt: void forEachLine(java.io.Reader,kotlin.jvm.functions.Function1)
kotlin.UInt$Companion: UInt$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.GroupingKt__GroupingJVMKt: GroupingKt__GroupingJVMKt()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object reduceIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(float[])
kotlin.time.AbstractLongTimeSource$LongTimeMark: kotlin.time.ComparableTimeMark plus-LRDsOJo(long)
kotlin.text.StringsKt__StringsKt: int getLastIndex(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt: java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.time.AdjustedTimeMark: AdjustedTimeMark(kotlin.time.TimeMark,long)
kotlinx.coroutines.JobSupport$SelectOnAwaitCompletionHandler: JobSupport$SelectOnAwaitCompletionHandler(kotlinx.coroutines.JobSupport,kotlinx.coroutines.selects.SelectInstance)
kotlinx.coroutines.channels.ProducerCoroutine: boolean isActive()
kotlin.text.StringsKt___StringsKt: java.lang.Character maxOrNull(java.lang.CharSequence)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map fold(kotlin.collections.Grouping,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function3)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
kotlin.collections.ArrayDeque$Companion: int newCapacity$kotlin_stdlib(int,int)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path)
kotlin.sequences.TakeSequence$iterator$1: java.lang.Object next()
kotlinx.coroutines.channels.BufferedChannel: boolean cancel(java.lang.Throwable)
kotlin.text.StringsKt___StringsKt: java.util.List toMutableList(java.lang.CharSequence)
kotlinx.coroutines.JobSupport$children$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.sequences.DropWhileSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.DropWhileSequence)
kotlin.jvm.internal.ClassReference: boolean isSealed()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Object[])
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable createFinalException(java.lang.Throwable,java.lang.Throwable,java.util.ArrayDeque)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(java.lang.Object[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__EmittersKt: java.lang.Object access$invokeSafely$FlowKt__EmittersKt(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,java.lang.Throwable,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: long maxByOrThrow(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel$onReceive$1: void invoke(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1(kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection copy(kotlin.reflect.KVariance,kotlin.reflect.KType)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.work.impl.Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte reduceIndexedOrNull-EOyYB1Y(byte[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.EmptyFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character maxWith(char[],java.util.Comparator)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job)
kotlin.collections.ArraysKt___ArraysKt: boolean any(java.lang.Object[])
kotlinx.coroutines.SchedulerTaskKt: void getTaskContext$annotations(kotlinx.coroutines.scheduling.Task)
kotlin.jvm.internal.PropertyReference2: kotlin.reflect.KCallable computeReflected()
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2: FlowKt__ReduceKt$single$2(kotlin.jvm.internal.Ref$ObjectRef)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimEnd(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],java.lang.Object[])
kotlin.UByteKt: byte toUByte(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence requireNoNulls(kotlin.sequences.Sequence)
kotlin.collections.CollectionsKt___CollectionsKt: double maxOf(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ReceiveChannel openSubscription()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object singleOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt__SequencesKt$flatten$3: java.lang.Object invoke(java.lang.Object)
kotlin.collections.builders.AbstractMapBuilderEntrySet: boolean contains(java.util.Map$Entry)
kotlin.collections.MapsKt__MapsKt: java.util.Map orEmpty(java.util.Map)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow delayEach(kotlinx.coroutines.flow.Flow,long)
kotlin.jvm.internal.Reflection: void setUpperBounds(kotlin.reflect.KTypeParameter,kotlin.reflect.KType[])
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.FileVisitResult copyToRecursively$error$PathsKt__PathRecursiveFunctionsKt(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,java.nio.file.Path,java.lang.Exception)
kotlin.UShort: short and-xj2QHRw(short,short)
kotlin.text.StringsKt__StringsKt$iterator$1: char nextChar()
kotlin.text.StringsKt__StringsKt: boolean contains(java.lang.CharSequence,kotlin.text.Regex)
kotlin.collections.AbstractCollection: boolean add(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(java.lang.Iterable)
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List)
kotlin.jvm.internal.MutablePropertyReference0Impl: void set(java.lang.Object)
kotlinx.coroutines.internal.Synchronized_commonKt: java.lang.Object synchronized(java.lang.Object,kotlin.jvm.functions.Function0)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UInt max--ajY-9A(int[])
kotlin.jvm.internal.CharCompanionObject: void getMIN_VALUE$annotations()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KMutableProperty$Setter getSetter()
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flatMapMerge(kotlinx.coroutines.flow.Flow,int,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsKt: boolean toBooleanStrict(java.lang.String)
kotlin.coroutines.EmptyCoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.coroutines.EmptyCoroutineContext: EmptyCoroutineContext()
kotlin.PreconditionsKt__PreconditionsKt: java.lang.Object requireNotNull(java.lang.Object,kotlin.jvm.functions.Function0)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol getCHANNEL_CLOSED()
kotlin.ULong: boolean equals-impl0(long,long)
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(boolean[])
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.CoroutineContext getContext()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(double[])
kotlin.time.Duration$Companion: long days-UwyO8pc(int)
kotlinx.coroutines.CancellableContinuationImpl: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$SendBroadcast: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object toList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(boolean[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong reduceRightIndexedOrNull-z1zDJgo(long[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2,kotlin.coroutines.Continuation)
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: void resumeWith(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(boolean[])
kotlin.collections.ArraysKt___ArraysKt: char minOrThrow(char[])
kotlinx.coroutines.selects.SelectImplementation$processResultAndInvokeBlockRecoveringException$1: SelectImplementation$processResultAndInvokeBlockRecoveringException$1(kotlinx.coroutines.selects.SelectImplementation,kotlin.coroutines.Continuation)
kotlin.Pair: java.lang.Object component1()
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndent$default(java.lang.String,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.random.Random$Default: double nextDouble()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.jvm.JvmPackageName: java.lang.String name()
kotlin.collections.ArraysKt___ArraysKt: float maxOf(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ranges.IntRange getIndices-QwZRm1k(long[])
kotlin.UNumbersKt: int countOneBits-WZ4Q5Ns(int)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(byte[])
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.util.List enhanceStackTraceWithThreadDumpImpl(java.lang.String,java.lang.Thread,java.util.List)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consumeEach$$forInline(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Iterable asIterable(kotlin.sequences.Sequence)
kotlin.sequences.SequenceBuilderIterator: void resumeWith(java.lang.Object)
kotlinx.coroutines.channels.BroadcastCoroutine: void invokeOnClose(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte min(byte[])
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
kotlin.ranges.RangesKt___RangesKt: int coerceIn(int,kotlin.ranges.ClosedRange)
kotlin.jvm.internal.ClassBasedDeclarationContainer: java.lang.Class getJClass()
kotlin.io.encoding.Base64: byte[] decode(java.lang.CharSequence,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(short[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.text.MatcherMatchResult$groupValues$1: int indexOf(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function5)
kotlin.NumbersKt__FloorDivModKt: long mod(int,long)
kotlin.sequences.SequencesKt___SequencesKt$onEachIndexed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character minOrNull(char[])
kotlin.collections.CollectionsKt__CollectionsKt: java.util.ArrayList arrayListOf()
kotlin.jvm.internal.AdaptedFunctionReference: int getArity()
kotlin.collections.ArraysKt___ArraysKt: int[] toIntArray(java.lang.Integer[])
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: FlowKt__ZipKt$combine$1$1(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.sequences.TakeWhileSequence$iterator$1: void setNextState(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: boolean none(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.Ref$BooleanRef: java.lang.String toString()
kotlin.collections.UArraySortingKt: void quickSort-oBK06Vg(int[],int,int)
kotlinx.coroutines.sync.Semaphore: int getAvailablePermits()
kotlin.io.FilePathComponents: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.selects.SelectImplementation$ClauseData: java.lang.Object processResult(java.lang.Object)
kotlin.io.path.DirectoryEntriesReader: java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
kotlin.jvm.internal.TypeIntrinsics: java.util.List castToList(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyOf(boolean[],int)
kotlin.text.StringsKt___StringsKt$windowedSequence$2: java.lang.Object invoke(int)
kotlin.collections.ArraysKt___ArraysKt: byte single(byte[],kotlin.jvm.functions.Function1)
kotlin.NumbersKt__BigIntegersKt: NumbersKt__BigIntegersKt()
kotlin.time.AbstractLongTimeSource$LongTimeMark: long effectiveDuration-UwyO8pc$kotlin_stdlib()
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(char[],kotlin.jvm.functions.Function2)
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlin.jvm.functions.Function16: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.reflect.KCallable$DefaultImpls: void getVisibility$annotations()
kotlin.properties.NotNullVar: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
kotlinx.coroutines.scheduling.LimitingDispatcher: java.lang.String toString()
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void resume(kotlin.Unit,kotlin.jvm.functions.Function1)
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3: java.util.Iterator iterator()
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.Metadata$DefaultImpls: void bv$annotations()
kotlin.collections.AbstractList$Companion: AbstractList$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ranges.UIntProgression: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double minOf(double[],kotlin.jvm.functions.Function1)
kotlin.io.FilesKt__UtilsKt: FilesKt__UtilsKt()
kotlinx.coroutines.DefaultExecutor: void shutdownForTests(long)
kotlin.UByte: short toShort-impl(byte)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: kotlinx.coroutines.internal.ThreadSafeHeap getHeap()
kotlinx.coroutines.future.FutureKt$asCompletableFuture$1: void invoke(java.lang.Throwable)
kotlin.collections.EmptyMap: java.lang.Void put(java.lang.Object,java.lang.Void)
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName copy(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long minOrNull(long[])
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
kotlinx.coroutines.flow.internal.AbortFlowException: java.lang.Throwable fillInStackTrace()
kotlinx.coroutines.NonCancellable: void getParent$annotations()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short min(short[])
kotlin.collections.ArraysKt___ArraysKt$withIndex$2: ArraysKt___ArraysKt$withIndex$2(byte[])
kotlin.collections.ReversedList: java.lang.Object get(int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flattenMerge(kotlinx.coroutines.flow.Flow,int)
kotlin.time.DurationKt: void getMilliseconds$annotations(int)
kotlin.UShort: int toUInt-pVg5ArA(short)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase)
kotlin.internal.ProgressionUtilKt: long getProgressionLastElement(long,long,long)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.ULong maxBy-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.comparisons.ReversedComparator: ReversedComparator(java.util.Comparator)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel distinct(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Object minBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
kotlin.NumbersKt__NumbersJVMKt: int countOneBits(long)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(long,int)
kotlin.Metadata: java.lang.String pn()
kotlin.collections.AbstractMap$keys$1: boolean contains(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: short last(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object lastOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.UByte: byte unbox-impl()
kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper: DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort minWithOrNull-eOHTfZs(short[],java.util.Comparator)
kotlinx.coroutines.internal.MainDispatcherFactory$DefaultImpls: java.lang.String hintOnError(kotlinx.coroutines.internal.MainDispatcherFactory)
kotlin.text.StringsKt___StringsKt: java.util.List windowed(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: double max(double,double)
kotlinx.coroutines.CancellableContinuationImpl: void releaseClaimedReusableContinuation$kotlinx_coroutines_core()
kotlin.random.Random: int nextInt(int,int)
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.MapWithDefaultImpl: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(double[])
kotlin.jvm.internal.ArrayIterator: java.lang.Object[] getArray()
kotlin.ranges.RangesKt___RangesKt: java.lang.Character randomOrNull(kotlin.ranges.CharRange,kotlin.random.Random)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldIndexed-yVwIW0Q(int[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.BufferedChannel$receiveCatching$1: BufferedChannel$receiveCatching$1(kotlinx.coroutines.channels.BufferedChannel,kotlin.coroutines.Continuation)
kotlin.UByte: long mod-VKZWuLQ(byte,long)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(boolean[],kotlin.jvm.functions.Function2)
kotlin.collections.builders.ListBuilder: int access$getLength$p(kotlin.collections.builders.ListBuilder)
kotlin.collections.MovingSubList: int getSize()
kotlinx.coroutines.channels.SendChannel: boolean close(java.lang.Throwable)
kotlin.io.path.PathTreeWalk: boolean access$getFollowLinks(kotlin.io.path.PathTreeWalk)
kotlin.collections.ArraysKt___ArraysKt: boolean reduce(boolean[],kotlin.jvm.functions.Function2)
kotlin.io.FileSystemException: java.lang.String getReason()
kotlin.text.StringsKt__StringsJVMKt: boolean equals(java.lang.String,java.lang.String,boolean)
kotlin.time.Duration$Companion: long days-UwyO8pc(long)
kotlinx.coroutines.CoroutineDispatcher$Key: CoroutineDispatcher$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.ClassReference$Companion: ClassReference$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.CharsKt__CharJVMKt: CharsKt__CharJVMKt()
kotlin.math.MathKt__MathJVMKt: double atan(double)
kotlinx.coroutines.flow.FlowKt: void forEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.ResumeAwaitOnCompletion: java.lang.Object invoke(java.lang.Object)
kotlin.math.MathKt__MathJVMKt: double cbrt(double)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.ranges.LongRange$Companion: LongRange$Companion()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.sequences.EmptySequence: kotlin.sequences.EmptySequence take(int)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: ConflatedBroadcastChannel()
kotlin.io.FileTreeWalk: FileTreeWalk(java.io.File,kotlin.io.FileWalkDirection,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.MutableMapWithDefaultImpl: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.BooleanSpreadBuilder: int getSize(java.lang.Object)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path writeLines$default(java.nio.file.Path,kotlin.sequences.Sequence,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1: SequencesKt___SequencesKt$filterIsInstance$1()
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: StringsKt__IndentKt$getIndentFunction$1()
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean isEmpty()
kotlin.sequences.TakeWhileSequence$iterator$1: void remove()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-UCnP4_w(byte[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.collections.ArrayAsCollection: java.util.Iterator iterator()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow skip(kotlinx.coroutines.flow.Flow,int)
kotlinx.coroutines.sync.SemaphoreSegment: int getNumberOfSlots()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List filterNotNull(java.lang.Iterable)
kotlin.collections.builders.ListBuilder: void checkIsMutable()
kotlin.io.ByteStreamsKt: java.io.InputStreamReader reader$default(java.io.InputStream,java.nio.charset.Charset,int,java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: java.util.List split$default(java.lang.CharSequence,java.util.regex.Pattern,int,int,java.lang.Object)
kotlinx.coroutines.flow.SharedFlowKt: kotlinx.coroutines.flow.MutableSharedFlow MutableSharedFlow$default(int,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Comparable min(java.lang.Comparable[])
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.ThreadContextElement invoke(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.EventLoop: boolean isActive()
kotlin.jvm.internal.FloatSpreadBuilder: int getSize(float[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemRowTitle(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(int[])
kotlin.io.encoding.EncodeOutputStream: void write(byte[],int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAt(java.lang.Iterable,int)
kotlin.UByteArray: java.util.Iterator iterator()
kotlinx.coroutines.internal.LockFreeLinkedListHead: kotlinx.coroutines.internal.LockFreeLinkedListNode nextIfRemoved()
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberConflated: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Throwable)
kotlin.collections.EmptyList: int getSize()
kotlin.UShort: long plus-VKZWuLQ(short,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sortedBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.random.XorWowRandom: XorWowRandom(int,int,int,int,int,int)
kotlin.collections.MapsKt__MapsKt: java.util.Map minus(java.util.Map,java.lang.Iterable)
kotlin.io.FileTreeWalk: kotlin.io.FileTreeWalk onFail(kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.SharedFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.text.Regex$findAll$1: java.lang.Object invoke()
kotlin.collections.ArrayDeque: int positiveMod(int)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.EmptyMap: java.util.Collection getValues()
kotlinx.coroutines.JobSupport$children$1: JobSupport$children$1(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: FlowKt__ZipKt$combine$6$2(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder: int size()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object findLast(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.ULong: short mod-xj2QHRw(long,short)
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.Triple: Triple(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ProduceKt$awaitClose$2: ProduceKt$awaitClose$2()
kotlinx.coroutines.flow.StartedLazily$command$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.math.MathKt__MathJVMKt: double sinh(double)
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Double,java.lang.Double)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(char[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
kotlin.ULongArray: int getSize()
kotlin.text.StringsKt__IndentKt: kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String)
kotlin.jvm.internal.ClassReference: java.lang.Object getObjectInstance()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scan-A8wKCXQ(long[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelResult$Failed: java.lang.String toString()
kotlin.text.StringsKt___StringsKt: java.lang.String drop(java.lang.String,int)
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1: SequencesKt__SequencesKt$Sequence$1(kotlin.jvm.functions.Function0)
kotlin.time.Duration: void getInDays$annotations()
kotlin.Unit: Unit()
kotlinx.coroutines.channels.BufferedChannel: void access$onClosedSendOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlinx.coroutines.CancellableContinuation)
kotlin.math.MathKt__MathJVMKt: float asinh(float)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte minOrNull(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(char[],java.lang.Iterable)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
kotlin.sequences.SequencesKt___SequencesKt$onEachIndexed$1: SequencesKt___SequencesKt$onEachIndexed$1(kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-H21X9dk(byte[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
kotlin.text.CharsKt__CharKt: int digitToInt(char,int)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow flowCombine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.BufferedChannel: void registerSelectForSend(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte max(byte[])
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: double minOf(double,double,double)
kotlin.collections.ArraysKt___ArraysKt: byte component1(byte[])
androidx.core.graphics.drawable.IconCompat: IconCompat()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short last-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(java.lang.Object[],int)
kotlin.sequences.TransformingIndexedSequence$iterator$1: java.util.Iterator getIterator()
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$3: java.lang.Object invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
kotlin.jvm.internal.LongSpreadBuilder: long[] toArray()
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult visitFileFailed(java.lang.Object,java.io.IOException)
kotlinx.coroutines.android.HandlerDispatcherKt: void updateChoreographerAndPostFrameCallback(kotlinx.coroutines.CancellableContinuation)
kotlin.collections.ArrayAsCollection: boolean add(java.lang.Object)
kotlin.collections.builders.SetBuilder: int getSize()
kotlin.text.MatcherMatchResult: kotlin.text.MatchResult$Destructured getDestructured()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: void enterDirectory$PathsKt__PathRecursiveFunctionsKt(java.nio.file.SecureDirectoryStream,java.nio.file.Path,kotlin.io.path.ExceptionsCollector)
kotlin.io.FilesKt__UtilsKt$copyRecursively$1: java.lang.Void invoke(java.io.File,java.io.IOException)
kotlinx.coroutines.CompletableJob: boolean complete()
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: float toFloat(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filter-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.StackTraceRecoveryKt: void initCause(java.lang.Throwable,java.lang.Throwable)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte getOrElse-cO-VybQ(byte[],int,kotlin.jvm.functions.Function1)
kotlin.collections.ReversedListReadOnly: java.lang.Object get(int)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence Sequence(kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],long[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt__ArraysJVMKt: java.lang.Object[] arrayOfNulls(java.lang.Object[],int)
kotlin.io.path.PathsKt__PathReadWriteKt: java.lang.Object useLines(java.nio.file.Path,java.nio.charset.Charset,kotlin.jvm.functions.Function1)
kotlinx.coroutines.DefaultExecutor: void shutdownError()
kotlin.collections.AbstractMap$Companion: AbstractMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short minByOrNull(short[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
kotlinx.coroutines.channels.BufferedChannel: void invokeCloseHandler()
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow[])
kotlin.text.StringsKt__StringsKt: java.lang.String trimStart(java.lang.String)
kotlin.text.StringsKt___StringsKt: java.lang.Iterable asIterable(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(java.lang.Object[],int)
kotlin.concurrent.LocksKt: java.lang.Object withLock(java.util.concurrent.locks.Lock,kotlin.jvm.functions.Function0)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte lastOrNull-GBYM_sE(byte[])
kotlin.collections.ArraysKt___ArraysJvmKt: long[] plus(long[],long)
kotlin.text.StringsKt__StringsKt: java.lang.String substring$default(java.lang.CharSequence,int,int,int,java.lang.Object)
kotlin.reflect.KClass: boolean isOpen()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: void runWeakRefQueueCleaningLoopUntilInterrupted()
kotlin.io.ConsoleKt: java.lang.String readLine()
kotlin.properties.Delegates$vetoable$1: boolean beforeChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
kotlin.sequences.MergingSequence$iterator$1: java.util.Iterator getIterator1()
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.UByte: int rem-7apg3OU(byte,byte)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow debounceDuration(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String repeat(java.lang.CharSequence,int)
kotlin.coroutines.CombinedContext$Serialized: kotlin.coroutines.CoroutineContext[] getElements()
kotlinx.coroutines.ExecutorsKt: java.util.concurrent.Executor asExecutor(kotlinx.coroutines.CoroutineDispatcher)
kotlin.collections.MapsKt___MapsKt: java.lang.Object maxOfWith(java.util.Map,java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlin.sequences.SequencesKt__SequencesJVMKt: SequencesKt__SequencesJVMKt()
kotlinx.coroutines.internal.ThreadLocalKey: java.lang.ThreadLocal component1()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object getOrElse(java.util.List,int,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path moveTo$default(java.nio.file.Path,java.nio.file.Path,boolean,int,java.lang.Object)
kotlin.ranges.ULongRange: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1: BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1(kotlinx.coroutines.CoroutineExceptionHandler$Key)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort randomOrNull-rL5Bavg(short[])
kotlin.io.FileTreeWalk: kotlin.io.FileTreeWalk onLeave(kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobKt: kotlinx.coroutines.DisposableHandle cancelFutureOnCompletion(kotlinx.coroutines.Job,java.util.concurrent.Future)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWith-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.text.CharsKt__CharJVMKt: char toLowerCase(char)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: FlowKt__EmittersKt$onEmpty$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(int[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: float minOf(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minByOrNull(double[],kotlin.jvm.functions.Function1)
kotlin.UShort: short xor-xj2QHRw(short,short)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal rem(java.math.BigDecimal,java.math.BigDecimal)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Boolean minWith(boolean[],java.util.Comparator)
kotlin.io.FileSystemException: FileSystemException(java.io.File,java.io.File,java.lang.String)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.sequences.Sequence,java.util.Map)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1: int compare(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.ChildCancelledException: java.lang.Throwable fillInStackTrace()
kotlin.reflect.KClass$DefaultImpls: void isInner$annotations()
kotlin.coroutines.ContinuationKt: kotlin.coroutines.Continuation Continuation(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence subSequence(java.lang.CharSequence,kotlin.ranges.IntRange)
kotlin.reflect.KDeclarationContainer: java.util.Collection getMembers()
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object getExceptionsHolder()
kotlinx.coroutines.JobSupport: boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.BufferedReader bufferedReader(java.nio.file.Path,java.nio.charset.Charset,int,java.nio.file.OpenOption[])
kotlinx.coroutines.scheduling.WorkQueue: long tryStealLastScheduled(int,kotlin.jvm.internal.Ref$ObjectRef)
kotlin.UShortArray: UShortArray(short[])
kotlinx.coroutines.flow.internal.ChildCancelledException: ChildCancelledException()
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol access$getSTATE_REG$p()
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: ChannelsKt__ChannelsKt$sendBlocking$1(kotlinx.coroutines.channels.SendChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.StateFlow stateIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,java.lang.Object)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: SchedulerCoroutineDispatcher(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.internal.OnDemandAllocatingPool: boolean allocate()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(java.lang.Object[])
kotlin.ranges.ComparableOpenEndRange: int hashCode()
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt reduceOrNull-WyvcNBI(int[],kotlin.jvm.functions.Function2)
kotlin.io.FilesKt__UtilsKt$copyRecursively$1: FilesKt__UtilsKt$copyRecursively$1()
kotlin.collections.ArraysKt___ArraysKt: boolean maxWithOrThrow(boolean[],java.util.Comparator)
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfByte(java.lang.Iterable)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
kotlin.collections.AbstractMutableMap: java.util.Set getKeys()
kotlin.ULong: long rem-VKZWuLQ(long,long)
kotlin.collections.builders.ListBuilder: void ensureCapacity(int)
kotlin.Triple: java.lang.Object component3()
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable,java.util.Map)
kotlin.UByte: int plus-7apg3OU(byte,byte)
kotlin.collections.ArraysKt___ArraysKt: boolean none(long[],kotlin.jvm.functions.Function1)
kotlin.UInt: int toInt-impl(int)
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.CoroutineExceptionHandler,kotlin.coroutines.CoroutineContext)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection mapIndexedTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.math.MathKt__MathJVMKt: float getAbsoluteValue(float)
kotlinx.coroutines.channels.BufferedChannel$receiveImpl$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Object toCollection(kotlinx.coroutines.flow.Flow,java.util.Collection,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object doSelect$suspendImpl(kotlinx.coroutines.selects.SelectImplementation,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ShortSpreadBuilder: void add(short)
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.SynchronizedLazyImpl: SynchronizedLazyImpl(kotlin.jvm.functions.Function0,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean all(boolean[],kotlin.jvm.functions.Function1)
kotlin.sequences.DropSequence$iterator$1: void drop()
kotlin.jvm.internal.FloatCompanionObject: void getMAX_VALUE$annotations()
kotlinx.coroutines.internal.LimitedDispatcher: java.lang.Runnable obtainTaskOrDeallocateWorker()
kotlin.NumbersKt__FloorDivModKt: byte mod(short,byte)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo(android.view.accessibility.AccessibilityNodeInfo)
kotlin.coroutines.CoroutineContextImplKt: kotlin.coroutines.CoroutineContext minusPolymorphicKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
kotlinx.coroutines.flow.SharedFlowImpl: void updateBufferLocked(long,long,long,long)
kotlin.text.MatcherMatchResult: kotlin.text.MatchResult next()
kotlinx.coroutines.internal.ExceptionSuccessfullyProcessed: ExceptionSuccessfullyProcessed()
kotlin.math.MathKt__MathJVMKt: float acos(float)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function5)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.Result$Failure: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: float minOf-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.Job: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable maxOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.random.Random$Default: double nextDouble(double,double)
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ULongArray: boolean isEmpty()
kotlin.collections.CollectionsKt__IteratorsKt: java.util.Iterator iterator(java.util.Iterator)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence onEach(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.io.ConsoleKt: void println(char)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] sliceArray(java.lang.Object[],java.util.Collection)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.SemaphoreKt: java.lang.Object withPermit$$forInline(kotlinx.coroutines.sync.Semaphore,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor[] values()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence asSequence(kotlin.sequences.Sequence)
kotlin.collections.AbstractMap$keys$1: java.util.Iterator iterator()
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ChannelResult$Failed: ChannelResult$Failed()
kotlin.collections.CollectionsKt__IteratorsJVMKt: CollectionsKt__IteratorsJVMKt()
kotlin.collections.ArraysKt___ArraysKt: short first(short[])
kotlin.jvm.internal.InlineMarker: void finallyStart(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateBy(java.lang.Iterable,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.UByte: int minus-WZ4Q5Ns(byte,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] sortedArrayDescending-rL5Bavg(short[])
kotlinx.coroutines.scheduling.TasksKt: boolean isBlocking(kotlinx.coroutines.scheduling.Task)
kotlin.reflect.TypeOfKt: kotlin.reflect.KType typeOf()
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
kotlin.random.jdk8.PlatformThreadLocalRandom: java.util.Random getImpl()
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object access$emitSuspend(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: FlowKt__LimitKt$dropWhile$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1,kotlin.coroutines.Continuation)
kotlin.time.DurationUnitKt__DurationUnitJvmKt: double convertDurationUnit(double,kotlin.time.DurationUnit,kotlin.time.DurationUnit)
kotlin.coroutines.CoroutineContext$Element: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.AbstractList: java.util.Iterator iterator()
kotlinx.coroutines.AbstractTimeSource: void parkNanos(java.lang.Object,long)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: FlowKt__TransformKt$runningFold$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1,kotlin.coroutines.Continuation)
kotlin.contracts.ContractBuilder: kotlin.contracts.CallsInPlace callsInPlace(kotlin.Function,kotlin.contracts.InvocationKind)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.math.BigDecimal sumOfBigDecimal(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
kotlinx.coroutines.sync.SemaphoreImpl: void onAcquireRegFunction(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.concurrent.TimersKt: java.util.Timer timer(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: byte maxOf-Wr6uiD8(byte,byte[])
kotlin.jvm.internal.ArrayIterator: java.lang.Object next()
kotlin.math.MathKt__MathJVMKt: float max(float,float)
kotlin.text.StringsKt__IndentKt$prependIndent$1: StringsKt__IndentKt$prependIndent$1(java.lang.String)
kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.TaskContextImpl: int getTaskMode()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(long[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow shareIn$default(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,int,int,java.lang.Object)
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction[] values()
kotlin.TuplesKt: kotlin.Pair to(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.channels.ReceiveChannel fixedPeriodTicker$default(kotlinx.coroutines.CoroutineScope,long,long,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: FlowKt__DelayKt$debounceInternal$1$3$1(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.internal.Ref$ObjectRef,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: BroadcastKt$broadcast$2(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapIndexedTo-pe2Q0Dw(long[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlin.collections.AbstractCollection: boolean remove(java.lang.Object)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.math.MathKt__MathJVMKt: double sqrt(double)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection filterIndexedTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ConcurrentKt: boolean removeFutureOnCancel(java.util.concurrent.Executor)
kotlin.sequences.IndexingSequence$iterator$1: IndexingSequence$iterator$1(kotlin.sequences.IndexingSequence)
kotlin.reflect.KClass$DefaultImpls: void isSealed$annotations()
kotlin.jvm.internal.TypeIntrinsics: java.util.Collection castToCollection(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getSendSegment$FU$p()
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence takeWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: float log2(float)
kotlin.properties.ObservableProperty: void afterChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
kotlin.math.MathKt__MathJVMKt: long roundToLong(double)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(long[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-2csIQuQ(byte[])
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,long)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow concatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8: java.util.Iterator iterator()
kotlin.jvm.internal.MutablePropertyReference1Impl: MutablePropertyReference1Impl(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.sync.MutexImpl: java.lang.Object lock$suspendImpl(kotlinx.coroutines.sync.MutexImpl,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ArrayLongIterator: boolean hasNext()
kotlin.ranges.UIntRange: UIntRange(int,int)
kotlinx.coroutines.sync.SemaphoreImpl: boolean tryAcquire()
kotlin.collections.builders.MapBuilder: java.util.Collection getValues()
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object random(java.util.Collection,kotlin.random.Random)
kotlin.time.Duration$Companion: long hours-UwyO8pc(int)
kotlin.jvm.internal.ShortSpreadBuilder: int getSize(java.lang.Object)
kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.selects.SelectImplementation$processResultAndInvokeBlockRecoveringException$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ULong: long dec-s-VKNKU(long)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.io.FilesKt__UtilsKt: boolean copyRecursively(java.io.File,java.io.File,boolean,kotlin.jvm.functions.Function2)
kotlin.collections.SetsKt__SetsKt: java.util.Set setOfNotNull(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3: java.util.Iterator iterator()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.sequences.USequencesKt___USequencesKt: int sumOfUShort(kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysKt: char[] sortedArrayDescending(char[])
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: ChannelFlowTransformLatest$flowCollect$3$1$emit$1(kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.InterruptibleKt: java.lang.Object access$runInterruptibleInExpectedContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: int sum(int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(long[],kotlin.ranges.IntRange)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double minOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt lastOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: boolean cancelParent(java.lang.Throwable)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,long)
kotlin.collections.AbstractMap$keys$1$iterator$1: AbstractMap$keys$1$iterator$1(java.util.Iterator)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$keys$1: ConcurrentWeakMap$keys$1()
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1: SequencesKt___SequencesKt$zipWithNext$1()
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.LongRange,byte)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: java.lang.Object collectLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.random.Random$Default: Random$Default(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)
kotlinx.coroutines.JobKt: void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlin.collections.EmptySet: java.lang.Object[] toArray(java.lang.Object[])
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
kotlin.UShort: short or-xj2QHRw(short,short)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(long[],kotlin.jvm.functions.Function1)
kotlin.time.Duration$Companion: void getMilliseconds-UwyO8pc$annotations(double)
kotlin.reflect.KCallable: kotlin.reflect.KType getReturnType()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(short[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
kotlin.jvm.internal.Intrinsics: void throwJavaNpe(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: int component5(int[])
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
kotlin.reflect.TypesJVMKt: java.lang.reflect.Type getJavaType(kotlin.reflect.KType)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
kotlin.jvm.internal.Intrinsics$Kotlin: Intrinsics$Kotlin()
kotlinx.coroutines.scheduling.CoroutineScheduler: int createdWorkers(long)
kotlin.jvm.internal.PackageReference: java.lang.Class getJClass()
kotlin.internal.PlatformImplementations: java.util.List getSuppressed(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double maxOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.MutableLocalVariableReference: void set(java.lang.Object)
kotlin.NumbersKt__NumbersJVMKt: boolean isNaN(double)
kotlin.collections.ArrayDeque: java.lang.Object[] testToArray$kotlin_stdlib(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] copyInto-sIZ3KeM$default(int[],int[],int,int,int,int,java.lang.Object)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow takeWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWithOrNull-myNOsp4(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.ResultKt: void throwOnFailure(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,java.util.Map,kotlin.coroutines.Continuation)
kotlin.collections.RingBuffer: int forward(int,int)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map buildMapInternal(kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: float cos(float)
kotlin.sequences.SequencesKt__SequencesKt$flatten$1: java.lang.Object invoke(java.lang.Object)
kotlin.ULongArray: void getStorage$annotations()
kotlin.collections.ArraysKt___ArraysKt: boolean none(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.SystemPropsKt: int systemProp(java.lang.String,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: boolean reduceIndexed(boolean[],kotlin.jvm.functions.Function3)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(short,short)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(char[])
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
kotlin.UShort: int minus-7apg3OU(short,byte)
kotlin.sequences.SequencesKt__SequencesKt: SequencesKt__SequencesKt()
kotlinx.coroutines.internal.MainDispatcherLoader: MainDispatcherLoader()
kotlin.text.StringsKt__StringsKt: java.lang.String removePrefix(java.lang.String,java.lang.CharSequence)
kotlinx.coroutines.NonCancellable: kotlin.sequences.Sequence getChildren()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(int[],int)
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.lang.Iterable)
kotlin.coroutines.CoroutineContext$plus$1: CoroutineContext$plus$1()
kotlinx.coroutines.AwaitKt: java.lang.Object joinAll(kotlinx.coroutines.Job[],kotlin.coroutines.Continuation)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigDecimal toBigDecimal(java.lang.String,java.math.MathContext)
kotlin.jvm.internal.ClassReference: void isCompanion$annotations()
kotlin.text.StringsKt___StringsKt: java.util.Collection flatMapTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ThreadSafeHeap: void siftDownFrom(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFoldIndexed-3iWJZGE(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer findLast(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.JobSupport$onJoin$1: JobSupport$onJoin$1()
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: ChannelLimitedFlowMerge$collectTo$2$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.internal.SendingCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.CombineKt: java.lang.Object combineInternal(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.reflect.KParameter: kotlin.reflect.KType getType()
kotlin.collections.SetsKt___SetsKt: java.util.Set minus(java.util.Set,java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object firstOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.io.ByteStreamsKt: java.io.BufferedReader bufferedReader(java.io.InputStream,java.nio.charset.Charset)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float findLast(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannelKt: boolean getEbPauseExpandBuffers(long)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: int minOf-WZ9TVnA(int,int,int)
kotlin.collections.CollectionsKt__CollectionsKt: boolean isNotEmpty(java.util.Collection)
kotlin.enums.EnumEntriesSerializationProxy: EnumEntriesSerializationProxy(java.lang.Enum[])
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1: LockFreeLinkedListNode$toString$1(java.lang.Object)
kotlin.random.KotlinRandom: int next(int)
kotlin.coroutines.ContinuationKt: kotlin.coroutines.CoroutineContext getCoroutineContext()
kotlin.jvm.internal.Intrinsics: void throwIllegalState(java.lang.String)
kotlin.ULongArray: boolean equals-impl0(long[],long[])
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(char[],kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List take(java.lang.Iterable,int)
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlin.collections.SetsKt___SetsKt: java.util.Set plus(java.util.Set,java.lang.Object)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
kotlin.ranges.OpenEndDoubleRange: java.lang.Comparable getStart()
kotlin.text.StringsKt___StringsKt: int indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function1 access$getGetNextValue$p(kotlin.sequences.GeneratorSequence)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: java.lang.Byte get(int)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
kotlin.collections.EmptyIterator: java.lang.Void next()
kotlinx.coroutines.DisposeOnCompletion: DisposeOnCompletion(kotlinx.coroutines.DisposableHandle)
kotlin.coroutines.EmptyCoroutineContext: java.lang.String toString()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.jvm.internal.MagicApiIntrinsics: MagicApiIntrinsics()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(int[],int[])
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
kotlin.jvm.internal.PrimitiveSpreadBuilder: void getSpreads$annotations()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.util.List scan(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt___StringsKt: java.util.Map groupBy(java.lang.CharSequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.SpreadBuilder: java.lang.Object[] toArray(java.lang.Object[])
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
kotlinx.coroutines.Unconfined: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.text.StringsKt__StringsKt: java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence,java.lang.CharSequence)
kotlin.io.path.PathsKt__PathUtilsKt: boolean isWritable(java.nio.file.Path)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(java.lang.Object[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.RingBuffer: java.lang.Object[] toArray()
kotlinx.coroutines.internal.WeakMapCtorCache: kotlin.jvm.functions.Function1 get(java.lang.Class)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List takeLast(java.util.List,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long getOrNull(long[],int)
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(double[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2)
kotlinx.coroutines.flow.FlowKt: java.lang.Object toSet(kotlinx.coroutines.flow.Flow,java.util.Set,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduce-s8dVfGU(long[],kotlin.jvm.functions.Function2)
kotlin.collections.DoubleIterator: void remove()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(java.lang.Object[],java.lang.Object,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldIndexed-bzxtMww(short[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.CollectionsKt__IterablesKt: CollectionsKt__IterablesKt()
kotlin.ranges.RangesKt___RangesKt: int coerceAtLeast(int,int)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: boolean addConditionally$atomicfu$array(java.lang.Object,java.util.concurrent.atomic.AtomicIntegerArray,int,int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelResult$Closed: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(int[],java.util.Comparator)
kotlin.collections.builders.ListBuilderKt: void resetRange(java.lang.Object[],int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer find(int[],kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: double exp(double)
kotlin.DeepRecursiveScopeImpl: java.lang.Object callRecursive(kotlin.DeepRecursiveFunction,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfDouble(java.lang.Iterable)
kotlin.collections.CollectionsKt__MutableCollectionsKt: java.lang.Object removeFirstOrNull(java.util.List)
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer toIntExactOrNull(double)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: ChannelsKt__DeprecatedKt$flatMap$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.reflect.KVariance: kotlin.reflect.KVariance[] values()
kotlin.UIntArrayKt: int[] UIntArray(int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(int[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.AbstractTimeSourceKt: void unTrackTask()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)
kotlinx.coroutines.future.FutureKt$asCompletableFuture$2: FutureKt$asCompletableFuture$2(java.util.concurrent.CompletableFuture)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element)
kotlin.collections.builders.MapBuilder: java.util.Set keySet()
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: FlowKt__ReduceKt$lastOrNull$1(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(char[],kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object minOf(java.lang.Object,java.lang.Object,java.util.Comparator)
kotlin.sequences.SequencesKt___SequencesKt: int indexOfLast(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long minOrThrow-U(long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.UInt: long toLong-impl(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(double[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: byte coerceAtLeast(byte,byte)
kotlin.jvm.internal.IntSpreadBuilder: int getSize(int[])
kotlin.collections.IndexingIterable: java.util.Iterator iterator()
kotlin.enums.EnumEntriesSerializationProxy$Companion: EnumEntriesSerializationProxy$Companion()
kotlinx.coroutines.flow.FlowKt: java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short reduceRightOrNull(short[],kotlin.jvm.functions.Function2)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
kotlinx.coroutines.android.HandlerDispatcherKt: void access$updateChoreographerAndPostFrameCallback(kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.jvm.internal.PropertyReference0Impl: PropertyReference0Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: ChannelsKt__Channels_commonKt$toList$1(kotlin.coroutines.Continuation)
kotlin.UShort: long toLong-impl(short)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String substring(java.lang.String,int,int)
kotlin.io.FilesKt__UtilsKt: java.lang.String getNameWithoutExtension(java.io.File)
kotlin.sequences.SequencesKt__SequencesKt$flatten$2: SequencesKt__SequencesKt$flatten$2()
kotlin.math.MathKt__MathJVMKt: float pow(float,int)
kotlin.sequences.TakeSequence$iterator$1: TakeSequence$iterator$1(kotlin.sequences.TakeSequence)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode correctPrev(kotlinx.coroutines.internal.OpDescriptor)
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: long getMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte lastOrNull(byte[],kotlin.jvm.functions.Function1)
kotlin.text.DelimitedRangesSequence: DelimitedRangesSequence(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int getSize()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: UArraysKt___UArraysJvmKt$asList$3(byte[])
kotlin.ranges.ComparableRange: java.lang.Comparable getEndInclusive()
kotlinx.coroutines.scheduling.DefaultIoScheduler: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlin.sequences.SubSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.SubSequence)
kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOrNull(java.lang.Float[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(float[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.TimeoutCancellationException: kotlinx.coroutines.TimeoutCancellationException createCopy()
kotlin.time.TimedValue: kotlin.time.TimedValue copy-RFiDyg4(java.lang.Object,long)
kotlinx.coroutines.flow.FlowKt__ShareKt: void launchSharingDeferred$FlowKt__ShareKt(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CompletableDeferred)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt getOrNull-qFRl0hI(int[],int)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFold-yXmHNn8(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(byte[],int)
kotlin.Deprecated: kotlin.DeprecationLevel level()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(float[],float[])
kotlin.reflect.TypeImpl: java.lang.String getTypeName()
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName copy$default(kotlinx.coroutines.CoroutineName,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt$withIndex$5: ArraysKt___ArraysKt$withIndex$5(long[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(float[],float[])
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
kotlin.UNumbersKt: int countOneBits-xj2QHRw(short)
kotlin.jvm.internal.ShortCompanionObject: void getSIZE_BITS$annotations()
kotlin.reflect.TypeVariableImpl: boolean equals(java.lang.Object)
kotlin.collections.EmptyList: java.lang.Void remove(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterIndexedTo-pe2Q0Dw(long[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.io.FilesKt__UtilsKt: kotlin.io.FilePathComponents normalize$FilesKt__UtilsKt(kotlin.io.FilePathComponents)
kotlinx.coroutines.sync.MutexImpl: boolean holdsLock(java.lang.Object)
kotlin.text.Regex$findAll$1: kotlin.text.MatchResult invoke()
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlin.coroutines.Continuation createOwner(kotlin.coroutines.Continuation,kotlinx.coroutines.debug.internal.StackTraceFrame)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: void access$setContinuation$p(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator,kotlinx.coroutines.CancellableContinuationImpl)
kotlinx.coroutines.CoroutineExceptionHandlerKt: java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable)
kotlin.jvm.internal.TypeIntrinsics: java.util.Set castToSet(java.lang.Object)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.Pair: int hashCode()
kotlinx.coroutines.flow.SharedFlowImpl: void correctCollectorIndexesOnDropOldest(long)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int lastIndexOf(long)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
kotlinx.coroutines.CoroutineContextKt: java.lang.Object withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0)
kotlinx.coroutines.scheduling.DefaultScheduler: void close()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
kotlin.jvm.internal.CharSpreadBuilder: int getSize(java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.util.Map minus(java.util.Map,java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: void shuffle(short[])
kotlin.collections.MapWithDefaultImpl: java.util.Collection getValues()
kotlin.time.DurationKt: long access$durationOfMillisNormalized(long)
kotlin.collections.ArraysKt___ArraysKt: char[] onEach(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: java.lang.Object tryResume(kotlin.Unit,java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nothingType(kotlin.reflect.KType)
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
kotlin.UIntArray: int get-pVg5ArA(int[],int)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object maxOf(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Comparator)
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.MapsKt__MapsJVMKt: java.util.SortedMap sortedMapOf(java.util.Comparator,kotlin.Pair[])
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger minus(java.math.BigInteger,java.math.BigInteger)
kotlin.ranges.UIntProgression: java.util.Iterator iterator()
kotlinx.coroutines.time.TimeKt: long coerceToMillis(java.time.Duration)
kotlin.UNumbersKt: int countTrailingZeroBits-xj2QHRw(short)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverStackTrace(java.lang.Throwable)
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CompletedContinuation copy(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable)
kotlinx.coroutines.UndispatchedMarker: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.text.Charsets: java.nio.charset.Charset UTF32()
kotlin.collections.MapsKt__MapWithDefaultKt: java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object)
kotlinx.coroutines.selects.SelectImplementation: boolean isCancelled()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(double[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.system.ProcessKt: java.lang.Void exitProcess(int)
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted WhileSubscribed$default(kotlinx.coroutines.flow.SharingStarted$Companion,long,long,int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsJvmKt: CollectionsKt___CollectionsJvmKt()
kotlin.io.FilePathComponents: java.util.List getSegments()
kotlin.ranges.URangesKt___URangesKt: kotlin.UInt randomOrNull(kotlin.ranges.UIntRange,kotlin.random.Random)
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: kotlin.coroutines.CoroutineContext getContext()
kotlin.collections.EmptyMap: int size()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
kotlin.collections.AbstractMutableCollection: boolean add(java.lang.Object)
kotlin.text.MatcherMatchResult$groups$1: kotlin.text.MatchGroup get(java.lang.String)
kotlin.collections.MapWithDefaultImpl: boolean isEmpty()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(long[])
kotlin.enums.EnumEntriesSerializationProxy: java.lang.Object readResolve()
kotlin.time.Duration: void getInMinutes$annotations()
kotlinx.coroutines.channels.SendChannel$DefaultImpls: void isClosedForSend$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void executeTask(kotlinx.coroutines.scheduling.Task)
kotlin.jvm.internal.ShortSpreadBuilder: int getSize(short[])
kotlin.collections.ArraysKt___ArraysKt: void reverse(long[],int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long maxByOrNull(long[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
kotlin.collections.ArraysKt___ArraysKt: float minOf(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.random.RandomKt: long nextLong(kotlin.random.Random,kotlin.ranges.LongRange)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String uppercase(java.lang.String,java.util.Locale)
kotlin.collections.UCollectionsKt___UCollectionsKt: int[] toUIntArray(java.util.Collection)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
kotlin.reflect.KClass: boolean isValue()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort firstOrNull-rL5Bavg(short[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2)
kotlin.collections.AbstractMutableMap: int size()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.ULong maxWith-zrEWJaI(long[],java.util.Comparator)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Byte toByteOrNull(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(char[],java.lang.Iterable)
kotlin.collections.AbstractList$SubList: AbstractList$SubList(kotlin.collections.AbstractList,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] plus-us8wMrg(long[],long[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOf-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher plus(kotlinx.coroutines.CoroutineDispatcher)
kotlin.jvm.internal.Ref$ByteRef: java.lang.String toString()
kotlin.io.ByteStreamsKt$iterator$1: boolean getNextPrepared()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int thenDescending$lambda$2$ComparisonsKt__ComparisonsKt(java.util.Comparator,java.util.Comparator,java.lang.Object,java.lang.Object)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: int maxOf-WZ9TVnA(int,int,int)
kotlin.collections.builders.MapBuilder: java.util.Set getKeys()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.UShortArray: java.util.Iterator iterator-impl(short[])
kotlin.jvm.internal.CallableReference$NoReceiver: kotlin.jvm.internal.CallableReference$NoReceiver access$000()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean firstOrNull(boolean[])
kotlinx.coroutines.android.HandlerContext: void invokeOnTimeout$lambda$3(kotlinx.coroutines.android.HandlerContext,java.lang.Runnable)
kotlin.collections.CharIterator: java.lang.Object next()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
kotlin.NumbersKt__FloorDivModKt: long floorDiv(int,long)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],float[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set createSetBuilder()
kotlin.collections.builders.ListBuilder: boolean contentEquals(java.util.List)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.jvm.internal.FunctionImpl: FunctionImpl()
kotlin.io.encoding.Base64$Default: Base64$Default()
kotlin.collections.ArraysKt___ArraysKt: long sum(long[])
kotlin.math.MathKt__MathJVMKt: float expm1(float)
kotlinx.coroutines.CompletableDeferredImpl: CompletableDeferredImpl(kotlinx.coroutines.Job)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String)
kotlin.ranges.IntRange: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.EventLoopImplBase: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object first(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.coroutines.ContinuationKt: kotlin.coroutines.Continuation createCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.random.RandomKt: void checkRangeBounds(double,double)
kotlinx.coroutines.EventLoopKt: long processNextEventInCurrentThread()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: LockFreeTaskQueueCore(int,boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int maxWithOrThrow-U(int[],java.util.Comparator)
kotlinx.coroutines.JobSupport$children$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId copy(long)
kotlin.reflect.KClass: java.util.Collection getMembers()
kotlin.collections.builders.MapBuilder$Itr: MapBuilder$Itr(kotlin.collections.builders.MapBuilder)
kotlin.math.MathKt__MathJVMKt: float nextDown(float)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(boolean[],java.util.Collection)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void shuffle(java.util.List,java.util.Random)
kotlinx.coroutines.DefaultExecutor: DefaultExecutor()
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.ULong: int mod-WZ4Q5Ns(long,int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: boolean contains(boolean)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: FlowKt__ShareKt$launchSharingDeferred$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CompletableDeferred,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannelKt: long constructSendersAndCloseStatus(long,int)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.io.LinesSequence$iterator$1: LinesSequence$iterator$1(kotlin.io.LinesSequence)
kotlin.UNumbersKt: short takeHighestOneBit-xj2QHRw(short)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: kotlinx.coroutines.flow.Flow receiveAsFlow(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.channels.BufferedChannelKt: boolean access$tryResume0(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: double maxOrThrow(java.lang.Double[])
kotlinx.coroutines.NonCancellable: boolean isCompleted()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(short[])
kotlin.coroutines.ContinuationKt: void startCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.CompletionHandlerBase: void invoke(java.lang.Throwable)
kotlinx.coroutines.future.ContinuationHandler: java.lang.Object apply(java.lang.Object,java.lang.Object)
kotlinx.coroutines.AbstractTimeSource: void unTrackTask()
kotlin.text.CharsKt__CharKt: int digitToInt(char)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOrNull(float[])
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.Object yieldFrames(kotlin.sequences.SequenceScope,kotlin.coroutines.jvm.internal.CoroutineStackFrame,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort singleOrNull-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysKt: boolean all(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow shareIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,int)
kotlin.text.StringsKt___StringsKt$chunkedSequence$1: StringsKt___StringsKt$chunkedSequence$1()
kotlin.text.StringsKt__StringsKt: java.lang.String removeSuffix(java.lang.String,java.lang.CharSequence)
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.UByteArray: boolean remove(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection)
kotlin.collections.EmptyMap: java.lang.String toString()
kotlinx.coroutines.channels.BufferedChannel: void dropFirstElementUntilTheSpecifiedCellIsInTheBuffer(long)
kotlin.math.MathKt__MathJVMKt: double ln(double)
kotlin.time.DurationUnitKt__DurationUnitJvmKt: long convertDurationUnit(long,kotlin.time.DurationUnit,kotlin.time.DurationUnit)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] sliceArray-tAntMlw(int[],kotlin.ranges.IntRange)
kotlin.ranges.URangesKt___URangesKt: int random(kotlin.ranges.UIntRange,kotlin.random.Random)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: ExecutorCoroutineDispatcherImpl(java.util.concurrent.Executor)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.sequences.Sequence)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.selects.SelectClause2 getOnSend()
kotlin.NumbersKt__NumbersKt: short rotateLeft(short,int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
kotlinx.coroutines.channels.BufferedChannel$onReceive$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.ThreadContextElement$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.ThreadContextElement,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.io.path.PathsKt__PathUtilsKt: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int component1--ajY-9A(int[])
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.text.StringsKt__StringsJVMKt: java.util.List split(java.lang.CharSequence,java.util.regex.Pattern,int)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: byte minOf-b33U2AM(byte,byte,byte)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(byte[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(char[],java.util.Collection)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
kotlin.text.DelimitedRangesSequence: java.util.Iterator iterator()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int count-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int)
kotlin.time.DurationKt: long access$nanosToMillis(long)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.sequences.IndexingSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.IndexingSequence)
kotlin.sequences.SequencesKt___SequencesKt$onEach$1: SequencesKt___SequencesKt$onEach$1(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] plus-kzHmqpY(long[],java.util.Collection)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.work.impl.workers.ConstraintTrackingWorker: ConstraintTrackingWorker(android.content.Context,androidx.work.WorkerParameters)
kotlin.jvm.internal.IntSpreadBuilder: int getSize(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: float component4(float[])
kotlin.collections.EmptyList: boolean add(java.lang.Void)
kotlin.NumbersKt__FloorDivModKt: long floorDiv(long,long)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task poll()
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getDONE_RCV$p()
kotlin.io.NoSuchFileException: NoSuchFileException(java.io.File,java.io.File,java.lang.String)
kotlin.io.encoding.Base64Kt: boolean isInMimeAlphabet(int)
kotlin.jvm.internal.FloatSpreadBuilder: void add(float)
kotlin.collections.MapWithDefaultImpl: java.lang.Object getOrImplicitDefault(java.lang.Object)
kotlinx.coroutines.CoroutineId: long component1()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow cache(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1: FlowKt__DelayKt$debounceInternal$1$values$1$1(kotlinx.coroutines.channels.ProducerScope)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] plus(float[],java.util.Collection)
kotlinx.coroutines.selects.SelectImplementation$ClauseData: boolean tryRegisterAsWaiter(kotlinx.coroutines.selects.SelectImplementation)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(double[])
kotlin.UByte: byte constructor-impl(byte)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int indexOf(int)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List buildListInternal(kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: void forEachIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CancelHandlerBase: void invoke(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flatMapMerge$default(kotlinx.coroutines.flow.Flow,int,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.jvm.internal.Intrinsics: void throwAssert(java.lang.String)
kotlinx.coroutines.Deferred: java.lang.Throwable getCompletionExceptionOrNull()
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(long[])
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeSurrounding(java.lang.CharSequence,java.lang.CharSequence)
kotlinx.coroutines.selects.OnTimeout: void access$register(kotlinx.coroutines.selects.OnTimeout,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short getOrNull(short[],int)
kotlin.sequences.SequencesKt___SequencesKt$flatMap$2: SequencesKt___SequencesKt$flatMap$2()
kotlin.collections.SetsKt__SetsJVMKt: SetsKt__SetsJVMKt()
kotlinx.coroutines.selects.SelectImplementation: void selectInRegistrationPhase(java.lang.Object)
kotlinx.coroutines.selects.SelectClause2Impl: SelectClause2Impl(java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3)
kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: java.lang.Float get(int)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object first(kotlin.sequences.Sequence)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
kotlin.text.StringsKt___StringsKt: java.lang.Character singleOrNull(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] plus-ojwP5H8(short[],java.util.Collection)
kotlin.sequences.SequencesKt___SequencesKt: int count(kotlin.sequences.Sequence)
kotlin.collections.IndexedValue: java.lang.Object component2()
kotlin.jvm.internal.IntSpreadBuilder: void add(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(float[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduceIndexed-aLgx1Fo(short[],kotlin.jvm.functions.Function3)
kotlin.collections.AbstractList: int getSize()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow scanReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.AbstractMap: void putAll(java.util.Map)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: FlowKt__ReduceKt$single$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowOf(java.lang.Object[])
kotlin.UByteArray: boolean removeAll(java.util.Collection)
kotlin.time.TimeMark$DefaultImpls: boolean hasNotPassedNow(kotlin.time.TimeMark)
kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-WpHrYlw(byte[],byte,int,int)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyInto(byte[],byte[],int,int,int)
kotlin.Metadata: int[] bv()
kotlin.reflect.KProperty1: java.lang.Object get(java.lang.Object)
kotlin.collections.MutableMapWithDefaultImpl: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: SequencesKt___SequencesKt$runningFoldIndexed$1(java.lang.Object,kotlin.sequences.Sequence,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.io.ByteStreamsKt$iterator$1: byte nextByte()
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.lang.String toStringRepr(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: int sumOfByte(kotlin.sequences.Sequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] toShortArray-rL5Bavg(short[])
kotlin.text.UStringsKt: kotlin.UByte toUByteOrNull(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(boolean[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object foldIndexed(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short maxByOrNull(short[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List map-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectImplementation: void disposeOnCompletion(kotlinx.coroutines.DisposableHandle)
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1$1: void invoke(java.lang.Throwable)
kotlinx.coroutines.selects.SelectClause2Impl: SelectClause2Impl(java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysJvmKt: byte elementAt(byte[],int)
kotlinx.coroutines.channels.BufferedChannel: void registerSelectForReceive(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.math.BigInteger sumOfBigInteger(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
kotlinx.coroutines.internal.LimitedDispatcher: LimitedDispatcher(kotlinx.coroutines.CoroutineDispatcher,int)
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry minByOrNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: double minOf(char[],kotlin.jvm.functions.Function1)
kotlin.collections.ArrayAsCollection: boolean isEmpty()
kotlin.collections.EmptyIterator: void remove()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(double[],kotlin.jvm.functions.Function1)
kotlin.time.ComparableTimeMark$DefaultImpls: boolean hasPassedNow(kotlin.time.ComparableTimeMark)
kotlin.reflect.KCallable: java.lang.String getName()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
kotlinx.coroutines.sync.MutexImpl$onLock$1: void invoke(kotlinx.coroutines.sync.MutexImpl,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlinx.coroutines.EventLoop: boolean processUnconfinedEvent()
kotlinx.coroutines.flow.DistinctFlowImpl: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaPrimitiveType(kotlin.reflect.KClass)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List filterIsInstance(java.lang.Object[],java.lang.Class)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] reversedArray-rL5Bavg(short[])
kotlin.UByte: byte inv-w2LRezQ(byte)
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.OpenEndRange,long)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(char[],kotlin.jvm.functions.Function1)
kotlin.concurrent.ThreadsKt: java.lang.Object getOrSet(java.lang.ThreadLocal,kotlin.jvm.functions.Function0)
kotlin.sequences.DropSequence$iterator$1: java.util.Iterator getIterator()
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(long[])
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map groupBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(int[])
kotlin.reflect.KFunction$DefaultImpls: void isInline$annotations()
kotlinx.coroutines.internal.LimitedDispatcher: boolean tryAllocateWorker()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2: FlowKt__DelayKt$debounce$2(long)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: boolean contains(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: void tryResumeHasNextOnClosedChannel()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.AbstractMutableMap: java.util.Set getEntries()
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode getPrev()
kotlin.jvm.internal.TypeParameterReference: kotlin.reflect.KVariance getVariance()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sortedDescending--ajY-9A(int[])
kotlin.sequences.SequenceBuilderIterator: boolean hasNext()
kotlin.collections.MapWithDefaultImpl: void clear()
kotlin.collections.ShortIterator: ShortIterator()
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfFloat(java.lang.Iterable)
kotlin.reflect.ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()
kotlin.UByte: boolean equals-impl0(byte,byte)
kotlin.collections.ArraysKt___ArraysKt: float[] sortedArrayDescending(float[])
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: FlowKt__EmittersKt$transform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte reduceRightOrNull-ELGow60(byte[],kotlin.jvm.functions.Function2)
kotlin.text.StringsKt___StringsJvmKt: java.util.SortedSet toSortedSet(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow debounce(kotlinx.coroutines.flow.Flow,long)
kotlin.NumbersKt__NumbersKt: int countOneBits(short)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ExceptionsKt__ExceptionsKt: void getStackTrace$annotations(java.lang.Throwable)
kotlinx.coroutines.UndispatchedCoroutine: UndispatchedCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte singleOrNull(byte[])
kotlinx.coroutines.flow.FlowKt: java.lang.Object last(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumOfDouble(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast(kotlinx.coroutines.channels.ReceiveChannel,int,kotlinx.coroutines.CoroutineStart)
kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: ConcurrentWeakMap$Core(kotlinx.coroutines.debug.internal.ConcurrentWeakMap,int)
kotlinx.coroutines.JobNode: void dispose()
kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.Job SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: byte[] encodeToByteArray$default(java.lang.String,int,int,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(double[],double[])
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl: boolean isInLayout(android.view.View)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: boolean equals(java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
kotlinx.coroutines.sync.SemaphoreImpl$tryResumeNextFromQueue$createNewSegment$1: kotlinx.coroutines.sync.SemaphoreSegment invoke(long,kotlinx.coroutines.sync.SemaphoreSegment)
kotlin.sequences.SequencesKt__SequencesKt$flatten$1: SequencesKt__SequencesKt$flatten$1()
kotlin.UnsignedKt: int ulongCompare(long,long)
kotlin.text.StringsKt___StringsKt$groupingBy$1: java.lang.Object keyOf(char)
kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()
kotlinx.coroutines.JobKt: void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(boolean[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] onEachIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2)
kotlin.jvm.internal.Intrinsics: void throwUndefinedForReified(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: byte getOrElse(byte[],int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void updateRunningState(kotlin.coroutines.jvm.internal.CoroutineStackFrame,java.lang.String)
kotlin.text.MatchGroup: java.lang.String toString()
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
kotlin.text.StringsKt__StringsKt: boolean isNullOrBlank(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task pollBuffer()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9(char[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map groupBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilder$ValuesItr: java.lang.Object next()
kotlinx.coroutines.ChildContinuation: java.lang.Object invoke(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String format(kotlin.jvm.internal.StringCompanionObject,java.util.Locale,java.lang.String,java.lang.Object[])
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler getScheduler()
kotlin.ULong: long plus-7apg3OU(long,byte)
kotlin.collections.MapAccessorsKt: java.lang.Object getVar(java.util.Map,java.lang.Object,kotlin.reflect.KProperty)
kotlin.collections.builders.ListBuilder: ListBuilder(java.lang.Object[],int,int,boolean,kotlin.collections.builders.ListBuilder,kotlin.collections.builders.ListBuilder)
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1: java.lang.Object invoke()
kotlin.collections.MapsKt__MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(java.lang.Object[],java.lang.Object[])
kotlin.UIntArray: int hashCode()
kotlinx.coroutines.CancelFutureOnCompletion: CancelFutureOnCompletion(java.util.concurrent.Future)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: java.lang.Object get(int)
kotlin.collections.MapsKt___MapsKt: java.lang.Comparable maxOf(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,float)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
kotlin.collections.ArraysKt___ArraysKt: char single(char[])
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: boolean tryResumeHasNext(java.lang.Object)
kotlin.ranges.ULongRange: long getEndInclusive-s-VKNKU()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(byte[],byte[])
kotlin.ranges.RangesKt___RangesKt: char last(kotlin.ranges.CharProgression)
kotlin.ranges.OpenEndFloatRange: java.lang.Comparable getStart()
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: void invoke(java.lang.Throwable)
kotlin.ranges.URangesKt___URangesKt: long last(kotlin.ranges.ULongProgression)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.FileVisitResult copyToRecursively$copy$PathsKt__PathRecursiveFunctionsKt(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
kotlin.collections.ArraysKt___ArraysKt: double maxOf(char[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: long reduce(long[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(long[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte maxOrNull-GBYM_sE(byte[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(java.lang.Object[],java.util.Comparator)
kotlin.collections.AbstractMap$values$1$iterator$1: boolean hasNext()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(long[],java.lang.Iterable)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Object delay(long,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(java.lang.Object[],int,int,int,java.lang.Object)
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounceDuration(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand[] values()
kotlin.jvm.internal.SpreadBuilder: int size()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double[] toTypedArray(double[])
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoop: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set union(java.lang.Iterable,java.lang.Iterable)
kotlin.jvm.internal.PropertyReference1: PropertyReference1(java.lang.Object)
kotlin.collections.CollectionsKt__IteratorsKt: CollectionsKt__IteratorsKt()
kotlin.collections.ArraysKt___ArraysKt: short reduce(short[],kotlin.jvm.functions.Function2)
kotlin.sequences.DropWhileSequence$iterator$1: java.lang.Object next()
kotlin.UnsignedKt: java.lang.String ulongToString(long)
kotlin.text.StringsKt__StringBuilderJVMKt: void toCharArray(java.lang.StringBuilder,char[],int,int,int)
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receive(kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator nullsFirst()
kotlinx.coroutines.flow.FlowKt: java.lang.Object collect(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int lastIndexOf(java.lang.Object)
kotlin.coroutines.SafeContinuation: SafeContinuation(kotlin.coroutines.Continuation)
kotlin.coroutines.SafeContinuation: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.android.HandlerContext: android.os.Handler access$getHandler$p(kotlinx.coroutines.android.HandlerContext)
kotlin.text.StringsKt__RegexExtensionsKt: kotlin.text.Regex toRegex(java.lang.String)
kotlin.collections.SetsKt__SetsKt: java.util.HashSet hashSetOf(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: long get-s-VKNKU(int)
kotlinx.coroutines.flow.SharedFlowImpl: long getQueueEndIndex()
kotlin.io.encoding.Base64: int encodeIntoByteArray(byte[],byte[],int,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong maxOrNull-QwZRm1k(long[])
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(long[],long,int,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void resume(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.ReversedList: java.lang.Object removeAt(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(float[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List dropLastWhile(java.util.List,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int first-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancellableContinuation: boolean cancel(java.lang.Throwable)
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(float)
kotlin.collections.AbstractMap$keys$1$iterator$1: java.lang.Object next()
kotlin.jvm.internal.ByteCompanionObject: void getSIZE_BITS$annotations()
kotlin.ULong: long floorDiv-VKZWuLQ(long,long)
kotlin.collections.ArraysKt___ArraysKt: char[] onEachIndexed(char[],kotlin.jvm.functions.Function2)
kotlin.sequences.DropSequence: DropSequence(kotlin.sequences.Sequence,int)
kotlin.collections.MapsKt__MapsKt: java.util.Map optimizeReadOnlyMap(java.util.Map)
kotlin.collections.MutableMapWithDefaultImpl: java.util.Set entrySet()
kotlinx.coroutines.AbstractTimeSourceKt: void unpark(java.lang.Thread)
kotlinx.coroutines.internal.LocalAtomics_commonKt: void setValue(java.util.concurrent.atomic.AtomicInteger,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long reduceIndexedOrNull(long[],kotlin.jvm.functions.Function3)
kotlin.ULongArray: void clear()
kotlin.time.DurationKt: long getMinutes(long)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(double[],kotlin.jvm.functions.Function1)
kotlin.ranges.OpenEndRange$DefaultImpls: boolean isEmpty(kotlin.ranges.OpenEndRange)
kotlinx.coroutines.CancellableContinuationImpl: void invokeOnCancellation(kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ActorScope$DefaultImpls: void cancel(kotlinx.coroutines.channels.ActorScope)
kotlin.coroutines.jvm.internal.CoroutineStackFrame: java.lang.StackTraceElement getStackTraceElement()
kotlinx.coroutines.flow.SharedFlowImpl: void cleanupTailLocked()
kotlin.time.AbstractLongTimeSource$LongTimeMark: int compareTo(java.lang.Object)
kotlin.annotation.Retention: kotlin.annotation.AnnotationRetention value()
kotlin.time.DurationKt: long getHours(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any-QwZRm1k(long[])
kotlin.ranges.LongProgressionIterator: LongProgressionIterator(long,long,long)
kotlinx.coroutines.JobSupport: java.lang.String cancellationExceptionMessage()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int lastIndexOf-WZ4Q5Ns(int)
kotlin.jvm.internal.ClassReference: ClassReference(java.lang.Class)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(byte[])
kotlinx.coroutines.channels.ChannelResult: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: int count(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: ReceiveChannel$receiveOrNull$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow)
kotlin.collections.MapsKt__MapsKt: java.util.Map filterValues(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.AwaitKt: java.lang.Object awaitAll(java.util.Collection,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.io.path.PathsKt__PathReadWriteKt: java.lang.Object useLines$default(java.nio.file.Path,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long maxWithOrThrow-U(long[],java.util.Comparator)
kotlin.text.StringsKt___StringsKt: boolean none(java.lang.CharSequence)
kotlinx.coroutines.CancelFutureOnCompletion: java.lang.Object invoke(java.lang.Object)
kotlin.reflect.KProperty$DefaultImpls: void isLateinit$annotations()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short max(short[])
kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object,java.lang.String)
kotlin.text.CharCategory: kotlin.text.CharCategory[] $values()
kotlin.ranges.LongRange: java.lang.Long getStart()
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.jvm.internal.FloatCompanionObject: void getSIZE_BYTES$annotations()
kotlin.io.ByteStreamsKt$iterator$1: ByteStreamsKt$iterator$1(java.io.BufferedInputStream)
kotlin.ranges.RangesKt___RangesKt: java.lang.Short toShortExactOrNull(double)
kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlin.random.RandomKt: java.lang.String boundsErrorMessage(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long maxBy(long[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort maxOrNull-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float lastOrNull(float[])
kotlin.jvm.internal.Ref$ByteRef: Ref$ByteRef()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer elementAtOrNull(int[],int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List mapIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List build(java.util.List)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1: ComparisonsKt__ComparisonsKt$thenBy$1(java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
kotlin.text.StringsKt___StringsKt: java.util.List windowed$default(java.lang.CharSequence,int,int,boolean,int,java.lang.Object)
kotlinx.coroutines.internal.SystemPropsKt: int getAVAILABLE_PROCESSORS()
kotlinx.coroutines.sync.MutexImpl: int holdsLockImpl(java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference: MutablePropertyReference()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong maxWithOrNull-zrEWJaI(long[],java.util.Comparator)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: long toLong(java.lang.String)
kotlinx.coroutines.CancellableContinuation: void completeResume(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: byte[] onEach(byte[],kotlin.jvm.functions.Function1)
kotlin.sequences.IndexingSequence$iterator$1: int getIndex()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object next()
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt: void sendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfLong(short[],kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
kotlin.collections.CollectionsKt___CollectionsKt: void forEach(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.Character reduceRightOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlin.SynchronizedLazyImpl: SynchronizedLazyImpl(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] reversedArray-GBYM_sE(byte[])
kotlin.reflect.GenericArrayTypeImpl: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CompletedContinuation: boolean getCancelled()
kotlin.UByte: int rem-xj2QHRw(byte,short)
kotlinx.coroutines.flow.SharingStarted$Companion: SharingStarted$Companion()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
kotlin.collections.MapsKt__MapsJVMKt: java.util.SortedMap toSortedMap(java.util.Map,java.util.Comparator)
kotlin.text.StringsKt___StringsKt: java.util.List windowed(java.lang.CharSequence,int,int,boolean)
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow onEmpty(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.io.encoding.Base64Kt: int[] access$getBase64DecodeMap$p()
kotlin.collections.ArrayDeque: int lastIndexOf(java.lang.Object)
kotlin.text.Regex: java.util.List split$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel map(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt$minus$4: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte findLast(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: JobSupport(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short reduce-xzaTVY8(short[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(short[],java.lang.Iterable)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
kotlin.collections.MapsKt__MapsKt: java.util.LinkedHashMap linkedMapOf(kotlin.Pair[])
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decodeToString$default(byte[],int,int,boolean,int,java.lang.Object)
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver: ConstraintProxyUpdateReceiver()
kotlinx.coroutines.flow.FlowKt__MigrationKt: void subscribe(kotlinx.coroutines.flow.Flow)
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int,java.lang.Object,java.lang.Object)
kotlin.ranges.ComparableRange: boolean contains(java.lang.Comparable)
kotlinx.coroutines.JobSupport: void getOnAwaitInternal$annotations()
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyInto(long[],long[],int,int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyOfRangeInline(java.lang.Object[],int,int)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean remove()
kotlin.io.encoding.Base64JVMKt: byte[] platformEncodeToByteArray(kotlin.io.encoding.Base64,byte[],int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(int[])
kotlin.enums.EnumEntriesKt$enumEntries$1: java.lang.Object invoke()
kotlinx.coroutines.internal.MainDispatcherFactory: int getLoadPriority()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2: ComparisonsKt__ComparisonsKt$thenBy$2(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.io.FileTreeWalk: java.util.Iterator iterator()
kotlin.text.MatchResult$Destructured: java.util.List toList()
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List toList(java.util.Enumeration)
kotlin.time.DurationKt: long getMilliseconds(double)
kotlinx.coroutines.DispatchedTask: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState: FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState(kotlin.io.FileTreeWalk$FileTreeWalkIterator,java.io.File)
kotlin.time.Duration: long getInWholeMilliseconds-impl(long)
kotlin.sequences.TransformingIndexedSequence: TransformingIndexedSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: RestrictedSuspendLambda(int,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int component5--ajY-9A(int[])
kotlinx.coroutines.flow.StartedWhileSubscribed: kotlinx.coroutines.flow.Flow command(kotlinx.coroutines.flow.StateFlow)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyInto$default(float[],float[],int,int,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(int[])
kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(short[])
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: boolean addConditionally$atomicfu(java.lang.Object,java.util.concurrent.atomic.AtomicIntegerFieldUpdater,int,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilder: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlin.Result: void getValue$annotations()
kotlin.PreconditionsKt__PreconditionsKt: java.lang.Object checkNotNull(java.lang.Object)
kotlinx.coroutines.JobSupport: void onCancelling(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(long[],int)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
kotlin.sequences.MergingSequence$iterator$1: java.util.Iterator getIterator2()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short minBy(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelCoroutine: boolean close(java.lang.Throwable)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(byte,short)
kotlinx.coroutines.EventLoopImplBase: kotlinx.coroutines.DisposableHandle scheduleInvokeOnTimeout(long,java.lang.Runnable)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long elementAtOrNull(long[],int)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal div(java.math.BigDecimal,java.math.BigDecimal)
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: FlowKt__ReduceKt$reduce$2$emit$1(kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object last(java.util.List)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
kotlin.reflect.KVisibility: KVisibility(java.lang.String,int)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: StringsKt__StringNumberConversionsJVMKt()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List drop-qFRl0hI(int[],int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setQueryFromAppProcessEnabled(android.view.accessibility.AccessibilityNodeInfo,android.view.View,boolean)
kotlin.jvm.internal.ArrayCharIterator: boolean hasNext()
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.DeprecationLevel: kotlin.DeprecationLevel[] values()
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlin.Pair findContinuationStartIndex(int,java.lang.StackTraceElement[],java.util.List)
kotlinx.coroutines.internal.ClassValueCtorCache: kotlin.jvm.functions.Function1 get(java.lang.Class)
kotlin.io.encoding.Base64: java.lang.String encode(byte[],int,int)
kotlin.NotImplementedError: NotImplementedError()
kotlinx.coroutines.StandaloneCoroutine: boolean handleJobException(java.lang.Throwable)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,double)
kotlin.ranges.ClosedFloatRange: boolean lessThanOrEquals(java.lang.Comparable,java.lang.Comparable)
kotlin.io.FilesKt__FileReadWriteKt: java.io.BufferedReader bufferedReader(java.io.File,java.nio.charset.Charset,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(short[],java.lang.Iterable)
kotlin.io.path.PathNode: java.nio.file.Path getPath()
kotlinx.coroutines.CompletedContinuation: boolean equals(java.lang.Object)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int)
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object access$acquireSlowPath(kotlinx.coroutines.sync.SemaphoreImpl,kotlin.coroutines.Continuation)
kotlin.UByteArray: boolean add-7apg3OU(byte)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer[] toTypedArray(int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double minOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] toByteArray-GBYM_sE(byte[])
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry maxByOrThrow(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void reverse(java.lang.Object[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexed$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.Pair[])
kotlinx.coroutines.ThreadPoolDispatcherKt: kotlinx.coroutines.ExecutorCoroutineDispatcher newFixedThreadPoolContext(int,java.lang.String)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void probeCoroutineSuspended$kotlinx_coroutines_core(kotlin.coroutines.Continuation)
kotlin.time.Duration: long access$getNEG_INFINITE$cp()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: CombineKt$zipImpl$1$1(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5: void invoke(kotlin.io.path.FileVisitorBuilder)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(long[])
kotlin.ranges.RangesKt__RangesKt: kotlin.ranges.OpenEndRange rangeUntil(double,double)
kotlin.io.encoding.Base64: java.lang.String encode$default(kotlin.io.encoding.Base64,byte[],int,int,int,java.lang.Object)
kotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesKt: kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence runningFold(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path appendLines$default(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset,int,java.lang.Object)
kotlin.UShort: int minus-xj2QHRw(short,short)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.random.RandomKt: int nextInt(kotlin.random.Random,kotlin.ranges.IntRange)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minByOrThrow(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
kotlinx.coroutines.DispatcherExecutor: void execute(java.lang.Runnable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api19Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat createCollectionItemInfo(int,int,int,int,boolean)
kotlin.time.AbstractDoubleTimeSource: kotlin.time.TimeMark markNow()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object access$getNextOrClosed(kotlinx.coroutines.internal.ConcurrentLinkedListNode)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double maxWith(double[],java.util.Comparator)
kotlin.time.DurationKt: void getNanoseconds$annotations(double)
kotlin.ranges.URangesKt___URangesKt: int coerceIn-WZ9TVnA(int,int,int)
kotlin.collections.ArraysKt___ArraysKt: double minOf(float[],kotlin.jvm.functions.Function1)
kotlin.ranges.URangesKt___URangesKt: int coerceIn-wuiCnnA(int,kotlin.ranges.ClosedRange)
kotlin.io.LineReader: int compactBytes()
kotlin.collections.MapsKt___MapsKt: java.util.Map onEachIndexed(java.util.Map,kotlin.jvm.functions.Function2)
kotlin.collections.AbstractMap: boolean isEmpty()
kotlin.text.StringsKt__StringsKt: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$3: java.lang.Throwable invoke(java.lang.Throwable)
kotlin.io.AccessDeniedException: AccessDeniedException(java.io.File,java.io.File,java.lang.String)
kotlin.text.MatcherMatchResult$groups$1: boolean contains(java.lang.Object)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: ChannelsKt__DeprecatedKt$singleOrNull$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
kotlin.collections.ArraysKt___ArraysKt: void reverse(float[],int,int)
kotlin.collections.CollectionsKt___CollectionsKt: int sumOfInt(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double singleOrNull(double[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: int component4(int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(char[],int)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.AbstractMap: java.util.Set keySet()
kotlin.ULong: long inv-s-VKNKU(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: UArraysKt___UArraysKt()
kotlin.time.Duration$Companion: void getDays-UwyO8pc$annotations(int)
kotlin.internal.UProgressionUtilKt: long differenceModulo-sambcqE(long,long,long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(short[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.builders.MapBuilder: void ensureExtraCapacity(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object find(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.NumbersKt__NumbersKt: int countLeadingZeroBits(short)
kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 createConstructor(java.lang.Class)
kotlinx.coroutines.channels.ActorScope$DefaultImpls: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ActorScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.BuildersKt: java.lang.Object runBlocking(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.io.path.PathsKt__PathUtilsKt: void getInvariantSeparatorsPath$annotations(java.nio.file.Path)
kotlinx.coroutines.DispatchedTask: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: UArraysKt___UArraysJvmKt$asList$2(long[])
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.lang.Thread getLastObservedThread()
kotlin.ULong: long shl-s-VKNKU(long,int)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State[] values()
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: kotlin.time.ComparableTimeMark plus-LRDsOJo(long)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: SequencesKt__SequencesKt$shuffled$1(kotlin.sequences.Sequence,kotlin.random.Random,kotlin.coroutines.Continuation)
kotlin.UByte: int times-WZ4Q5Ns(byte,int)
kotlin.sequences.SubSequence$iterator$1: java.util.Iterator getIterator()
kotlin.time.AbstractLongTimeSource: long read()
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map buildMapInternal(int,kotlin.jvm.functions.Function1)
kotlin.UShortArray: boolean equals-impl(short[],java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(int[],kotlin.jvm.functions.Function1)
kotlin.math.Constants: Constants()
kotlin.io.ByteStreamsKt: java.io.OutputStreamWriter writer$default(java.io.OutputStream,java.nio.charset.Charset,int,java.lang.Object)
kotlin.io.LineReader: int decodeEndOfInput(int,int)
kotlinx.coroutines.Deferred$DefaultImpls: void cancel(kotlinx.coroutines.Deferred)
kotlin.Result$Failure: Result$Failure(java.lang.Throwable)
kotlin.collections.builders.MapBuilder: java.lang.Object[] access$getValuesArray$p(kotlin.collections.builders.MapBuilder)
kotlin.time.DurationUnitKt__DurationUnitJvmKt: long convertDurationUnitOverflow(long,kotlin.time.DurationUnit,kotlin.time.DurationUnit)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.NumbersKt__NumbersJVMKt: long takeHighestOneBit(long)
kotlin.io.path.OnErrorResult: kotlin.io.path.OnErrorResult valueOf(java.lang.String)
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: byte maxOf(byte,byte[])
kotlin.UShortArray: boolean containsAll-impl(short[],java.util.Collection)
kotlin.text.CharCategory: kotlin.text.CharCategory[] values()
kotlinx.coroutines.JobImpl: boolean getHandlesException$kotlinx_coroutines_core()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow take(kotlinx.coroutines.flow.Flow,int)
kotlinx.coroutines.CompletedContinuation: CompletedContinuation(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable)
kotlin.ULongArray: boolean remove(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapSequenceTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.DispatchersKt: void getIO$annotations(kotlinx.coroutines.Dispatchers)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.io.path.PathTreeWalkKt: java.lang.Object keyOf(java.nio.file.Path,java.nio.file.LinkOption[])
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Throwable,long,kotlin.coroutines.Continuation)
kotlin.reflect.KMutableProperty1: kotlin.reflect.KMutableProperty1$Setter getSetter()
kotlinx.coroutines.flow.internal.FusibleFlow$DefaultImpls: kotlinx.coroutines.flow.Flow fuse$default(kotlinx.coroutines.flow.internal.FusibleFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object)
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: java.lang.String toString()
kotlin.text.StringsKt__StringsKt: int indexOfAny(java.lang.CharSequence,char[],int,boolean)
kotlin.collections.ArraysKt___ArraysKt: boolean all(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(double[],int,int)
kotlinx.coroutines.selects.SelectImplementation: kotlinx.coroutines.selects.TrySelectDetailedResult trySelectDetailed(java.lang.Object,java.lang.Object)
kotlin.random.AbstractPlatformRandom: int nextInt()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
kotlin.collections.ArraysKt___ArraysKt: char random(char[])
kotlinx.coroutines.ExecutorsKt: void CloseableCoroutineDispatcher$annotations()
kotlin.UByteArray$Iterator: java.lang.Object next()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] sliceArray-Q6IL4kU(short[],kotlin.ranges.IntRange)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable maxOf(java.lang.Comparable,java.lang.Comparable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(short,short)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(float[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.MutablePropertyReference0: MutablePropertyReference0()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEach-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(boolean[])
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int reduceRight-WyvcNBI(int[],kotlin.jvm.functions.Function2)
kotlin.math.MathKt__MathJVMKt: double getUlp(double)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Double max(kotlin.sequences.Sequence)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
kotlin.time.Duration: long getAbsoluteValue-UwyO8pc(long)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(char[],char[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(char[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlin.TypeCastException: TypeCastException(java.lang.String)
kotlinx.coroutines.debug.internal.DebugProbesImplKt: java.lang.String repr(java.lang.String)
kotlin.io.FilePathComponents: java.io.File component1()
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object failure-PtdJZtk()
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object single(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.jvm.functions.Function1)
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange next()
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,kotlin.sequences.Sequence)
kotlin.sequences.FlatteningSequence$iterator$1: FlatteningSequence$iterator$1(kotlin.sequences.FlatteningSequence)
kotlin.random.URandomKt: long nextULong(kotlin.random.Random,kotlin.ranges.ULongRange)
kotlin.io.FilesKt__UtilsKt: java.io.File relativeTo(java.io.File,java.io.File)
kotlin.sequences.SubSequence: int access$getStartIndex$p(kotlin.sequences.SubSequence)
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getLastIndex--ajY-9A$annotations(int[])
kotlin.collections.AbstractList: int lastIndexOf(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long maxOrThrow-U(long[])
kotlin.collections.builders.ListBuilder: void removeRangeInternal(int,int)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
kotlin.concurrent.TimersKt: java.util.TimerTask schedule(java.util.Timer,java.util.Date,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort--ajY-9A(int[])
kotlin.random.Random$Default$Serialized: Random$Default$Serialized()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte lastOrNull(byte[])
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.util.List filterIsInstance(java.lang.Iterable,java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: short minWithOrThrow(short[],java.util.Comparator)
kotlin.jvm.Throws: java.lang.Class[] exceptionClasses()
kotlin.text.MatchResult$Destructured: java.lang.String component6()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow transformWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(boolean[],java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void shutdown$kotlinx_coroutines_core(long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat buildCollectionItemInfoCompat(boolean,int,int,int,int,boolean,java.lang.String,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filter-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.Float maxOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void sortBy(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.TypeIntrinsics: java.util.Iterator castToIterator(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(double[],int,int)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.DispatchedTask: java.lang.Object takeState$kotlinx_coroutines_core()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createLinkPointingTo(java.nio.file.Path,java.nio.file.Path)
kotlinx.coroutines.internal.Segment: boolean tryIncPointers$kotlinx_coroutines_core()
kotlin.sequences.SubSequence$iterator$1: void setPosition(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-mazbYpA(short[],short[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(byte[],int)
kotlin.jvm.internal.DoubleCompanionObject: void getMAX_VALUE$annotations()
kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)
kotlin.collections.AbstractIterator: boolean tryToComputeNext()
kotlin.jvm.internal.Reflection: kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection,kotlin.reflect.KTypeProjection)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object firstOrNull(java.lang.Object[])
kotlin.io.encoding.EncodeOutputStream: void close()
kotlin.io.FileTreeWalk: int access$getMaxDepth$p(kotlin.io.FileTreeWalk)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character findLast(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.AbstractFlow: java.lang.Object collectSafely(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,double)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal minus(java.math.BigDecimal,java.math.BigDecimal)
kotlin.UShortArray$Iterator: short next-Mh2AYeg()
kotlin.collections.SlidingWindowKt$windowedIterator$1: SlidingWindowKt$windowedIterator$1(int,int,java.util.Iterator,boolean,boolean,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte minWithOrNull-XMRcp5o(byte[],java.util.Comparator)
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Float minOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: FlowKt__ZipKt$combineTransform$7(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort lastOrNull-rL5Bavg(short[])
kotlinx.coroutines.NonCancellable: void getChildren$annotations()
kotlin.io.encoding.Base64: int encodeIntoByteArrayImpl$kotlin_stdlib(byte[],byte[],int,int,int)
kotlin.io.encoding.Base64: boolean isMimeScheme$kotlin_stdlib()
kotlin.ranges.ClosedDoubleRange: boolean lessThanOrEquals(java.lang.Comparable,java.lang.Comparable)
kotlin.io.path.LinkFollowing: java.util.Set toVisitOptions(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
kotlin.math.MathKt__MathJVMKt: float acosh(float)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.text.Regex$special$$inlined$fromInt$1: java.lang.Boolean invoke(java.lang.Enum)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(long,java.math.MathContext)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWith-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-XUkPCBk(int[])
kotlin.time.Duration$Companion: void getNanoseconds-UwyO8pc$annotations(double)
kotlinx.coroutines.AbstractTimeSource: void trackTask()
kotlin.jvm.internal.DoubleCompanionObject: double getPOSITIVE_INFINITY()
kotlin.collections.CollectionsKt___CollectionsKt: float minOrThrow(java.lang.Iterable)
kotlin.Result: boolean isFailure-impl(java.lang.Object)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(float[],float)
kotlinx.coroutines.DisposeOnCancel: void invoke(java.lang.Throwable)
kotlinx.coroutines.EventLoopImplBase: void shutdown()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int minByOrThrow-U(int[],kotlin.jvm.functions.Function1)
kotlin.jvm.JvmClassMappingKt: kotlin.reflect.KClass getKotlinClass(java.lang.Class)
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaClass(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ranges.LongProgression: java.util.Iterator iterator()
kotlin.ranges.RangesKt___RangesKt: java.lang.Long randomOrNull(kotlin.ranges.LongRange,kotlin.random.Random)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setNextParkedWorker(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: FlowKt__ReduceKt$fold$2$emit$1(kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2,kotlin.coroutines.Continuation)
kotlin.ULong: long rem-xj2QHRw(long,short)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt randomOrNull--ajY-9A(int[])
kotlin.time.DurationUnitKt__DurationUnitJvmKt: DurationUnitKt__DurationUnitJvmKt()
kotlinx.coroutines.channels.ProducerCoroutine: void onCompleted(kotlin.Unit)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function4)
kotlinx.coroutines.channels.BufferedChannel: void resumeWaiterOnClosedChannel(kotlinx.coroutines.Waiter,boolean)
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object tryReceive-PtdJZtk()
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean isRemoved()
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol getPARAM_CLAUSE_0()
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(double[],kotlin.jvm.functions.Function2)
kotlin.sequences.FilteringSequence$iterator$1: boolean hasNext()
kotlin.jvm.internal.TypeParameterReference: java.lang.String toString()
kotlinx.coroutines.AbstractCoroutine: void onCompletionInternal(java.lang.Object)
kotlin.collections.builders.ListBuilder$Itr: ListBuilder$Itr(kotlin.collections.builders.ListBuilder,int)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger plus(java.math.BigInteger,java.math.BigInteger)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence minusElement(kotlin.sequences.Sequence,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable[] sortedArray(java.lang.Comparable[])
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: java.lang.Object invoke(java.lang.Throwable,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: void onStart()
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.ULong max-QwZRm1k(long[])
kotlinx.coroutines.internal.ThreadSafeHeap: boolean addLastIf(kotlinx.coroutines.internal.ThreadSafeHeapNode,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
kotlin.ranges.ClosedFloatRange: java.lang.Float getStart()
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
kotlin.collections.ArraysKt___ArraysKt: short single(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] toULongArray(kotlin.ULong[])
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: CollectionsKt__IteratorsJVMKt$iterator$1(java.util.Enumeration)
kotlinx.coroutines.internal.ThreadState: void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow onStart(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(char[])
kotlin.jvm.internal.TypeReference$asString$args$1: TypeReference$asString$args$1(kotlin.jvm.internal.TypeReference)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyInto(int[],int[],int,int,int)
kotlin.UInt: long minus-VKZWuLQ(int,long)
kotlin.text.StringsKt___StringsKt: java.lang.Object foldRightIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(int[])
kotlinx.coroutines.CancellableContinuationKt: java.lang.Object suspendCancellableCoroutineReusable(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.UByteArrayKt: byte[] UByteArray(int,kotlin.jvm.functions.Function1)
kotlin.random.jdk8.PlatformThreadLocalRandom: int nextInt(int,int)
kotlin.text.StringsKt___StringsKt: char maxOrThrow(java.lang.CharSequence)
kotlin.random.KotlinRandom: void setSeed(long)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.UShortArray: int size()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: java.lang.Object startCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.io.FilesKt__FileReadWriteKt: void writeText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void dumpCoroutines(java.io.PrintStream)
kotlinx.coroutines.CopyableThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.CopyableThreadContextElement,kotlin.coroutines.CoroutineContext)
kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2)
kotlinx.coroutines.JobSupport: void access$registerSelectForOnJoin(kotlinx.coroutines.JobSupport,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlinx.coroutines.scheduling.WorkQueue: boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue)
kotlin.ranges.LongProgressionIterator: long nextLong()
kotlin.collections.ArraysKt___ArraysKt: byte[] sortedArray(byte[])
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object foldIndexed(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte minOrThrow-U(byte[])
androidx.work.impl.background.systemalarm.SystemAlarmService: SystemAlarmService()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List runningReduce(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.collections.AbstractList: java.lang.Object get(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection filterIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.io.TextStreamsKt$readLines$1: TextStreamsKt$readLines$1(java.util.ArrayList)
kotlin.reflect.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-Aa5vz7o(short[],int,int)
kotlin.StandardKt__StandardKt: java.lang.Object run(kotlin.jvm.functions.Function0)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void getDebugString$annotations(kotlinx.coroutines.Job)
kotlin.ULongArray: boolean contains-VKZWuLQ(long[],long)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
kotlinx.coroutines.android.HandlerDispatcher: kotlinx.coroutines.android.HandlerDispatcher getImmediate()
kotlin.text.StringsKt___StringsJvmKt: java.lang.Character minBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith(java.lang.String,java.lang.String,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterNotTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
kotlin.collections.builders.ListBuilder: boolean retainAll(java.util.Collection)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow sample-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
kotlin.collections.CollectionsKt__IteratorsKt: java.util.Iterator withIndex(java.util.Iterator)
kotlin.collections.MutableMapWithDefault: java.util.Map getMap()
kotlin.io.FilePathComponents: kotlin.io.FilePathComponents copy$default(kotlin.io.FilePathComponents,java.io.File,java.util.List,int,java.lang.Object)
kotlin.ranges.IntProgressionIterator: IntProgressionIterator(int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-ePBmRWY(short[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(double[],java.lang.Iterable)
kotlinx.coroutines.CoroutineStart: CoroutineStart(java.lang.String,int)
kotlin.internal.jdk7.JDK7PlatformImplementations: boolean sdkIsNullOrAtLeast(int)
kotlin.ranges.CharProgression$Companion: CharProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ULongArray: java.util.Iterator iterator()
kotlin.time.TimedValue: TimedValue(java.lang.Object,long,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ranges.CharRange: void getEndExclusive$annotations()
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: void remove()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence windowed(kotlin.sequences.Sequence,int,int,boolean,kotlin.jvm.functions.Function1)
kotlinx.coroutines.ThreadContextElement: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(char[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt maxWithOrNull-YmdZ_VM(int[],java.util.Comparator)
kotlin.sequences.SequencesKt___SequencesKt: boolean all(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.DeprecatedSinceKotlin: java.lang.String warningSince()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: boolean hasPassedNow-impl(long)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1: FlowKt__MergeKt$flatMapMerge$$inlined$map$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ContextScope: ContextScope(kotlin.coroutines.CoroutineContext)
kotlin.text.StringsKt___StringsKt: java.util.List zipWithNext(java.lang.CharSequence)
kotlinx.coroutines.NonCancellable: java.util.concurrent.CancellationException getCancellationException()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(float[],float)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int lastIndexOf(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
kotlinx.coroutines.DisposeOnCompletion: java.lang.Object invoke(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.String slice(java.lang.String,kotlin.ranges.IntRange)
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyInto$default(double[],double[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.internal.SegmentOrClosed: boolean equals-impl(java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(short[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: boolean isEmpty()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValuesBy(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelResult: java.lang.Object unbox-impl()
kotlin.jvm.functions.Function12: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: boolean[] toBooleanArray(java.util.Collection)
kotlin.internal.RequireKotlin: kotlin.DeprecationLevel level()
kotlin.collections.ArraysKt___ArraysKt: boolean none(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(short[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-Q6IL4kU(short[],kotlin.ranges.IntRange)
kotlin.reflect.KProperty0: java.lang.Object get()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(long,byte)
kotlin.collections.builders.ListBuilderKt: int subarrayContentHashCode(java.lang.Object[],int,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function6)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object minBy(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxWithOrNull(kotlin.sequences.Sequence,java.util.Comparator)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
kotlin.time.Duration: boolean equals-impl0(long,long)
androidx.work.NetworkType: androidx.work.NetworkType valueOf(java.lang.String)
kotlinx.coroutines.AbstractTimeSourceKt: void registerTimeLoopThread()
kotlinx.coroutines.flow.internal.NopCollector: NopCollector()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addLastIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ranges.LongRange: java.lang.Long getEndExclusive()
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1: java.util.Iterator iterator()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$processResultSelectReceive(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associate(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__LimitKt: java.lang.Object emitAbort$FlowKt__LimitKt(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.NumbersKt__FloorDivModKt: int floorDiv(byte,byte)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.AwaitAll$AwaitAllNode: void setDisposer(kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object access$processResultAndInvokeBlockRecoveringException(kotlinx.coroutines.selects.SelectImplementation,kotlinx.coroutines.selects.SelectImplementation$ClauseData,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt$splitToSequence$1: StringsKt__StringsKt$splitToSequence$1(java.lang.CharSequence)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$tryResume$token$1: void invoke(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysJvmKt: void sortWith(java.lang.Object[],java.util.Comparator,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(float[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: double average(int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: ChannelsKt__DeprecatedKt$maxWith$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: java.lang.Object getKey()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte minWithOrThrow-U(byte[],java.util.Comparator)
kotlin.streams.jdk8.StreamsKt: java.util.List toList(java.util.stream.DoubleStream)
kotlin.collections.CollectionsKt___CollectionsJvmKt: void reverse(java.util.List)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(java.lang.Object)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: boolean isCompleted()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(java.lang.Object[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.internal.SafeCollectorKt: kotlin.jvm.functions.Function3 access$getEmitFun$p()
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion()
kotlin.reflect.TypeVariableImpl: java.lang.String getName()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Double maxOrNull(java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: FlowKt__LimitKt$dropWhile$1$1(kotlin.jvm.internal.Ref$BooleanRef,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlin.io.encoding.EncodeOutputStream: int copyIntoByteBuffer(byte[],int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-JM6gNCM(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMutableList: AbstractMutableList()
kotlin.collections.ArraysKt___ArraysKt: int indexOf(double[],double)
kotlin.coroutines.intrinsics.CoroutineSingletons: CoroutineSingletons(java.lang.String,int)
kotlin.jvm.internal.MutableLocalVariableReference: MutableLocalVariableReference()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] plus(int[],java.util.Collection)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path setOwner(java.nio.file.Path,java.nio.file.attribute.UserPrincipal)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
kotlin.random.Random: int nextInt(int)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection filterNotNullTo(kotlin.sequences.Sequence,java.util.Collection)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Set toMutableSet(kotlin.sequences.Sequence)
kotlin.collections.EmptyMap: java.util.Collection values()
kotlinx.coroutines.scheduling.WorkQueue: void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue)
kotlin.jvm.internal.MutablePropertyReference1: java.lang.Object getDelegate(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: ChannelsKt__DeprecatedKt$none$1(kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: java.lang.Character firstOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.builders.ListBuilder: ListBuilder(int)
kotlin.time.TimedValue: kotlin.time.TimedValue copy-RFiDyg4$default(kotlin.time.TimedValue,java.lang.Object,long,int,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double minBy(double[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$onEach$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow withIndex(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$resume$2: java.lang.Object invoke(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short component4-rL5Bavg(short[])
kotlin.io.FilesKt__FilePathComponentsKt: java.io.File subPath(java.io.File,int,int)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KTypeParameter typeParameter(java.lang.Object,java.lang.String,kotlin.reflect.KVariance,boolean)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object elementAtOrNull(kotlin.sequences.Sequence,int)
kotlin.io.FilesKt__UtilsKt: java.lang.String toRelativeString(java.io.File,java.io.File)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object none(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object getNextItem()
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.UIntArray: java.lang.Object[] toArray()
kotlinx.coroutines.channels.BufferedChannel: void removeUnprocessedElements(kotlinx.coroutines.channels.ChannelSegment)
kotlin.jvm.internal.TypeIntrinsics: java.util.ListIterator asMutableListIterator(java.lang.Object,java.lang.String)
kotlin.collections.builders.MapBuilderValues: boolean addAll(java.util.Collection)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consume(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1)
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
kotlin.random.Random$Default: java.lang.Object writeReplace()
kotlinx.coroutines.flow.SharingStartedKt: kotlinx.coroutines.flow.SharingStarted WhileSubscribed-5qebJ5I(kotlinx.coroutines.flow.SharingStarted$Companion,long,long)
kotlin.TypeAliasesKt: void AssertionError$annotations()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-GBYM_sE(byte[])
kotlin.ULongArray: ULongArray(long[])
kotlin.collections.builders.MapBuilderEntries: kotlin.collections.builders.MapBuilder getBacking()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] copyOf--ajY-9A(int[])
kotlin.text.Regex: java.util.List split(java.lang.CharSequence,int)
kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel distinctBy(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int)
kotlinx.coroutines.DispatchedTask: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfFirst-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void sort(java.util.List,java.util.Comparator)
kotlinx.coroutines.CopyableThreadContextElement: kotlinx.coroutines.CopyableThreadContextElement copyForChild()
kotlinx.coroutines.channels.ChannelResult: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)
kotlin.random.Random: boolean nextBoolean()
kotlinx.coroutines.selects.SelectImplementation: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.ParameterName: java.lang.String name()
kotlin.time.AdjustedTimeMark: kotlin.time.TimeMark plus-LRDsOJo(long)
kotlin.UByte: int div-xj2QHRw(byte,short)
kotlinx.coroutines.Job: boolean isCompleted()
kotlin.collections.MapWithDefaultImpl: boolean containsValue(java.lang.Object)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.Appendable appendln(java.lang.Appendable)
kotlin.NumbersKt__NumbersJVMKt: int takeHighestOneBit(int)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel map(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.PropertyReference2Impl: java.lang.Object get(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: float elementAt(float[],int)
kotlin.jvm.internal.CallableReference$NoReceiver: CallableReference$NoReceiver()
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyOf(float[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: ChannelsKt__DeprecatedKt$any$1(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: double minOrThrow(double[])
kotlin.time.LongSaturatedMathKt: boolean isSaturated(long)
kotlin.collections.ArraysKt___ArraysKt: boolean single(boolean[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt randomOrNull-2D5oskM(int[],kotlin.random.Random)
kotlinx.coroutines.selects.SelectImplementation$ClauseData: java.lang.Object invokeBlock(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: int[] reversedArray(int[])
kotlin.collections.State: kotlin.collections.State[] $values()
kotlin.jvm.internal.Reflection: kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] requireNoNulls(java.lang.Object[])
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,char)
kotlin.sequences.SequencesKt__SequencesKt$flatten$3: SequencesKt__SequencesKt$flatten$3()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: ArraysKt___ArraysJvmKt$asList$3(int[])
kotlin.io.path.PathNode: java.util.Iterator getContentIterator()
kotlin.ranges.IntRange$Companion: kotlin.ranges.IntRange getEMPTY()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte maxWithOrNull-XMRcp5o(byte[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(long[],long,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.PropertyReference1: java.lang.Object getDelegate(java.lang.Object)
kotlin.collections.RingBuffer: RingBuffer(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(float[],int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow: java.lang.Integer getValue()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(int[],kotlin.jvm.functions.Function1)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence slice(java.lang.CharSequence,java.lang.Iterable)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.String getNameWithoutExtension(java.nio.file.Path)
kotlin.random.RandomKt: int takeUpperBits(int,int)
kotlin.jvm.optionals.OptionalsKt: java.util.List toList(java.util.Optional)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMap-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectImplementation$doSelectSuspend$1: SelectImplementation$doSelectSuspend$1(kotlinx.coroutines.selects.SelectImplementation,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: boolean reduceRightIndexed(boolean[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.scheduling.CoroutineScheduler: int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
kotlin.collections.ArraysKt___ArraysKt: char maxWithOrThrow(char[],java.util.Comparator)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1(kotlin.jvm.functions.Function0)
kotlin.UInt: int div-7apg3OU(int,byte)
kotlin.collections.EmptyMap: java.util.Set getEntries()
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: RestrictedContinuationImpl(kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1: SequencesKt___SequencesKt$filterIndexed$1(kotlin.jvm.functions.Function2)
kotlin.collections.EmptySet: boolean remove(java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
kotlin.UIntArray: boolean containsAll-impl(int[],java.util.Collection)
kotlin.io.TextStreamsKt: java.io.BufferedReader buffered$default(java.io.Reader,int,int,java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$2: java.lang.Throwable invoke(java.lang.Throwable)
kotlin.ranges.UIntProgression$Companion: UIntProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int indexOf(byte)
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1: FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1(kotlin.jvm.functions.Function2,kotlinx.coroutines.flow.FlowCollector)
kotlin.io.LinesSequence$iterator$1: void remove()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double reduceIndexedOrNull(double[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.DispatchedTaskKt: boolean isReusableMode(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: ChannelsKt__DeprecatedKt$map$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.text.CharsKt__CharJVMKt: boolean isJavaIdentifierStart(char)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel)
kotlin.collections.CollectionsKt__CollectionsKt: void throwCountOverflow()
kotlin.text.StringsKt__StringsKt: java.lang.String trimStart(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.UInt: int mod-WZ4Q5Ns(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: BufferedChannel(int,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.io.path.DirectoryEntriesReader: java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes)
kotlin.collections.ArraysKt___ArraysKt: boolean none(long[])
kotlin.collections.SetsKt___SetsKt: java.util.Set minus(java.util.Set,kotlin.sequences.Sequence)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.ScreenFloatValueRegEx: ScreenFloatValueRegEx()
kotlinx.coroutines.CompletedContinuation: CompletedContinuation(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.AbstractMutableList: void add(int,java.lang.Object)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1: ComparisonsKt__ComparisonsKt$thenComparator$1(java.util.Comparator,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUShort(kotlin.UShort[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(double[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.sync.SemaphoreImpl$tryResumeNextFromQueue$createNewSegment$1: SemaphoreImpl$tryResumeNextFromQueue$createNewSegment$1()
kotlin.collections.MapWithDefaultImpl: void putAll(java.util.Map)
kotlin.sequences.IndexingSequence$iterator$1: void remove()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyOf(float[],int)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstNotNullOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.UByteArrayKt: byte[] ubyteArrayOf-GBYM_sE(byte[])
kotlin.ULongArrayKt: long[] ulongArrayOf-QwZRm1k(long[])
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
kotlinx.coroutines.flow.StateFlowImpl: boolean updateState(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int lastIndexOf(double)
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int,long,java.lang.Object)
kotlin.io.path.PathTreeWalkKt: java.lang.Object access$keyOf(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyInto(float[],float[],int,int,int)
kotlin.UByte: java.lang.String toString()
kotlin.jvm.internal.FunctionReference: boolean isInfix()
kotlin.properties.Delegates$observable$1: void afterChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
kotlin.time.DurationKt: long millisToNanos(long)
kotlinx.coroutines.channels.BroadcastChannelImpl: boolean isClosedForSend()
kotlin.collections.ArraysKt___ArraysKt: int elementAtOrElse(int[],int,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong maxByOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: void releaseInterceptedContinuation(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.Continuation)
kotlin.time.Duration: double getInMinutes-impl(long)
kotlin.collections.MapWithDefaultImpl: java.util.Set getEntries()
kotlinx.coroutines.JobSupport$Finishing: boolean isSealed()
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError(java.lang.String)
kotlinx.coroutines.channels.ProducerCoroutine: void onCompleted(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong reduceRightOrNull-s8dVfGU(long[],kotlin.jvm.functions.Function2)
kotlin.io.FilesKt__FileReadWriteKt: java.util.List readLines$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object)
kotlin.UByteArray$Iterator: boolean hasNext()
kotlinx.coroutines.selects.SelectKt: java.lang.Object select$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.FunInterfaceConstructorReference: kotlin.reflect.KCallable getReflected()
kotlin.UShort: int plus-xj2QHRw(short,short)
kotlin.collections.builders.SetBuilder: SetBuilder()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long minBy(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.AbstractCollection: AbstractCollection()
kotlin.collections.builders.ListBuilder: boolean removeAll(java.util.Collection)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function5)
kotlinx.coroutines.flow.internal.ChannelFlow: kotlin.jvm.functions.Function2 getCollectToFun$kotlinx_coroutines_core()
kotlin.text.RegexKt: int toInt(java.lang.Iterable)
kotlin.collections.MapsKt__MapsJVMKt: java.util.SortedMap sortedMapOf(kotlin.Pair[])
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.coroutines.ContinuationKt: void resume(kotlin.coroutines.Continuation,java.lang.Object)
kotlin.ranges.URangesKt___URangesKt: boolean contains-uhHAxoY(kotlin.ranges.ULongRange,short)
kotlin.UInt: int toUInt-pVg5ArA(int)
kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)
kotlinx.coroutines.Job: boolean cancel(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: boolean contains(float)
kotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.ChannelFlowBuilder: java.lang.Object collectTo$suspendImpl(kotlinx.coroutines.flow.ChannelFlowBuilder,kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.ranges.OpenEndFloatRange: boolean contains(java.lang.Comparable)
kotlin.collections.ArraysKt___ArraysKt: char first(char[],kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt__MapsKt: java.util.Map emptyMap()
kotlinx.coroutines.channels.ProducerScope$DefaultImpls: boolean offer(kotlinx.coroutines.channels.ProducerScope,java.lang.Object)
kotlin.io.ByteStreamsKt: java.io.ByteArrayInputStream inputStream(byte[],int,int)
kotlin.collections.CollectionsKt___CollectionsKt: double minOrThrow(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(boolean[],kotlin.jvm.functions.Function1)
kotlin.text.Regex: java.lang.String toString()
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KMutableProperty$Setter getSetter()
kotlin.collections.EmptySet: java.lang.Object[] toArray()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: ThreadContextKt$countAll$1()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.OutputStreamWriter writer$default(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ReceiveChannel: void cancel()
kotlin.reflect.KTypeProjection: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: ChannelsKt__DeprecatedKt$first$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: MissingMainCoroutineDispatcher(java.lang.Throwable,java.lang.String)
kotlin.jvm.internal.ClassReference: void isFun$annotations()
kotlinx.coroutines.channels.ReceiveCatching: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
kotlinx.coroutines.NonCancellable: NonCancellable()
kotlin.io.FilesKt__FileReadWriteKt: void appendBytes(java.io.File,byte[])
kotlinx.coroutines.DefaultExecutor: void get_thread$annotations()
kotlin.text.DelimitedRangesSequence$iterator$1: int getCurrentStartIndex()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(boolean[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Byte toByteOrNull(java.lang.String,int)
kotlin.ULong: boolean equals-impl(long,java.lang.Object)
kotlinx.coroutines.flow.SharingStarted: kotlinx.coroutines.flow.Flow command(kotlinx.coroutines.flow.StateFlow)
kotlin.SafePublicationLazyImpl: java.lang.Object getValue()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6: java.util.Iterator iterator()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection flatMapIndexedSequenceTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: char component5(char[])
kotlin.collections.ArraysKt___ArraysKt: long[] sliceArray(long[],java.util.Collection)
kotlin.io.encoding.DecodeInputStream: int decodeSymbolBufferInto(byte[],int,int,int)
kotlin.UnsignedKt: long doubleToULong(double)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.math.MathKt__MathJVMKt: long abs(long)
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(boolean[],java.lang.Iterable)
kotlinx.coroutines.scheduling.LimitingDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: FlowKt__TransformKt$runningReduce$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1,kotlin.coroutines.Continuation)
kotlin.UByte: long plus-VKZWuLQ(byte,long)
kotlinx.coroutines.flow.FlowKt__CountKt$count$4: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.UShort: long div-VKZWuLQ(short,long)
kotlinx.coroutines.flow.internal.FlowCoroutine: boolean childCancelled(java.lang.Throwable)
kotlinx.coroutines.CompletableDeferredImpl: java.lang.Object getCompleted()
kotlin.ranges.LongProgression$Companion: LongProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.io.path.PathWalkOption: kotlin.io.path.PathWalkOption[] $values()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(double[],java.util.Collection)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy-L4rlFek(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ranges.IntRange getIndices--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short lastOrNull(short[])
kotlin.text.RegexOption: kotlin.text.RegexOption valueOf(java.lang.String)
kotlinx.coroutines.scheduling.WorkQueue: int getBufferSize()
kotlin.collections.AbstractMap: boolean equals(java.lang.Object)
kotlin.reflect.KClass: boolean isFun()
kotlinx.coroutines.internal.LockFreeTaskQueue: LockFreeTaskQueue(boolean)
kotlin.time.Duration: void getMinutesComponent$annotations()
kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.random.XorWowRandom: int nextInt()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean offer(java.lang.Object)
kotlin.ranges.UIntProgression: int getLast-pVg5ArA()
kotlin.sequences.TakeWhileSequence: kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.TakeWhileSequence)
kotlinx.coroutines.channels.BufferedChannel: void onClosedReceiveCatchingOnNoWaiterSuspend(kotlinx.coroutines.CancellableContinuation)
kotlin.time.Duration$Companion: void getMicroseconds-UwyO8pc$annotations(int)
kotlin.collections.ArraysKt__ArraysKt: java.lang.Object ifEmpty(java.lang.Object[],kotlin.jvm.functions.Function0)
kotlin.UShort: int mod-WZ4Q5Ns(short,int)
kotlin.UIntArray: boolean addAll(java.util.Collection)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorReturn$default(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: int indexOf(java.util.List,java.lang.Object)
kotlin.UShortArray: boolean equals(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: int offsetByCodePoints(java.lang.String,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(double[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLast-qFRl0hI(int[],int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] asUIntArray(int[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] onEach(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlin.jvm.functions.Function1 consumes(kotlinx.coroutines.channels.ReceiveChannel)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxWithOrNull(java.lang.Iterable,java.util.Comparator)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.CharsKt__CharJVMKt: char uppercaseChar(char)
kotlin.collections.EmptyList: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyOf(double[])
kotlin.collections.ArraysKt___ArraysKt: char component2(char[])
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: boolean contains(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.math.MathKt__MathJVMKt: float withSign(float,int)
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2: CancellableFlowImpl$collect$2(kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object minWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence distinct(kotlin.sequences.Sequence)
kotlin.text.UStringsKt: kotlin.ULong toULongOrNull(java.lang.String)
kotlin.time.jdk8.DurationConversionsJDK8Kt: java.time.Duration toJavaDuration-LRDsOJo(long)
kotlin.io.ConsoleKt: void println(float)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.String toString()
kotlin.jvm.internal.Reflection: void setUpperBounds(kotlin.reflect.KTypeParameter,kotlin.reflect.KType)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveImpl(java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3)
kotlin.sequences.GeneratorSequence$iterator$1: void calcNext()
kotlinx.coroutines.flow.internal.ChannelFlowKt: java.lang.Object withContextUndispatched$default(kotlin.coroutines.CoroutineContext,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(boolean[],kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: int roundToInt(float)
kotlin.io.path.DefaultCopyActionContext: DefaultCopyActionContext()
kotlin.UByte: kotlin.UByte box-impl(byte)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2: java.util.Iterator iterator()
kotlin.UInt: long div-VKZWuLQ(int,long)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],java.lang.Object[])
kotlin.TypeAliasesKt: void NoSuchElementException$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.ULong: long unbox-impl()
kotlin.reflect.TypesJVMKt: java.lang.reflect.Type computeJavaType$default(kotlin.reflect.KType,boolean,int,java.lang.Object)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.jvm.internal.MutablePropertyReference0: java.lang.Object invoke()
kotlin.collections.ArraysKt___ArraysKt: short component2(short[])
kotlin.UnsignedKt: double uintToDouble(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.OnTimeout$selectClause$1: OnTimeout$selectClause$1()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlin.collections.builders.ListBuilder: ListBuilder()
kotlin.time.Duration$Companion: void getDays-UwyO8pc$annotations(long)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerDispatcher getImmediate()
kotlin.ranges.ClosedDoubleRange: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short find(short[],kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathReadWriteKt: void appendBytes(java.nio.file.Path,byte[])
kotlinx.coroutines.flow.StateFlowSlot: void makePending()
kotlin.ULongKt: long toULong(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(char[],java.lang.Iterable)
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
kotlin.jvm.internal.ReflectionFactory: void setUpperBounds(kotlin.reflect.KTypeParameter,java.util.List)
kotlin.text.StringsKt___StringsKt: java.lang.Object foldIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
kotlin.collections.ArraysKt___ArraysKt: boolean getOrElse(boolean[],int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getUnconfined()
kotlin.random.AbstractPlatformRandom: long nextLong()
androidx.room.Index$Order: androidx.room.Index$Order valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
kotlin.collections.builders.MapBuilder$KeysItr: MapBuilder$KeysItr(kotlin.collections.builders.MapBuilder)
kotlin.properties.ReadWriteProperty: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
kotlin.ranges.LongRange: java.lang.Comparable getEndExclusive()
kotlin.text.MatchResult: java.util.List getGroupValues()
kotlinx.coroutines.channels.BufferedChannel: long getSendersCounter$kotlinx_coroutines_core()
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyInto$default(char[],char[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1: FlowKt__LimitKt$take$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,int)
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1: java.lang.Object invoke(java.lang.Object)
kotlin.io.FilesKt__UtilsKt: java.io.File copyTo$default(java.io.File,java.io.File,boolean,int,int,java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle installParentHandle()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendBroadcast$suspendImpl(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object first(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.AwaitAll: kotlinx.coroutines.Deferred[] access$getDeferreds$p(kotlinx.coroutines.AwaitAll)
kotlin.UShort: boolean equals(java.lang.Object)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet: int getSize()
kotlin.io.FilesKt__FileReadWriteKt: java.io.BufferedWriter bufferedWriter$default(java.io.File,java.nio.charset.Charset,int,int,java.lang.Object)
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1: TimeoutKt$withTimeoutOrNull$1(kotlin.coroutines.Continuation)
kotlin.ranges.URangesKt___URangesKt: boolean contains-Gab390E(kotlin.ranges.ULongRange,int)
kotlin.properties.ObservableProperty: boolean beforeChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(double[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMutableList: java.lang.Object remove(int)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: FlowKt__ErrorsKt$catchImpl$1(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: kotlin.Pair partition(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(short[])
kotlin.collections.State: kotlin.collections.State valueOf(java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(java.lang.Comparable[])
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.internal.TypeReference: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toList$default(kotlinx.coroutines.flow.Flow,java.util.List,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: java.lang.Object tryResume(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(java.lang.Object)
kotlin.io.path.ExceptionsCollector: void collect(java.lang.Exception)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4: java.lang.Object invoke()
kotlin.reflect.KProperty: boolean isConst()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] onEachIndexed(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.PreconditionsKt__AssertionsJVMKt: void assert(boolean,kotlin.jvm.functions.Function0)
kotlin.ranges.ULongRange: java.lang.Comparable getStart()
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.internal.Symbol access$getNONE$p()
kotlin.collections.MapsKt__MapsJVMKt: java.lang.Object getOrPut(java.util.concurrent.ConcurrentMap,java.lang.Object,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEach-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.SetBuilder: boolean retainAll(java.util.Collection)
kotlinx.coroutines.internal.LockFreeTaskQueue: boolean isEmpty()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] plus-ctEhBpI(int[],int[])
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort lastOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel$onReceive$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(java.lang.Object[],int,int)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(long[],int,int)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
kotlin.collections.ArrayDeque: void addLast(java.lang.Object)
kotlinx.coroutines.CoroutineContextKt$foldCopies$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.UCollectionsKt___UCollectionsKt: int sumOfUByte(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(float[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6(float[])
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.reflect.KClass$DefaultImpls: void isFun$annotations()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean singleOrNull(boolean[])
androidx.work.OverwritingInputMerger: OverwritingInputMerger()
kotlinx.coroutines.selects.SelectKt: java.lang.Object select(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-K6DWlUc$default(long[],long,int,int,int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List windowed(java.lang.Iterable,int,int,boolean)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.text.CharsKt__CharJVMKt: boolean isLowSurrogate(char)
kotlin.enums.EnumEntriesKt: kotlin.enums.EnumEntries enumEntries(java.lang.Enum[])
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(int[],int,int)
kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: java.lang.Object invoke(java.lang.Object)
kotlin.io.ConsoleKt: void println(double)
kotlin.jvm.internal.TypeReference: boolean isMarkedNullable()
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: FlowKt__LimitKt$take$2$1$emit$1(kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilder$ValuesItr valuesIterator$kotlin_stdlib()
kotlin.text.UStringsKt: byte toUByte(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(byte[],int,int,int,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: java.lang.Character firstOrNull(kotlin.ranges.CharProgression)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0)
kotlin.reflect.KParameter: boolean isOptional()
kotlinx.coroutines.scheduling.CoroutineScheduler: int decrementCreatedWorkers()
kotlinx.coroutines.JobKt: void cancelChildren$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.builders.SerializedMap: SerializedMap(java.util.Map)
kotlin.math.MathKt__MathJVMKt: double asinh(double)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.UShortArray: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int indexOf(char)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
kotlin.ranges.ClosedDoubleRange: java.lang.Comparable getEndInclusive()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean singleOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: byte maxOf(byte,byte,byte)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable minOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.MutablePropertyReference1: MutablePropertyReference1(java.lang.Object)
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt: ArraysKt()
kotlin.UShortArray: java.lang.Object[] toArray()
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.util.List dumpCoroutinesInfoImpl(kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.DispatchedContinuation: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransformUnsafe$FlowKt__ZipKt(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection flatMapIndexedIterableTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.LateinitKt: void isInitialized$annotations(kotlin.reflect.KProperty0)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1: FlowKt__DistinctKt$defaultKeySelector$1()
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind[] values()
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(double[],kotlin.ranges.IntRange)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: int maxOf(int,int)
kotlin.ranges.CharProgression: int hashCode()
kotlin.io.ByteStreamsKt: java.io.ByteArrayInputStream byteInputStream$default(java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onCompletion(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.DispatchedCoroutine: boolean trySuspend()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
kotlin.text.StringsKt__RegexExtensionsJVMKt: kotlin.text.Regex toRegex(java.util.regex.Pattern)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object elementAtOrElse(kotlin.sequences.Sequence,int,kotlin.jvm.functions.Function1)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: int compareTo(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: char elementAtOrElse(char[],int,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: double[] toDoubleArray(java.util.Collection)
kotlin.collections.CollectionsKt___CollectionsKt: long[] toLongArray(java.util.Collection)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
kotlin.collections.ArraysKt___ArraysKt: void reverse(double[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapSequence(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence flatten$kotlin_stdlib(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object component3(java.lang.Object[])
kotlinx.coroutines.CoroutineScopeKt: void ensureActive(kotlinx.coroutines.CoroutineScope)
kotlinx.coroutines.channels.BufferedChannel: long getBufferEndCounter()
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.io.path.OnErrorResult: kotlin.io.path.OnErrorResult[] values()
kotlin.jvm.internal.Ref$CharRef: java.lang.String toString()
kotlinx.coroutines.sync.SemaphoreImpl: void acquire(kotlinx.coroutines.CancellableContinuation)
kotlin.sequences.SequencesKt___SequencesKt$distinct$1: SequencesKt___SequencesKt$distinct$1()
kotlin.collections.ArraysKt___ArraysKt: short component4(short[])
kotlinx.coroutines.selects.WhileSelectKt: java.lang.Object whileSelect(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: double maxOf(byte[],kotlin.jvm.functions.Function1)
kotlin.sequences.FilteringSequence$iterator$1: java.util.Iterator getIterator()
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List shuffled(java.lang.Iterable)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
kotlinx.coroutines.EventLoop: boolean shouldBeProcessedFromContext()
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: boolean hasNotPassedNow-impl(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(byte[],kotlin.jvm.functions.Function2)
kotlin.StandardKt__SynchronizedKt: StandardKt__SynchronizedKt()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(long,int)
kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte first-GBYM_sE(byte[])
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: FlowKt__ReduceKt$last$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResume(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(int[],kotlin.jvm.functions.Function3)
kotlin.UInt: byte mod-7apg3OU(int,byte)
kotlin.ranges.URangesKt: URangesKt()
kotlin.collections.ArraysKt___ArraysKt: double maxOf(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long runSingleTask()
kotlin.text.StringsKt___StringsJvmKt: java.lang.Character maxWith(java.lang.CharSequence,java.util.Comparator)
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1: BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1(java.lang.Object,kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.selects.SelectInstance)
kotlinx.coroutines.Job: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyOf(byte[])
kotlin.collections.ArraysKt___ArraysKt$withIndex$5: java.util.Iterator invoke()
kotlin.text.MatchResult: kotlin.text.MatchResult next()
kotlinx.coroutines.internal.StackTraceRecoveryKt: void mergeRecoveredTraces(java.lang.StackTraceElement[],java.util.ArrayDeque)
kotlin.ranges.UIntProgression: int getStep()
kotlin.collections.ArraysKt___ArraysKt: int reduceIndexed(int[],kotlin.jvm.functions.Function3)
kotlin.collections.UCollectionsKt___UCollectionsKt: byte[] toUByteArray(java.util.Collection)
kotlinx.coroutines.channels.ChannelResult$Companion: ChannelResult$Companion()
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: boolean systemProp(java.lang.String,boolean)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: long minOf(long,long[])
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object trySendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
kotlin.sequences.SubSequence$iterator$1: SubSequence$iterator$1(kotlin.sequences.SubSequence)
kotlin.collections.AbstractList$ListIteratorImpl: AbstractList$ListIteratorImpl(kotlin.collections.AbstractList,int)
kotlin.UShortArray$Iterator: void remove()
kotlin.text.StringsKt___StringsKt: java.lang.String filter(java.lang.String,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: CombineKt$zipImpl$1$1$second$1$1$emit$1(kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1,kotlin.coroutines.Continuation)
kotlin.reflect.TypesJVMKt$typeToString$unwrap$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls: boolean cancel$default(kotlinx.coroutines.channels.BroadcastChannel,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: CollectionsKt___CollectionsKt()
kotlin.concurrent.TimersKt: java.util.TimerTask schedule(java.util.Timer,java.util.Date,long,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1: CombineKt$combineInternal$2$1$1(kotlinx.coroutines.channels.Channel,int)
kotlinx.coroutines.flow.LintKt$retry$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.ScheduledFuture scheduleBlock(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable,kotlin.coroutines.CoroutineContext,long)
kotlin.collections.builders.SerializedCollection$Companion: SerializedCollection$Companion()
kotlin.jvm.functions.Function6: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempFile$default(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[],int,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path Path(java.lang.String,java.lang.String[])
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.String getInvariantSeparatorsPathString(java.nio.file.Path)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String c()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumes$1: void invoke(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float maxBy(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1: java.lang.Object keyOf(java.lang.Object)
kotlin.coroutines.SafeContinuation$Companion: SafeContinuation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.selects.SelectImplementation: void register(kotlinx.coroutines.selects.SelectImplementation$ClauseData,boolean)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol access$getTAKEN$p()
kotlin.enums.EnumEntriesKt$enumEntries$1: java.lang.Enum[] invoke()
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.future.CompletableFutureCoroutine: void onCompleted(java.lang.Object)
kotlin.time.Duration: double getInMilliseconds-impl(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long single-QwZRm1k(long[])
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void close()
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget valueOf(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(char[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexImpl$onLock$1: MutexImpl$onLock$1()
kotlinx.coroutines.channels.BroadcastChannelImpl: java.util.HashMap access$getOnSendInternalResult$p(kotlinx.coroutines.channels.BroadcastChannelImpl)
kotlin.jvm.internal.PropertyReference2: kotlin.reflect.KProperty$Getter getGetter()
kotlin.sequences.GeneratorSequence$iterator$1: void setNextState(int)
kotlin.collections.ArrayDeque: java.lang.Object removeFirstOrNull()
kotlin.math.MathKt__MathJVMKt: float getSign(float)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(int[])
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: byte minOf(byte,byte,byte)
kotlin.time.AbstractLongTimeSource: kotlin.time.ComparableTimeMark markNow()
kotlinx.coroutines.sync.SemaphoreSegment: boolean cas(int,java.lang.Object,java.lang.Object)
kotlin.time.Duration$Companion: long getSeconds-UwyO8pc(double)
kotlin.reflect.KClass: java.util.List getSealedSubclasses()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(float[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.UInt: int compareTo-xj2QHRw(int,short)
kotlin.collections.ArraysKt___ArraysJvmKt: long[] plus(long[],java.util.Collection)
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1: HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1(kotlinx.coroutines.CancellableContinuation)
kotlin.ULong: int compareTo-WZ4Q5Ns(long,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set toSet(java.lang.Iterable)
kotlin.jvm.JvmClassMappingKt: boolean isArrayOf(java.lang.Object[])
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(float[],kotlin.jvm.functions.Function1)
kotlin.reflect.KProperty2: kotlin.reflect.KProperty2$Getter getGetter()
kotlin.collections.MapsKt__MapsKt: void plusAssign(java.util.Map,java.lang.Iterable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] sortedArrayDescending-QwZRm1k(long[])
kotlin.UShort: float toFloat-impl(short)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long lastOrNull(long[])
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(long[],int)
kotlin.text.CharsKt__CharJVMKt: boolean isHighSurrogate(char)
kotlin.random.URandomKt: int nextUInt-a8DCA5k(kotlin.random.Random,int,int)
kotlin.jvm.internal.DoubleCompanionObject: double getMIN_VALUE()
kotlin.ranges.ClosedFloatRange: boolean lessThanOrEquals(float,float)
kotlinx.coroutines.channels.BroadcastCoroutine: void onCancelled(java.lang.Throwable,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List reversed-rL5Bavg(short[])
kotlin.UIntArray$Iterator: int next-pVg5ArA()
kotlinx.coroutines.internal.ThreadLocalKey: boolean equals(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-GBYM_sE(byte[])
kotlin.text.StringsKt__StringsKt: java.util.List split(java.lang.CharSequence,char[],boolean,int)
kotlin.UByte: int times-7apg3OU(byte,byte)
kotlin.collections.builders.ListBuilder: java.lang.Object get(int)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2: java.lang.Long invoke(java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long updateHead(long,int)
kotlin.text.RegexKt: int access$toInt(java.lang.Iterable)
kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)
kotlin.text.Regex$Companion: Regex$Companion()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: SemaphoreKt$withPermit$1(kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int getOrElse-QxvSvLU(int[],int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowKt: java.lang.Object access$getBufferAt(java.lang.Object[],long)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Appendable joinTo$default(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.text.MatchResult: kotlin.ranges.IntRange getRange()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.CoroutineScheduler: int getCreatedWorkers()
kotlin.internal.ProgressionUtilKt: int mod(int,int)
kotlin.text.DelimitedRangesSequence$iterator$1: boolean hasNext()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(short[],java.util.Collection)
kotlin.text.CharsKt__CharJVMKt: boolean isIdentifierIgnorable(char)
kotlinx.coroutines.flow.ChannelAsFlow: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,boolean)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,char)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1: int compare(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer singleOrNull(int[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(short[])
kotlin.random.Random: Random()
kotlin.ULongArray: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: boolean none(float[])
kotlin.text.StringsKt___StringsKt: java.lang.String reversed(java.lang.String)
kotlinx.coroutines.CompletedExceptionally: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(double[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(boolean[],kotlin.jvm.functions.Function3)
kotlin.io.path.PathsKt__PathReadWriteKt: void forEachLine(java.nio.file.Path,java.nio.charset.Charset,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.MutableStateFlow: boolean compareAndSet(java.lang.Object,java.lang.Object)
kotlin.ranges.IntProgression: IntProgression(int,int,int)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.text.RegexKt: kotlin.ranges.IntRange range(java.util.regex.MatchResult)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: FlowKt__ShareKt$launchSharing$1(kotlinx.coroutines.flow.SharingStarted,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.MutableSharedFlow,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replaceFirst(java.lang.String,java.lang.String,java.lang.String,boolean)
kotlin.collections.MapsKt__MapsKt: java.lang.Object getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0)
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy: ConstraintProxy$StorageNotLowProxy()
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Double min(kotlin.sequences.Sequence)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol access$getBROKEN$p()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(byte[],byte,int,int)
kotlin.time.Duration$Companion: void getSeconds-UwyO8pc$annotations(long)
kotlin.jvm.internal.TypeIntrinsics: java.util.Iterator asMutableIterator(java.lang.Object,java.lang.String)
kotlin.io.FilesKt__FileReadWriteKt: void forEachLine$default(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
kotlin.UIntKt: int toUInt(int)
kotlinx.coroutines.flow.ChannelAsFlow: kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List mapIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2)
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: int getArity()
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.flow.Flow dropChannelOperators()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
kotlinx.coroutines.channels.ReceiveChannel: void cancel(java.util.concurrent.CancellationException)
kotlin.io.path.FileVisitorBuilderImpl: void onPreVisitDirectory(kotlin.jvm.functions.Function2)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol access$getPERMIT$p()
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
kotlinx.coroutines.CancellableContinuationImpl: boolean resetStateReusable()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWithTo-X6OPwNk(long[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow takeWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.time.Duration$Companion: long minutes-UwyO8pc(int)
kotlinx.coroutines.CoroutineScopeKt: void cancel(kotlinx.coroutines.CoroutineScope,java.lang.String,java.lang.Throwable)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.channels.BroadcastCoroutine: kotlinx.coroutines.channels.BroadcastChannel get_channel()
kotlinx.coroutines.EventLoopImplBase: void enqueue(java.lang.Runnable)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: CoroutineContextKt$foldCopies$folded$1(kotlin.jvm.internal.Ref$ObjectRef,boolean)
kotlin.UInt: int shl-pVg5ArA(int,int)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2: java.nio.file.FileVisitResult invoke(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
kotlin.DeprecationLevel: kotlin.DeprecationLevel[] $values()
kotlin.time.Duration: long getInWholeDays-impl(long)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
kotlinx.coroutines.channels.BroadcastCoroutine: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: java.lang.StackTraceElement getStackTraceElement()
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny$default(java.lang.CharSequence,char[],int,boolean,int,java.lang.Object)
kotlin.sequences.DistinctSequence: java.util.Iterator iterator()
kotlin.time.MonotonicTimeSource: kotlin.time.TimeMark markNow()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
kotlin.collections.ArraysKt___ArraysKt$withIndex$4: ArraysKt___ArraysKt$withIndex$4(int[])
kotlin.collections.ArraysKt___ArraysKt: long last(long[])
kotlin.collections.builders.SetBuilder: boolean remove(java.lang.Object)
kotlin.concurrent.TimersKt: java.util.Timer fixedRateTimer(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short getOrElse-CVVdw08(short[],int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(byte[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort reduceIndexedOrNull-aLgx1Fo(short[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.StartedWhileSubscribed: StartedWhileSubscribed(long,long)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: boolean equals-impl(long,java.lang.Object)
kotlin.ranges.LongProgression: long getFirst()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
kotlin.RequiresOptIn: kotlin.RequiresOptIn$Level level()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterNot-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsJVMKt: boolean contentEquals(java.lang.CharSequence,java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(boolean[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1: CollectionsKt___CollectionsKt$elementAt$1(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(int[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(double[],kotlin.jvm.functions.Function1)
kotlin.text.RegexOption: kotlin.text.RegexOption[] $values()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte minByOrNull(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.Pair: kotlin.Pair copy(java.lang.Object,java.lang.Object)
kotlin.collections.ArrayDeque: java.lang.Object internalGet(int)
kotlin.io.encoding.Base64: byte[] encodeToByteArrayImpl$kotlin_stdlib(byte[],int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(short[],kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry maxByOrNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.ranges.OpenEndDoubleRange: java.lang.Comparable getEndExclusive()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: ChannelFlowTransformLatest$flowCollect$3(kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.UShortArray: boolean containsAll(java.util.Collection)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: boolean isEmpty()
kotlinx.coroutines.internal.MainDispatchersKt: java.lang.Void throwMissingMainDispatcherException()
kotlin.text.DelimitedRangesSequence: int access$getLimit$p(kotlin.text.DelimitedRangesSequence)
kotlin.collections.ArraysKt___ArraysKt: long[] sortedArrayDescending(long[])
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.text.CharsKt__CharJVMKt: char toTitleCase(char)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: ArraysKt___ArraysJvmKt$asList$2(short[])
kotlin.collections.ArraysKt___ArraysKt: float[] sliceArray(float[],kotlin.ranges.IntRange)
kotlin.collections.AbstractCollection: boolean removeAll(java.util.Collection)
kotlin.io.encoding.Base64: byte[] decode$default(kotlin.io.encoding.Base64,java.lang.CharSequence,int,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: char component4(char[])
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWith-LTi4i_s(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.TaskContextImpl: void afterTask()
kotlin.jvm.internal.FunctionAdapter: kotlin.Function getFunctionDelegate()
kotlin.jvm.internal.Intrinsics: void throwNpe(java.lang.String)
kotlin.KotlinNothingValueException: KotlinNothingValueException(java.lang.String,java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: java.lang.Long get(int)
kotlin.text.MatchGroup: kotlin.ranges.IntRange component2()
kotlin.text.StringsKt__StringsKt: int indexOfAny$default(java.lang.CharSequence,char[],int,boolean,int,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression reversed(kotlin.ranges.IntProgression)
kotlin.jvm.internal.Intrinsics: boolean areEqual(double,java.lang.Double)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWithOrNull-5NtCtWE(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.io.ByteStreamsKt$iterator$1: int getNextByte()
kotlinx.coroutines.internal.InlineList: boolean equals-impl0(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow map(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.EnumCompanionObject: EnumCompanionObject()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(char[],kotlin.jvm.functions.Function1)
kotlin.time.Duration$Companion: void getNanoseconds-UwyO8pc$annotations(long)
kotlin.ULong: int hashCode-impl(long)
kotlin.collections.ByteIterator: java.lang.Byte next()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(double[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
kotlin.text.StringsKt___StringsKt: java.util.List mapNotNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
kotlinx.coroutines.BlockingEventLoop: BlockingEventLoop(java.lang.Thread)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(double[])
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
kotlin.collections.ArraysKt___ArraysKt: int sumBy(byte[],kotlin.jvm.functions.Function1)
kotlin.comparisons.ReverseOrderComparator: java.util.Comparator reversed()
kotlinx.coroutines.CancellableContinuationKt: void disposeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.DisposableHandle)
kotlin.KotlinNullPointerException: KotlinNullPointerException()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: ArraysKt___ArraysJvmKt$asList$1(byte[])
kotlinx.coroutines.scheduling.UnlimitedIoScheduler: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1: FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1(kotlin.jvm.internal.Ref$ObjectRef)
kotlin.collections.ArrayDeque: boolean remove(java.lang.Object)
kotlinx.coroutines.time.TimeKt: kotlinx.coroutines.flow.Flow debounce(kotlinx.coroutines.flow.Flow,java.time.Duration)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1: FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy-bBsjw1Y(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence filterIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlin.coroutines.AbstractCoroutineContextKey: boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterNot(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean any(short[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.PropertyReference: boolean equals(java.lang.Object)
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted WhileSubscribed(long,long)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(long)
kotlinx.coroutines.TimeoutKt: java.lang.Object setupTimeout(kotlinx.coroutines.TimeoutCoroutine,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceFirst(java.lang.CharSequence,kotlin.text.Regex,java.lang.String)
kotlin.text.StringsKt___StringsKt: java.lang.Character minOrNull(java.lang.CharSequence)
kotlin.collections.builders.ListBuilderKt: int access$subarrayContentHashCode(java.lang.Object[],int,int)
kotlin.text.StringsKt___StringsKt$groupingBy$1: java.lang.Object keyOf(java.lang.Object)
kotlin.jvm.internal.InlineMarker: void finallyEnd(int)
kotlin.time.Duration$Companion: long microseconds-UwyO8pc(long)
kotlin.collections.AbstractIterator: void setNext(java.lang.Object)
kotlin.time.MonotonicTimeSource: kotlin.time.ComparableTimeMark markNow()
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.channels.ChannelIterator iterator()
kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: float minByOrThrow(float[],kotlin.jvm.functions.Function1)
kotlin.concurrent.ThreadsKt: java.lang.Thread thread$default(boolean,boolean,java.lang.ClassLoader,java.lang.String,int,kotlin.jvm.functions.Function0,int,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: void access$onClosedReceiveOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.CancellableContinuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(double[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.collections.EmptyList: java.lang.Object[] toArray(java.lang.Object[])
kotlin.jvm.internal.ClassReference: java.util.List getSupertypes()
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.util.List enhanceStackTraceWithThreadDump(kotlinx.coroutines.debug.internal.DebugCoroutineInfo,java.util.List)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean all-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.DeepRecursiveScope: DeepRecursiveScope()
kotlin.ranges.RangesKt___RangesKt: java.lang.Short toShortExactOrNull(long)
kotlin.collections.builders.MapBuilder: void compact()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setUniqueId(android.view.accessibility.AccessibilityNodeInfo,java.lang.String)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.time.TimeSource$Monotonic: kotlin.time.TimeMark markNow()
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.LintKt: kotlin.coroutines.CoroutineContext getCoroutineContext(kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.channels.WaiterEB: WaiterEB(kotlinx.coroutines.Waiter)
kotlin.collections.IndexedValue: int hashCode()
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.JobCancellationException createCopy()
kotlin.ranges.RangesKt___RangesKt: int coerceIn(int,int,int)
kotlin.UInt: int rem-7apg3OU(int,byte)
kotlin.text.StringsKt___StringsKt$windowed$1: StringsKt___StringsKt$windowed$1()
kotlin.jvm.internal.SpreadBuilder: SpreadBuilder(int)
kotlin.text.UStringsKt: kotlin.UShort toUShortOrNull(java.lang.String)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String format(java.lang.String,java.util.Locale,java.lang.Object[])
kotlin.KotlinVersion: int getMinor()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxByOrNull(float[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumOfDouble(short[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendRange(java.lang.StringBuilder,char[],int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(double[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.InlineList: boolean equals-impl(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: char minWithOrThrow(char[],java.util.Comparator)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: java.lang.Object get(int)
kotlin.jvm.internal.CallableReference$NoReceiver: java.lang.Object readResolve()
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.lang.String getDebugString(kotlinx.coroutines.Job)
kotlin.io.ByteStreamsKt$iterator$1: void setFinished(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sortedDescending-QwZRm1k(long[])
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.AbstractMap: boolean containsEntry$kotlin_stdlib(java.util.Map$Entry)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
kotlin.collections.ArraysKt___ArraysKt: short last(short[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: char reduceIndexed(char[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.SupervisorJobImpl: boolean childCancelled(java.lang.Throwable)
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.channels.BufferedChannel: void invokeOnClose(kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BroadcastChannelImpl: BroadcastChannelImpl(int)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Iterable withIndex-GBYM_sE(byte[])
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel flatMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlin.coroutines.Continuation probeCoroutineCreated$kotlinx_coroutines_core(kotlin.coroutines.Continuation)
kotlin.text.StringsKt__IndentKt$prependIndent$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(java.lang.Object[],kotlin.ranges.IntRange)
kotlin.ranges.UIntProgression: boolean isEmpty()
kotlin.ranges.UIntRange: java.lang.Comparable getStart()
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
kotlin.reflect.KClass: boolean isInner()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: FlowKt__DelayKt$debounceInternal$1$values$1(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.math.MathKt__MathJVMKt: double expm1(double)
kotlinx.coroutines.CopyableThreadContextElement: kotlin.coroutines.CoroutineContext mergeForChild(kotlin.coroutines.CoroutineContext$Element)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] asLongArray-QwZRm1k(long[])
kotlin.UByteArray: java.lang.String toString()
kotlinx.coroutines.JobSupport: boolean cancel(java.lang.Throwable)
kotlin.text.StringsKt___StringsKt$chunkedSequence$1: java.lang.String invoke(java.lang.CharSequence)
kotlin.sequences.DropWhileSequence$iterator$1: void setNextItem(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
androidx.core.content.res.ResourcesCompat$Api15Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: ComparisonsKt___ComparisonsJvmKt()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UInt maxWith-YmdZ_VM(int[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean getOrNull(boolean[],int)
kotlin.io.encoding.DecodeInputStream: int read(byte[],int,int)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.util.Map,java.util.Map)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxWithOrThrow(kotlin.sequences.Sequence,java.util.Comparator)
kotlin.collections.CollectionsKt__MutableCollectionsKt: java.lang.Object remove(java.util.List,int)
kotlinx.coroutines.intrinsics.CancellableKt: void dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelResult: int hashCode-impl(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.ranges.LongRange)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(double[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlow,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core rehash()
kotlin.collections.EmptyMap: java.util.Set getKeys()
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: SubscribedFlowCollector$onSubscription$1(kotlinx.coroutines.flow.SubscribedFlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
kotlin.collections.ArraysKt___ArraysKt: byte first(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associate(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeLinkedListHead: void forEach(kotlin.jvm.functions.Function1)
kotlin.sequences.Sequence: java.util.Iterator iterator()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object firstOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterNotNull(kotlin.sequences.Sequence)
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
kotlin.DeepRecursiveKt: java.lang.Object invoke(kotlin.DeepRecursiveFunction,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharedFlow onSubscription(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobSupport: kotlin.sequences.Sequence getChildren()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow receiveAsFlow(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.jvm.internal.InlineMarker: void beforeInlineCall()
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path Path(java.lang.String)
kotlin.collections.BooleanIterator: java.lang.Object next()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
kotlin.reflect.WildcardTypeImpl: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(short[],kotlin.jvm.functions.Function2)
kotlin.sequences.TakeWhileSequence$iterator$1: void calcNext()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence flatMapIndexedIterable(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(java.lang.Object[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $values()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: IntrinsicsKt__IntrinsicsKt()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(float[])
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveCatchingOnNoWaiterSuspend-GKJJFZk(kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel: boolean tryResumeReceiver(java.lang.Object,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path relativeToOrNull(java.nio.file.Path,java.nio.file.Path)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int getSize()
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
kotlin.NumbersKt__NumbersKt: short takeLowestOneBit(short)
kotlin.reflect.KFunction$DefaultImpls: void isSuspend$annotations()
kotlinx.coroutines.channels.LazyBroadcastCoroutine: kotlinx.coroutines.channels.ReceiveChannel openSubscription()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(int[],int)
kotlin.ULongKt: long toULong(double)
kotlin.collections.builders.MapBuilderValues: java.util.Iterator iterator()
kotlin.reflect.KParameter: boolean isVararg()
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.ThreadState: void clearInterrupt()
kotlin.text.MatcherMatchResult$groupValues$1: int indexOf(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-JAKpvQM(byte[],byte[],kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimStart(java.lang.CharSequence,char[])
kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(short[])
kotlinx.coroutines.flow.FlowKt__CountKt: java.lang.Object count(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: boolean random(boolean[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object component5(java.util.List)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UByte maxBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object last(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.time.Duration$Companion: long seconds-UwyO8pc(double)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] plus(short[],java.util.Collection)
kotlin.ranges.URangesKt___URangesKt: boolean contains-ULb-yJY(kotlin.ranges.ULongRange,byte)
kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.ComparableOpenEndRange: java.lang.Comparable getEndExclusive()
kotlinx.coroutines.CoroutineName: java.lang.String getName()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List reversed-QwZRm1k(long[])
kotlin.UInt: int div-WZ4Q5Ns(int,int)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow,int)
kotlin.reflect.TypeVariableImpl: java.lang.reflect.GenericDeclaration getGenericDeclaration()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UShort minBy-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object last(java.lang.Iterable)
androidx.work.impl.diagnostics.DiagnosticsReceiver: DiagnosticsReceiver()
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(float[])
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
kotlin.jvm.internal.AdaptedFunctionReference: boolean equals(java.lang.Object)
kotlin.collections.builders.MapBuilderValues: void clear()
kotlinx.coroutines.DispatchedTaskKt: boolean isCancellableMode(int)
kotlin.collections.EmptyList: java.lang.Object[] toArray()
kotlin.UByteArray: UByteArray(byte[])
kotlin.KotlinVersion: int versionOf(int,int,int)
kotlinx.coroutines.DeferredCoroutine: java.lang.Object await(kotlin.coroutines.Continuation)
kotlin.sequences.TakeSequence: TakeSequence(kotlin.sequences.Sequence,int)
kotlin.collections.ArraysKt___ArraysKt: int reduceRight(int[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: double component3(double[])
kotlin.collections.ArraysKt___ArraysJvmKt: char elementAt(char[],int)
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
kotlin.collections.ArraysKt___ArraysKt$withIndex$1: java.lang.Object invoke()
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean getSanitizeStackTraces$kotlinx_coroutines_core()
kotlin.collections.AbstractMap: java.util.Collection getValues()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] plus-XzdR7RA(short[],short)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(float[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(char[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: short minByOrThrow-U(short[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
kotlin.sequences.SequenceScope: SequenceScope()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow cache(kotlinx.coroutines.flow.Flow)
kotlin.ranges.UIntProgression$Companion: kotlin.ranges.UIntProgression fromClosedRange-Nkh28Cs(int,int,int)
kotlinx.coroutines.Unconfined: java.lang.String toString()
kotlinx.coroutines.JobSupport: java.lang.String toDebugString()
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(double)
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt: void propagateExceptionFinalResort(java.lang.Throwable)
kotlin.reflect.KTypeProjection: java.lang.String toString()
kotlin.text.CharDirectionality$Companion: java.util.Map getDirectionalityMap()
kotlin.jvm.internal.MutablePropertyReference0: MutablePropertyReference0(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: char random(kotlin.ranges.CharRange)
kotlin.ranges.LongRange: java.lang.Long getEndInclusive()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(boolean[],int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(boolean[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte component1-GBYM_sE(byte[])
kotlin.collections.builders.MapBuilder: boolean shouldCompact(int)
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer randomOrNull(kotlin.ranges.IntRange)
kotlinx.coroutines.Job$DefaultImpls: void getParent$annotations()
kotlin.collections.builders.MapBuilder$EntryRef: boolean equals(java.lang.Object)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p()
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.sequences.Sequence)
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean isInternalMethod(java.lang.StackTraceElement)
kotlin.properties.ObservableProperty: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
kotlin.reflect.GenericArrayTypeImpl: java.lang.String getTypeName()
kotlin.time.DurationKt: java.lang.String substringWhile(java.lang.String,int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(int[],kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minWithOrThrow(kotlin.sequences.Sequence,java.util.Comparator)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.jvm.internal.PropertyReference0: java.lang.Object invoke()
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceIn(java.lang.Comparable,kotlin.ranges.ClosedRange)
kotlinx.coroutines.intrinsics.UndispatchedKt: java.lang.Object undispatchedResult(kotlinx.coroutines.internal.ScopeCoroutine,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendRange(java.lang.StringBuilder,java.lang.CharSequence,int,int)
kotlin.ranges.UIntProgressionIterator: boolean hasNext()
kotlinx.coroutines.flow.CallbackFlowBuilder: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(char[],kotlin.ranges.IntRange)
kotlinx.coroutines.channels.BufferedChannel: void isClosedForSend$annotations()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(long[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short maxOrThrow-U(short[])
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending--nroSd4(long[],int,int)
kotlin.NumbersKt__NumbersJVMKt: int toBits(float)
kotlin.time.Duration: java.lang.Object toComponents-impl(long,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.LongSpreadBuilder: LongSpreadBuilder(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(char[])
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharedFlow shareIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,int)
kotlin.reflect.TypeVariableImpl: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: boolean any(float[])
kotlin.KotlinVersion$Companion: KotlinVersion$Companion()
kotlin.time.DurationJvmKt: java.lang.String formatUpToDecimals(double,int)
kotlin.collections.MapWithDefaultImpl: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte firstOrNull(byte[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.OpenEndRange,byte)
kotlin.concurrent.VolatileKt: void Volatile$annotations()
kotlinx.coroutines.ThreadState: void invoke(java.lang.Throwable)
kotlin.jvm.internal.MutablePropertyReference2: MutablePropertyReference2()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.lang.Object putImpl$default(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core,java.lang.Object,java.lang.Object,kotlinx.coroutines.debug.internal.HashedWeakRef,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(byte[])
kotlin.UShortArray: boolean contains-xj2QHRw(short[],short)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.util.List)
kotlin.sequences.EmptySequence: java.util.Iterator iterator()
kotlinx.coroutines.JobSupport: java.lang.String nameString$kotlinx_coroutines_core()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] copyOfRange--nroSd4(long[],int,int)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection filterIsInstanceTo(kotlin.sequences.Sequence,java.util.Collection)
kotlinx.coroutines.ThreadLocalEventLoop: void resetEventLoop$kotlinx_coroutines_core()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],float[])
kotlin.collections.ArraysKt___ArraysKt: long single(long[])
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(double[],double)
kotlin.UnsafeLazyImpl: java.lang.Object getValue()
kotlin.UInt: UInt(int)
kotlin.text.StringsKt___StringsKt$withIndex$1: java.util.Iterator invoke()
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResumeWithException(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: long[] plus(long[],long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(double[],kotlin.jvm.functions.Function1)
kotlin.ranges.OpenEndDoubleRange: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: ChannelsKt__DeprecatedKt$withIndex$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLast-nggk6HY(short[],int)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(short,byte)
kotlin.sequences.SequencesKt___SequencesKt: int indexOfFirst(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.PackageReference: java.util.Collection getMembers()
kotlin.time.AbstractLongTimeSource$LongTimeMark: AbstractLongTimeSource$LongTimeMark(long,kotlin.time.AbstractLongTimeSource,long)
kotlin.ULongKt: long toULong(float)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void probeCoroutineCompleted(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
kotlin.jvm.internal.IntCompanionObject: IntCompanionObject()
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean)
kotlinx.coroutines.flow.internal.SendingCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFoldIndexed-yVwIW0Q(int[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArrayDeque$Companion: ArrayDeque$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.TimeoutKt: java.lang.Object withTimeoutOrNull-KLykuaI(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.Path copyToRecursively(java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,boolean,kotlin.jvm.functions.Function3)
kotlinx.coroutines.EventLoop: boolean isUnconfinedQueueEmpty()
kotlin.text.Regex: Regex(java.util.regex.Pattern)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(double[])
kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1: java.lang.String invoke(java.lang.reflect.Type)
kotlin.text.StringsKt___StringsKt: java.lang.Object foldRight(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(char[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.reflect.KCallable: boolean isSuspend()
kotlin.Triple: java.lang.Object component2()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(char[],kotlin.jvm.functions.Function1)
kotlin.time.Duration$Companion: long hours-UwyO8pc(long)
kotlin.reflect.WildcardTypeImpl$Companion: WildcardTypeImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.CompletableDeferred$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.CompletableDeferred,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.ULong: long floorDiv-WZ4Q5Ns(long,int)
kotlinx.coroutines.JobSupport: void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
kotlinx.coroutines.flow.ReadonlySharedFlow: java.util.List getReplayCache()
kotlin.collections.MapsKt___MapsKt: java.lang.Float maxOfOrNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float randomOrNull(float[],kotlin.random.Random)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
kotlin.StandardKt__StandardKt: java.lang.Object apply(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.ranges.IntProgression: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(boolean[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow buffer$default(kotlinx.coroutines.flow.Flow,int,int,java.lang.Object)
kotlin.PreconditionsKt__PreconditionsKt: void check(boolean,kotlin.jvm.functions.Function0)
kotlin.jvm.internal.ByteCompanionObject: ByteCompanionObject()
kotlinx.coroutines.JobSupport: void addSuppressedExceptions(java.lang.Throwable,java.util.List)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,kotlin.Unit)
kotlin.NumbersKt__FloorDivModKt: long mod(short,long)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: java.lang.Object get(int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt: int getDEFAULT_CONCURRENCY()
kotlin.time.Duration: double getInNanoseconds-impl(long)
kotlinx.coroutines.internal.ClassValueCtorCache$cache$1: java.lang.Object computeValue(java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: double first(double[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.io.FilesKt__FileReadWriteKt$readLines$1: FilesKt__FileReadWriteKt$readLines$1(java.util.ArrayList)
kotlinx.coroutines.internal.ThreadSafeHeap: void addLast(kotlinx.coroutines.internal.ThreadSafeHeapNode)
kotlin.UIntArray: void set-VXSXFK8(int[],int,int)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.lang.Object delay(long,kotlin.coroutines.Continuation)
kotlinx.coroutines.RunnableKt: java.lang.Runnable Runnable(kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object single(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.io.path.FileVisitorImpl: FileVisitorImpl(kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(double[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class,java.lang.String)
kotlin.io.FilesKt__FilePathComponentsKt: kotlin.io.FilePathComponents toComponents(java.io.File)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] realloc()
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KProperty1$Getter getGetter()
kotlinx.coroutines.internal.LockFreeTaskQueue: void close()
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: FlowKt__MergeKt$mapLatest$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(int[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.Dispatchers: void getUnconfined$annotations()
kotlin.collections.ArraysKt___ArraysKt: boolean component5(boolean[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean any(int[])
kotlin.collections.builders.MapBuilderKeys: boolean contains(java.lang.Object)
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: kotlin.Pair invoke(java.lang.CharSequence,int)
kotlin.jvm.internal.MutablePropertyReference1: MutablePropertyReference1(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.io.FileTreeWalk$DirectoryState: FileTreeWalk$DirectoryState(java.io.File)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.Object,java.lang.String)
kotlin.collections.AbstractList$ListIteratorImpl: int previousIndex()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: float maxOf-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.reflect.KCallable: boolean isFinal()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toChannel(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
kotlin.DeepRecursiveScope: java.lang.Object callRecursive(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: float maxOf(float,float,float)
kotlin.text.StringsKt___StringsKt$windowedSequence$2: StringsKt___StringsKt$windowedSequence$2(int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectOldKt: java.lang.Object selectOld(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(double[],double,int,int)
kotlinx.coroutines.CancelFutureOnCancel: void invoke(java.lang.Throwable)
kotlin.math.MathKt__MathJVMKt: double nextUp(double)
kotlin.io.ConsoleKt: void print(long)
kotlinx.coroutines.JobCancellationException: java.lang.Throwable fillInStackTrace()
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.CoroutineExceptionHandler,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.lang.String,java.lang.Throwable,int,java.lang.Object)
kotlin.sequences.FlatteningSequence: kotlin.jvm.functions.Function1 access$getIterator$p(kotlin.sequences.FlatteningSequence)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer lastOrNull(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.LintKt: java.lang.Object count(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.Continuation)
kotlin.collections.SlidingWindowKt: void checkWindowSizeStep(int,int)
kotlin.text.StringsKt___StringsKt: java.util.List zip(java.lang.CharSequence,java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(double[],double[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean find(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.LazyActorCoroutine$onSend$1: void invoke(kotlinx.coroutines.channels.LazyActorCoroutine,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorResumeNext(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: ChannelsKt__DeprecatedKt$zip$2(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float max(float[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object firstOrNull(java.lang.Iterable)
kotlin.sequences.TakeWhileSequence$iterator$1: TakeWhileSequence$iterator$1(kotlin.sequences.TakeWhileSequence)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: double toDouble(java.lang.String)
kotlinx.coroutines.JobSupportKt: java.lang.Object unboxState(java.lang.Object)
kotlin.CharCodeKt: void getCode$annotations(char)
kotlin.ranges.RangesKt___RangesKt: int random(kotlin.ranges.IntRange)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sorted-rL5Bavg(short[])
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.Path copyToRecursively$destination$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path,java.nio.file.Path,java.nio.file.Path)
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
kotlinx.coroutines.internal.InlineList: InlineList(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: void sortBy(java.util.List,kotlin.jvm.functions.Function1)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map reduceTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function3)
kotlin.KotlinVersion$Companion: KotlinVersion$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void shuffle(java.util.List)
kotlin.NumbersKt__NumbersJVMKt: int rotateRight(int,int)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7: java.util.Iterator iterator()
kotlin.text.Regex: java.util.regex.Pattern toPattern()
kotlin.UByteArray: java.util.Iterator iterator-impl(byte[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: long random-JzugnMA(long[],kotlin.random.Random)
kotlin.collections.ArraysKt___ArraysKt: long[] sortedArray(long[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: double minOf-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean inStack()
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol access$getNO_OWNER$p()
kotlin.comparisons.UComparisonsKt___UComparisonsKt: short minOf-t1qELG4(short,short[])
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void run()
kotlin.collections.IndexedValue: int getIndex()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel map$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlin.jvm.functions.Function1 bindCancellationFun(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
kotlin.reflect.KFunction: boolean isOperator()
kotlinx.coroutines.flow.internal.ChannelFlowMerge: kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope)
kotlinx.coroutines.ChildJob$DefaultImpls: void cancel(kotlinx.coroutines.ChildJob)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)
kotlinx.coroutines.flow.MutableSharedFlow: kotlinx.coroutines.flow.StateFlow getSubscriptionCount()
kotlin.UNumbersKt: byte takeHighestOneBit-7apg3OU(byte)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow sample(kotlinx.coroutines.flow.Flow,long)
kotlin.collections.AbstractSet: boolean equals(java.lang.Object)
kotlin.text.StringsKt__AppendableKt: java.lang.Appendable appendLine(java.lang.Appendable,char)
kotlin.collections.ArraysKt___ArraysKt: int sumOfByte(java.lang.Byte[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float randomOrNull(float[])
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean remove()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.UIntKt: int toUInt(long)
kotlin.text.StringsKt___StringsKt: double minOf(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.coroutines.AbstractCoroutineContextKey: AbstractCoroutineContextKey(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: FlowKt__ZipKt$combineUnsafe$1$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.internal.ClassValueCtorCache$cache$1: ClassValueCtorCache$cache$1()
kotlin.time.TimeSource$Monotonic$ValueTimeMark: int hashCode-impl(long)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: ChannelFlowTransformLatest(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.JobSupport: boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable)
kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
kotlinx.coroutines.channels.ChannelKt: java.lang.Object onClosed-WpGqRn0(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long reduceOrNull(long[],kotlin.jvm.functions.Function2)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(boolean[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceive()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,int)
kotlin.sequences.IndexingSequence$iterator$1: boolean hasNext()
kotlin.sequences.IndexingSequence$iterator$1: java.lang.Object next()
kotlinx.coroutines.CoroutineExceptionHandlerKt: void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
kotlin.collections.ArraysKt___ArraysKt: boolean none(byte[])
kotlin.io.encoding.DecodeInputStream: int readNextSymbol()
kotlin.collections.builders.MapBuilder$EntriesItr: java.lang.Object next()
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Void numberFormatError(java.lang.String)
kotlinx.coroutines.channels.TickerChannelsKt: java.lang.Object fixedPeriodTicker(long,long,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minWithOrNull(float[],java.util.Comparator)
kotlinx.coroutines.selects.SelectClause: java.lang.Object getClauseObject()
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.OutputStreamWriter writer(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[])
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1: SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1(kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List drop-nggk6HY(short[],int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.io.path.FileVisitorBuilder: void onPreVisitDirectory(kotlin.jvm.functions.Function2)
kotlin.UByte: byte and-7apg3OU(byte,byte)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void install$kotlinx_coroutines_core()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object first(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.sequences.SequenceBuilderIterator: java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
kotlin.ULong: long times-WZ4Q5Ns(long,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterNotTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.time.TimeSource$Monotonic: TimeSource$Monotonic()
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(boolean[],kotlin.jvm.functions.Function1)
kotlin.io.path.PathTreeWalk: boolean access$getIncludeDirectories(kotlin.io.path.PathTreeWalk)
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,float)
kotlin.text.StringsKt__StringsKt: boolean startsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Iterable castToIterable(java.lang.Object)
kotlin.random.RandomKt: int fastLog2(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object randomOrNull(java.util.Collection,kotlin.random.Random)
kotlin.collections.EmptyList: int indexOf(java.lang.Void)
kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadSafeHeap: int getSize()
kotlin.ranges.RangesKt___RangesKt: long coerceIn(long,kotlin.ranges.ClosedRange)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(java.lang.Object[],java.lang.Object[])
kotlinx.coroutines.NonCancellable: void isCompleted$annotations()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorResumeNext(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double lastOrNull(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consumeEach$$forInline(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ReversedList: ReversedList(java.util.List)
kotlin.collections.MapsKt___MapsKt: double minOf(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: java.lang.Object access$onAwaitInternalProcessResFunc(kotlinx.coroutines.JobSupport,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.DispatchedContinuation: void dispatchYield$kotlinx_coroutines_core(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.CtorCache: CtorCache()
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String getName()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] toUIntArray(int[])
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.channels.ReceiveChannel fixedPeriodTicker(kotlinx.coroutines.CoroutineScope,long,long)
kotlinx.coroutines.NonCancellable: boolean isCancelled()
kotlin.UIntArray: java.lang.String toString()
kotlin.ResultKt: java.lang.Object getOrThrow(java.lang.Object)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: SchedulerCoroutineDispatcher(int,int,long,java.lang.String)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
kotlin.ranges.OpenEndFloatRange: boolean equals(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.Object ifBlank(java.lang.CharSequence,kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: void freeSlot(kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void close()
kotlin.io.encoding.DecodeInputStream: DecodeInputStream(java.io.InputStream,kotlin.io.encoding.Base64)
kotlinx.coroutines.JobKt: boolean isActive(kotlin.coroutines.CoroutineContext)
kotlin.io.FilesKt__FileReadWriteKt$readLines$1: void invoke(java.lang.String)
kotlin.jvm.functions.Function14: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: void setSize(int)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.sync.SemaphoreSegment: java.lang.Object get(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxOfWith(java.lang.Iterable,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean all(byte[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.Ref$FloatRef: java.lang.String toString()
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable compute()
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow transformWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-kdPth3s(byte[],byte[])
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,float)
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KCallable computeReflected()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(double[],kotlin.jvm.functions.Function1)
kotlin.time.DurationKt: long getSeconds(int)
kotlin.collections.EmptyList: void add(int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.WorkQueueKt: int getMaskForStealingMode(kotlinx.coroutines.scheduling.Task)
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilder$KeysItr keysIterator$kotlin_stdlib()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
kotlin.time.DurationKt: void getMilliseconds$annotations(double)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(double[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.util.Collection mapIndexedTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.streams.jdk8.StreamsKt: java.util.List toList(java.util.stream.LongStream)
kotlin.io.ByteStreamsKt: java.io.InputStreamReader reader(java.io.InputStream,java.nio.charset.Charset)
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: long getSequenceNumber()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object elementAt(kotlin.sequences.Sequence,int)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object send$suspendImpl(kotlinx.coroutines.channels.ConflatedBufferedChannel,java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
kotlinx.coroutines.scheduling.CoroutineScheduler: int availableCpuPermits(long)
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.String additionalToStringProps()
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(int[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(int,short)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map createMapBuilder(int)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: void handleEntry$PathsKt__PathRecursiveFunctionsKt(java.nio.file.SecureDirectoryStream,java.nio.file.Path,kotlin.io.path.ExceptionsCollector)
kotlinx.coroutines.flow.LintKt: java.lang.Object toSet(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.Continuation)
kotlin.time.MeasureTimeKt: kotlin.time.TimedValue measureTimedValue(kotlin.time.TimeSource$Monotonic,kotlin.jvm.functions.Function0)
kotlin.text.StringsKt___StringsJvmKt: java.math.BigInteger sumOfBigInteger(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.SemaphoreImpl: int getAvailablePermits()
kotlin.ranges.UIntProgressionIterator: java.lang.Object next()
kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)
kotlin.jvm.internal.PropertyReference2: java.lang.Object getDelegate(java.lang.Object,java.lang.Object)
kotlin.collections.builders.ListBuilder: boolean remove(java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.util.Map filter(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexImpl: void unlock(java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)
kotlin.ranges.ULongProgression: ULongProgression(long,long,long,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api30Impl: boolean isImportantForContentCapture(android.view.View)
kotlin.collections.EmptyList: java.util.ListIterator listIterator(int)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: boolean hasNext()
kotlin.text.StringsKt___StringsKt: char getOrElse(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)
kotlin.text.MatcherMatchResult: java.util.List getGroupValues()
kotlin.io.path.ExceptionsCollector: int getTotalExceptions()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List mapNotNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: java.lang.Object get(int)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(short[],kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object reduceOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,double)
kotlin.UIntArray: boolean remove(java.lang.Object)
kotlin.ContextFunctionTypeParams: int count()
kotlin.jvm.internal.PropertyReference1Impl: java.lang.Object get(java.lang.Object)
kotlin.jvm.internal.TypeParameterReference$Companion: TypeParameterReference$Companion()
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
kotlin.jvm.internal.FloatSpreadBuilder: int getSize(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow timeout-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.collections.builders.AbstractMapBuilderEntrySet: boolean remove(java.lang.Object)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: void cleanWeakRef(kotlinx.coroutines.debug.internal.HashedWeakRef)
kotlin.collections.CollectionsKt__IterablesKt: int collectionSizeOrDefault(java.lang.Iterable,int)
kotlin.collections.ArrayDeque: ArrayDeque(java.util.Collection)
kotlin.sequences.DistinctIterator: DistinctIterator(java.util.Iterator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: ChannelsKt__DeprecatedKt$drop$1(int,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot()
kotlin.properties.Delegates: kotlin.properties.ReadWriteProperty observable(java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.GroupingKt: GroupingKt()
kotlin.text.MatcherMatchResult$groupValues$1: MatcherMatchResult$groupValues$1(kotlin.text.MatcherMatchResult)
kotlin.collections.builders.MapBuilder: java.util.Map build()
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: void checkContext(kotlinx.coroutines.flow.internal.SafeCollector,kotlin.coroutines.CoroutineContext)
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.UShortArray: boolean remove(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
kotlin.collections.builders.MapBuilder: int[] access$getPresenceArray$p(kotlin.collections.builders.MapBuilder)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-2fe2U9s(int[],int,int,int)
kotlin.NumbersKt__NumbersKt: short rotateRight(short,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort randomOrNull-s5X_as8(short[],kotlin.random.Random)
kotlin.sequences.SequencesKt___SequencesKt: int sumOfShort(kotlin.sequences.Sequence)
kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.Result: kotlin.Result box-impl(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object singleOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.lang.Iterable,java.lang.Object)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
kotlin.collections.EmptyMap: void putAll(java.util.Map)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt: int fieldsCountOrDefault(java.lang.Class,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(char[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2)
kotlin.jvm.internal.KTypeBase: java.lang.reflect.Type getJavaType()
kotlinx.coroutines.android.HandlerContext: void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt firstOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List minus(java.lang.Iterable,java.lang.Object)
kotlin.ULong: java.lang.String toString()
kotlin.text.StringsKt___StringsKt: char reduceRight(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsJVMKt: char[] toCharArray$default(java.lang.String,char[],int,int,int,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.reflect.TypeVariableImpl: java.lang.String getTypeName()
kotlinx.coroutines.internal.LockFreeLinkedListNode: void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: ComparisonsKt__ComparisonsKt$compareBy$2(kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BroadcastChannelImpl: void access$removeSubscriber(kotlinx.coroutines.channels.BroadcastChannelImpl,kotlinx.coroutines.channels.ReceiveChannel)
kotlin.UNumbersKt: int countTrailingZeroBits-7apg3OU(byte)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: ChannelsKt__ChannelsKt$trySendBlocking$2(kotlinx.coroutines.channels.SendChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: int getNCollectors()
kotlin.sequences.SequencesKt___SequencesJvmKt: kotlin.sequences.Sequence filterIsInstance(kotlin.sequences.Sequence,java.lang.Class)
kotlin.SafePublicationLazyImpl: java.lang.Object writeReplace()
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange getNextItem()
kotlin.UByte: byte toByte-impl(byte)
kotlin.UNumbersKt: long rotateRight-JSWoG40(long,int)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.util.List deleteRecursivelyImpl$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(char[],char)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(short[],short)
kotlinx.coroutines.flow.StateFlowSlot: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.UByte: int div-7apg3OU(byte,byte)
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(int[])
kotlin.UByte: int plus-WZ4Q5Ns(byte,int)
kotlin.collections.AbstractList: java.util.ListIterator listIterator()
kotlinx.coroutines.selects.OnTimeout: void getSelectClause$annotations()
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List drop-PpDY95g(byte[],int)
kotlin.text.StringsKt___StringsKt$windowedSequence$2: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.internal.FunctionReference: boolean isInline()
kotlin.coroutines.CoroutineContext$Element: kotlin.coroutines.CoroutineContext$Key getKey()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object lastOrNull(java.util.List,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1: java.lang.Object invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
kotlinx.coroutines.selects.SelectImplementation: int trySelectInternal(java.lang.Object,java.lang.Object)
kotlin.ULong: long shr-s-VKNKU(long,int)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List optimizeReadOnlyList(java.util.List)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(int[],int,int,int)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore(java.lang.String,char,java.lang.String)
kotlin.collections.ArrayAsCollection: int getSize()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLastWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.text.CharsKt__CharJVMKt: boolean isLetterOrDigit(char)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,int)
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.Delay: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.ReadonlyStateFlow: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.Character elementAtOrNull(java.lang.CharSequence,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.UInt: int div-xj2QHRw(int,short)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
kotlin.collections.ShortIterator: java.lang.Object next()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(short[],kotlin.jvm.functions.Function1)
kotlin.collections.MapWithDefaultImpl: boolean equals(java.lang.Object)
kotlin.collections.UArraySortingKt: int partition--nroSd4(long[],int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object firstNotNullOf(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(double[])
kotlin.reflect.KClasses: java.lang.Object cast(kotlin.reflect.KClass,java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
kotlin.ranges.CharProgression: char getFirst()
kotlin.contracts.ContractBuilderKt: void contract(kotlin.jvm.functions.Function1)
kotlin.reflect.KClass: boolean isData()
kotlin.io.path.PathsKt__PathReadWriteKt: void writeText$default(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow buffer$default(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object)
kotlin.jvm.internal.FloatSpreadBuilder: FloatSpreadBuilder(int)
kotlinx.coroutines.scheduling.UnlimitedIoScheduler: UnlimitedIoScheduler()
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore next()
kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next()
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3: UArraysKt___UArraysKt$withIndex$3(byte[])
kotlin.text.StringsKt__StringBuilderKt: java.lang.String buildString(int,kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: float coerceIn(float,float,float)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long findLast(long[],kotlin.jvm.functions.Function1)
kotlin.UIntKt: int toUInt(byte)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(char[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CompletedContinuation: int hashCode()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.lang.Object putImpl(java.lang.Object,java.lang.Object,kotlinx.coroutines.debug.internal.HashedWeakRef)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOrThrow(java.lang.Comparable[])
kotlin.ULong: byte toUByte-w2LRezQ(long)
kotlin.jvm.internal.FloatCompanionObject: void getMIN_VALUE$annotations()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumOfDouble(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: float component2(float[])
kotlin.random.KotlinRandom: boolean nextBoolean()
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1: java.lang.Object invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
kotlinx.coroutines.flow.StartedLazily$command$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.sequences.SequenceBuilderIterator: SequenceBuilderIterator()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable minOf(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-C-E_24M(int[],java.lang.Object[])
kotlin.collections.builders.MapBuilderEntries: MapBuilderEntries(kotlin.collections.builders.MapBuilder)
kotlin.UByteArray: byte get-w2LRezQ(byte[],int)
androidx.work.CoroutineWorker: CoroutineWorker(android.content.Context,androidx.work.WorkerParameters)
kotlin.io.FilesKt__FileReadWriteKt: java.lang.String readText(java.io.File,java.nio.charset.Charset)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
kotlin.NumbersKt__NumbersKt: short takeHighestOneBit(short)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.Pair partition(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1: java.lang.Boolean invoke(boolean,kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector)
kotlin.io.ConsoleKt: void println(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minWithOrNull(java.lang.Object[],java.util.Comparator)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapIndexedTo--6EtJGI(int[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: ComparisonsKt___ComparisonsKt()
kotlin.UIntArray: java.util.Iterator iterator()
kotlinx.coroutines.scheduling.Task: int getMode$kotlinx_coroutines_core()
kotlin.collections.builders.MapBuilder: void removeKeyAt(int)
kotlinx.coroutines.EventLoopKt: boolean isIoDispatcherThread(java.lang.Thread)
kotlin.ULongArray: int getSize-impl(long[])
kotlin.collections.MutableMapWithDefaultImpl: int size()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(int[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
kotlin.ResultKt: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.StateFlow stateIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,java.lang.Object)
kotlin.text.StringsKt___StringsKt: char maxByOrThrow(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consume(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1)
kotlin.time.TimedValue: TimedValue(java.lang.Object,long)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getCLOSE_HANDLER_CLOSED$p()
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: CombineKt$combineInternal$2$1(kotlinx.coroutines.flow.Flow[],int,java.util.concurrent.atomic.AtomicInteger,kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object getOrElse(java.lang.Object[],int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: boolean handleJobException(java.lang.Throwable)
kotlinx.coroutines.InvokeOnCompletion: InvokeOnCompletion(kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: float tan(float)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: ChannelsKt__DeprecatedKt$elementAtOrNull$1(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: short[] sliceArray(short[],kotlin.ranges.IntRange)
kotlin.collections.ArraysKt___ArraysKt: double averageOfShort(java.lang.Short[])
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List parseFile(java.io.BufferedReader)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel: void getOnReceiveCatching$annotations()
kotlinx.coroutines.DelayWithTimeoutDiagnostics: java.lang.String timeoutMessage-LRDsOJo(long)
kotlin.text.StringsKt__StringsKt: java.lang.String trim(java.lang.String)
kotlin.collections.builders.ListBuilder: java.lang.Object set(int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean hasRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo)
kotlin.internal.PlatformImplementations: PlatformImplementations()
kotlinx.coroutines.sync.MutexImpl$onLock$2: MutexImpl$onLock$2()
kotlin.io.FileAlreadyExistsException: FileAlreadyExistsException(java.io.File,java.io.File,java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
kotlin.collections.SetsKt___SetsKt: java.util.Set minus(java.util.Set,java.lang.Object)
kotlin.collections.AbstractMutableMap: java.util.Collection values()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWithOrNull-l8EHGbQ(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: boolean access$isClosedForSend0(kotlinx.coroutines.channels.BufferedChannel,long)
kotlin.reflect.TypeVariableImpl: java.lang.reflect.Type[] getBounds()
kotlin.ranges.IntRange: boolean isEmpty()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt reduceIndexedOrNull-D40WMg8(int[],kotlin.jvm.functions.Function3)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(short,long)
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.CoroutineDispatcher access$getDispatcher$p(kotlinx.coroutines.internal.LimitedDispatcher)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-tAntMlw(int[],kotlin.ranges.IntRange)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(boolean[],boolean,int,int)
kotlinx.coroutines.flow.internal.ChannelFlowKt: java.lang.Object withContextUndispatched(kotlin.coroutines.CoroutineContext,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.UIntArray: int[] constructor-impl(int)
kotlin.ULongArray: java.util.Iterator iterator-impl(long[])
kotlin.io.path.OnErrorResult: OnErrorResult(java.lang.String,int)
kotlin.coroutines.CombinedContext$toString$1: java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.Ref$FloatRef: Ref$FloatRef()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
kotlin.collections.RingBuffer$iterator$1: void computeNext()
kotlinx.coroutines.flow.ChannelAsFlow: ChannelAsFlow(kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2: java.lang.Object invoke(kotlin.collections.IndexedValue)
kotlinx.coroutines.DisposeOnCancel: DisposeOnCancel(kotlinx.coroutines.DisposableHandle)
kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long component5-QwZRm1k(long[])
kotlin.collections.builders.SerializedMap: SerializedMap()
kotlinx.coroutines.EventLoop: void decrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object)
kotlin.jvm.internal.Lambda: java.lang.String toString()
kotlin.UByteArray$Iterator: void remove()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long maxWith(long[],java.util.Comparator)
kotlin.collections.AbstractList$IteratorImpl: int getIndex()
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] onEachIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2)
kotlin.Result$Companion: java.lang.Object failure(java.lang.Throwable)
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: boolean trySelect(java.lang.Object,java.lang.Object)
kotlinx.coroutines.DefaultExecutorKt: void getDefaultDelay$annotations()
kotlin.internal.jdk8.JDK8PlatformImplementations: kotlin.random.Random defaultPlatformRandom()
kotlin.collections.MapsKt__MapsKt: java.util.Map minus(java.util.Map,java.lang.Object)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: void collectIfThrows$PathsKt__PathRecursiveFunctionsKt(kotlin.io.path.ExceptionsCollector,kotlin.jvm.functions.Function0)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-JQknh5Q(byte[],java.lang.Iterable)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
kotlin.UInt: int compareTo-7apg3OU(int,byte)
kotlin.sequences.TakeSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TakeSequence)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.StringBuilder)
kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()
kotlin.time.ComparableTimeMark: int hashCode()
kotlinx.coroutines.debug.internal.DebuggerInfo: DebuggerInfo(kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterNot-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(int[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractList: java.util.ListIterator listIterator(int)
kotlin.ranges.ClosedDoubleRange: ClosedDoubleRange(double,double)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map groupBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.concurrent.TimersKt: java.util.Timer fixedRateTimer(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilder: MapBuilder(java.lang.Object[],java.lang.Object[],int[],int[],int,int)
kotlin.time.DurationKt: void getNanoseconds$annotations(int)
kotlin.io.FilePathComponents: int getSize()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
kotlinx.coroutines.TimeoutKt: java.lang.Object withTimeout-KLykuaI(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathReadWriteKt: java.util.List readLines(java.nio.file.Path,java.nio.charset.Charset)
kotlin.io.encoding.Base64: void checkSourceBounds$kotlin_stdlib(int,int,int)
kotlin.sequences.MergingSequence$iterator$1: java.lang.Object next()
kotlin.ResultKt: java.lang.Object onFailure(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3)
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry maxWithOrNull(java.util.Map,java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
kotlin.collections.EmptyList: java.lang.String toString()
kotlin.sequences.DropSequence$iterator$1: java.lang.Object next()
kotlin.collections.MapsKt__MapsKt: java.util.Map mapValues(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-us8wMrg(long[],long[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object)
kotlin.collections.MapsKt___MapsKt: java.lang.Comparable maxOfOrNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobKt__JobKt: boolean cancel(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1: kotlin.Pair invoke(java.lang.CharSequence,int)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void getSUCCESS$annotations()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.SendChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path setPosixFilePermissions(java.nio.file.Path,java.util.Set)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.SemaphoreImpl: boolean tryResumeAcquire(java.lang.Object)
kotlin.math.MathKt__MathJVMKt: int min(int,int)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: FlowKt__MergeKt$flattenConcat$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel$SendBroadcast: kotlinx.coroutines.CancellableContinuation getCont()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Object minWith(kotlin.sequences.Sequence,java.util.Comparator)
kotlinx.coroutines.JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext)
kotlin.collections.EmptyList: int indexOf(java.lang.Object)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
kotlin.UnsignedKt: int uintDivide-J1ME1BU(int,int)
kotlin.collections.CollectionsKt___CollectionsKt: void shuffle(java.util.List,kotlin.random.Random)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: void access$prepareReceiverForSuspension(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] toUByteArray(kotlin.UByte[])
kotlinx.coroutines.Dispatchers: Dispatchers()
kotlin.text.StringsKt___StringsJvmKt: char elementAt(java.lang.CharSequence,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.Collection filterIsInstanceTo(java.lang.Object[],java.util.Collection,java.lang.Class)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object processResultSelectReceiveCatching(java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.util.SortedSet toSortedSet(kotlin.sequences.Sequence,java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.UArraySortingKt: void sortArray-oBK06Vg(int[],int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort singleOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: boolean isEmpty()
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
kotlin.text.Typography: void getLeftGuillemete$annotations()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: boolean contains(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int indexOf(double)
kotlin.time.DurationKt: long access$durationOfNanosNormalized(long)
kotlin.collections.ArraysKt___ArraysKt: double[] onEach(double[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: int random(kotlin.ranges.IntRange,kotlin.random.Random)
kotlin.io.path.PathTreeWalkKt: boolean access$createsCycle(kotlin.io.path.PathNode)
kotlinx.coroutines.android.HandlerDispatcherKt: java.lang.Object awaitFrameSlowPath(kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object takeState$kotlinx_coroutines_core()
kotlin.UByte: boolean equals(java.lang.Object)
kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ULong: byte mod-7apg3OU(long,byte)
kotlin.Pair: java.lang.Object getSecond()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse--ajY-9A(int[])
kotlin.text.CharsKt__CharJVMKt: char toUpperCase(char)
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.StartedEagerly: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1: java.lang.Object get()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.ProducerScope: kotlinx.coroutines.channels.SendChannel getChannel()
kotlin.collections.AbstractList: void add(int,java.lang.Object)
kotlin.text.MatchGroup: int hashCode()
kotlin.io.encoding.StreamEncodingKt__Base64IOStreamKt: java.io.OutputStream encodingWith(java.io.OutputStream,kotlin.io.encoding.Base64)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence,int)
kotlin.ranges.URangesKt___URangesKt: long coerceIn-sambcqE(long,long,long)
kotlinx.coroutines.android.HandlerDispatcherKt: void postFrameCallback$lambda$6(kotlinx.coroutines.CancellableContinuation,long)
kotlinx.coroutines.CompletionHandlerKt: void invokeIt(kotlin.jvm.functions.Function1,java.lang.Throwable)
kotlin.collections.EmptyMap: java.lang.Object remove(java.lang.Object)
kotlin.UByteArray: boolean containsAll-impl(byte[],java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: void forEach(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.OnDemandAllocatingPool: OnDemandAllocatingPool(int,kotlin.jvm.functions.Function1)
kotlin.collections.builders.SetBuilder: boolean addAll(java.util.Collection)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: java.lang.Object get(int)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.Job getParent()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short elementAtOrElse-CVVdw08(short[],int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.ranges.UIntRange: int getEndExclusive-pVg5ArA()
kotlin.jvm.internal.IntCompanionObject: void getSIZE_BYTES$annotations()
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence reversed(java.lang.CharSequence)
kotlinx.coroutines.channels.ChannelSegment: void onCancellation(int,java.lang.Throwable,kotlin.coroutines.CoroutineContext)
kotlin.text.StringsKt___StringsJvmKt: java.lang.Character minWith(java.lang.CharSequence,java.util.Comparator)
kotlin.sequences.SubSequence$iterator$1: java.lang.Object next()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scan-zww5nb8(short[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.StartedWhileSubscribed: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(int[],kotlin.jvm.functions.Function1)
kotlin.text.Regex$splitToSequence$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] toUShortArray(short[])
kotlin.collections.CollectionsKt__MutableCollectionsKt: void minusAssign(java.util.Collection,java.lang.Object[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1: java.lang.Object invoke()
kotlin.text.MatcherMatchResult$groups$1: MatcherMatchResult$groups$1(kotlin.text.MatcherMatchResult)
kotlin.ResultKt: java.lang.Object recoverCatching(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] plus(short[],short)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: UArraysKt___UArraysJvmKt$asList$4(short[])
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: java.lang.Object get(int)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(double[],kotlin.jvm.functions.Function1)
kotlin.ranges.ULongRange: java.lang.Comparable getEndExclusive()
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.UByteArray: java.lang.Object[] toArray(java.lang.Object[])
kotlin.collections.ArrayAsCollection: boolean remove(java.lang.Object)
kotlin.text.MatcherMatchResult$groups$1$iterator$1: MatcherMatchResult$groups$1$iterator$1(kotlin.text.MatcherMatchResult$groups$1)
kotlin.collections.AbstractMutableSet: int getSize()
kotlinx.coroutines.NonDisposableHandle: boolean childCancelled(java.lang.Throwable)
kotlin.UShortArray: boolean add-xj2QHRw(short)
kotlinx.coroutines.JobSupport: java.lang.Void loopOnState(kotlin.jvm.functions.Function1)
kotlin.collections.EmptyMap: void clear()
kotlin.UShort: byte toByte-impl(short)
kotlin.collections.ArraysKt___ArraysKt: char maxByOrThrow(char[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,int,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
kotlinx.coroutines.internal.DispatchedContinuation: void resumeCancellableWith$kotlinx_coroutines_core(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.DeepRecursiveScope: java.lang.Object callRecursive(kotlin.DeepRecursiveFunction,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void usePrivateScheduler$kotlinx_coroutines_core()
kotlin.time.Duration: void getInMicroseconds$annotations()
kotlin.UByte: int hashCode()
kotlin.io.path.PathsKt__PathUtilsKt: kotlin.sequences.Sequence walk(java.nio.file.Path,kotlin.io.path.PathWalkOption[])
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from(android.os.Handler,java.lang.String)
kotlin.reflect.KTypeProjection: kotlin.reflect.KType component2()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
kotlin.io.LinesSequence$iterator$1: boolean hasNext()
kotlin.UShortArray: boolean retainAll(java.util.Collection)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: SafeCollector_commonKt$checkContext$result$1(kotlinx.coroutines.flow.internal.SafeCollector)
kotlin.UShort: int toInt-impl(short)
kotlin.reflect.KProperty1: java.lang.Object getDelegate(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(byte[])
kotlin.UnsafeLazyImpl: boolean isInitialized()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
kotlin.sequences.SequencesKt___SequencesKt: int sumBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectClause0Impl: SelectClause0Impl(java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5(kotlin.sequences.Sequence)
kotlin.io.encoding.EncodeOutputStream: int encodeIntoOutput(byte[],int,int)
kotlin.collections.AbstractMutableMap: java.util.Set keySet()
kotlin.jvm.internal.PropertyReference2: PropertyReference2(java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.time.Duration$Companion: void getDays-UwyO8pc$annotations(double)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfShort(java.lang.Iterable)
kotlin.ranges.UIntRange: boolean isEmpty()
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean component1(boolean[])
kotlinx.coroutines.ThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Key)
kotlin.io.encoding.Base64: int skipIllegalSymbolsIfMime(byte[],int,int)
kotlin.collections.ArraysKt___ArraysKt: byte reduceIndexed(byte[],kotlin.jvm.functions.Function3)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigInteger sumOfBigInteger(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)
kotlin.collections.builders.MapBuilderValues: boolean contains(java.lang.Object)
kotlin.streams.jdk8.StreamsKt: java.util.List toList(java.util.stream.Stream)
kotlin.text.StringsKt___StringsKt: java.lang.Comparable maxOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractList$ListIteratorImpl: java.lang.Object previous()
kotlin.collections.EmptyMap: java.util.Set entrySet()
kotlin.math.MathKt__MathJVMKt: void getAbsoluteValue$annotations(int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.URangesKt___URangesKt: boolean contains-ZsK3CEQ(kotlin.ranges.UIntRange,short)
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass createKotlinClass(java.lang.Class)
kotlin.UShortKt: short toUShort(byte)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)
kotlinx.coroutines.CoroutineDispatcher: java.lang.String toString()
kotlinx.coroutines.channels.BroadcastKt$broadcast$1: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlin.ranges.IntRange$Companion: IntRange$Companion()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.concurrent.TimersKt: java.util.TimerTask schedule(java.util.Timer,long,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(char[])
kotlin.time.Duration$Companion: void getMilliseconds-UwyO8pc$annotations(int)
kotlinx.coroutines.InterruptibleKt: java.lang.Object runInterruptible(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
kotlin.collections.ReversedListReadOnly: ReversedListReadOnly(java.util.List)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Object[])
kotlin.text.StringsKt___StringsKt$withIndex$1: StringsKt___StringsKt$withIndex$1(java.lang.CharSequence)
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: void disposeAll()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(short[],int)
kotlin.time.Duration$Companion: long seconds-UwyO8pc(int)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$3: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: CombineKt$zipImpl$1$1$2$1(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3)
kotlin.io.path.PathTreeWalk: boolean getIncludeDirectories()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object findLast(java.util.List,kotlin.jvm.functions.Function1)
kotlin.time.Duration$Companion: long getMinutes-UwyO8pc(long)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyOf(short[],int)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(java.lang.Iterable,kotlin.jvm.functions.Function3)
kotlin.NumbersKt__FloorDivModKt: short mod(int,short)
kotlin.comparisons.ReverseOrderComparator: int compare(java.lang.Object,java.lang.Object)
androidx.work.impl.utils.NetworkApi21: void unregisterNetworkCallbackCompat(android.net.ConnectivityManager,android.net.ConnectivityManager$NetworkCallback)
kotlin.jvm.JvmSuppressWildcards: boolean suppress()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1: FlowKt__ZipKt$combineTransform$6$1(kotlinx.coroutines.flow.Flow[])
kotlin.time.Duration: double getInHours-impl(long)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.internal.Symbol tryResumeImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
kotlin.sequences.SequencesKt___SequencesKt$distinct$1: java.lang.Object invoke(java.lang.Object)
kotlin.NumbersKt__NumbersJVMKt: int toRawBits(float)
kotlin.time.Duration$Companion: long milliseconds-UwyO8pc(long)
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1: CollectionsKt___CollectionsKt$withIndex$1(java.lang.Iterable)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlin.ULong: long minus-7apg3OU(long,byte)
kotlinx.coroutines.internal.StackTraceRecoveryKt: kotlin.Pair causeAndStacktrace(java.lang.Throwable)
kotlinx.coroutines.flow.SharedFlowImpl: boolean tryEmitNoCollectorsLocked(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2)
kotlin.sequences.TransformingSequence$iterator$1: java.util.Iterator getIterator()
kotlinx.coroutines.internal.ThreadSafeHeap: boolean isEmpty()
kotlin.collections.ByteIterator: ByteIterator()
kotlinx.coroutines.JobSupport$Finishing: boolean isCompleting()
kotlin.jvm.internal.Ref$CharRef: Ref$CharRef()
kotlin.collections.CollectionsKt__IterablesKt: java.lang.Iterable Iterable(kotlin.jvm.functions.Function0)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy[] values()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.text.StringsKt___StringsKt: java.lang.Character reduceRightIndexedOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: float component3(float[])
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1: WhileSelectKt$whileSelect$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler: int getAvailableCpuPermits()
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(long[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.coroutines.CombinedContext: boolean containsAll(kotlin.coroutines.CombinedContext)
kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1: FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1(kotlinx.coroutines.channels.BroadcastChannel)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte maxByOrNull(byte[],kotlin.jvm.functions.Function1)
androidx.work.Worker: Worker(android.content.Context,androidx.work.WorkerParameters)
kotlin.ResultKt: java.lang.Object map(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.UInt: int plus-WZ4Q5Ns(int,int)
kotlin.experimental.BitwiseOperationsKt: byte inv(byte)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2: kotlin.io.path.CopyActionResult invoke(kotlin.io.path.CopyActionContext,java.nio.file.Path,java.nio.file.Path)
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: BroadcastChannelImpl$send$1(kotlinx.coroutines.channels.BroadcastChannelImpl,kotlin.coroutines.Continuation)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
kotlinx.coroutines.internal.Removed: Removed(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.JobSupport$Finishing: java.util.ArrayList allocateList()
kotlinx.coroutines.channels.LazyActorCoroutine: kotlinx.coroutines.selects.SelectClause2 getOnSend()
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
kotlin.random.Random: double nextDouble(double)
kotlin.RequiresOptIn$Level: kotlin.RequiresOptIn$Level[] values()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(char[],char,int,int)
kotlin.ranges.IntProgression: int getFirst()
kotlin.jvm.internal.PropertyReference0Impl: java.lang.Object get()
kotlin.collections.ArraysKt___ArraysKt: byte maxOrThrow(byte[])
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow zip(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
kotlin.UShortArray: void clear()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(boolean[],kotlin.jvm.functions.Function1)
kotlin.UByte: short mod-xj2QHRw(byte,short)
kotlin.jvm.internal.PropertyReference0: java.lang.Object getDelegate()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUnintercepted(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel: void updateReceiversCounterIfLower(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object unbox-impl()
kotlin.time.AbstractLongTimeSource$LongTimeMark: boolean hasNotPassedNow()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlowMerge: ChannelFlowMerge(kotlinx.coroutines.flow.Flow,int,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.sequences.DropWhileSequence$iterator$1: java.lang.Object getNextItem()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl: int getLayoutDirection(android.content.res.Configuration)
kotlin.time.Duration$Companion: long getDays-UwyO8pc(int)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,byte)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: FlowKt__TransformKt$runningFold$1$1(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
kotlin.UShort: long times-VKZWuLQ(short,long)
kotlin.ranges.CharRange: java.lang.Character getEndExclusive()
kotlin.UShortArray$Iterator: java.lang.Object next()
kotlin.text.CharCategory$Companion: kotlin.text.CharCategory valueOf(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: FlowKt__ZipKt$combine$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object singleOrNull(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArrayAsCollection: boolean removeAll(java.util.Collection)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: short toShort(java.lang.String,int)
kotlin.UInt: short toShort-impl(int)
kotlin.UShortArray: short[] constructor-impl(int)
kotlinx.coroutines.JobSupport: java.lang.Object awaitSuspend(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.StringBuffer)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long updateTail(long,int)
kotlinx.coroutines.selects.SelectImplementation: boolean trySelect(java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
kotlin.collections.SetsKt__SetsKt: java.util.Set setOf()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] toIntArray--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt: double maxOf(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: FlowKt__ErrorsKt$retry$3(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(java.lang.Object[],kotlin.random.Random)
kotlin.UShortArray: int hashCode-impl(short[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short maxBy(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
kotlin.time.ComparableTimeMark: long minus-UwyO8pc(kotlin.time.ComparableTimeMark)
kotlin.collections.MapsKt__MapsKt: java.util.Map mutableMapOf(kotlin.Pair[])
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
kotlin.UNumbersKt: int countOneBits-7apg3OU(byte)
kotlinx.coroutines.internal.LimitedDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filter$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(double[],kotlin.jvm.functions.Function2)
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function2 access$getOnFail$p(kotlin.io.FileTreeWalk)
kotlin.math.MathKt__MathJVMKt: double atanh(double)
kotlin.UInt: int hashCode()
kotlin.random.KotlinRandom: void nextBytes(byte[])
kotlinx.coroutines.channels.BufferedChannelKt: long initialBufferEnd(int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind[] $values()
kotlin.text.CharsKt__CharKt: CharsKt__CharKt()
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyOf(double[],int)
kotlin.text.Regex$splitToSequence$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(float[])
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Comparable max(kotlin.sequences.Sequence)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList getList()
kotlin.jvm.internal.Intrinsics: void throwNpe()
kotlin.io.FileTreeWalk: java.io.File access$getStart$p(kotlin.io.FileTreeWalk)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character reduceRightOrNull(char[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.CoroutineScopeKt: java.lang.Object currentCoroutineContext$$forInline(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(float[],kotlin.ranges.IntRange)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(char[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable maxOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.coroutines.CombinedContext: int size()
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte last-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$minus$1: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(byte[])
kotlin.reflect.TypesJVMKt: java.lang.reflect.Type getJavaType(kotlin.reflect.KTypeProjection)
kotlin.jvm.internal.FunInterfaceConstructorReference: kotlin.reflect.KFunction getReflected()
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence flatten$SequencesKt__SequencesKt(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BroadcastCoroutine: boolean isClosedForSend()
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
kotlinx.coroutines.channels.SendChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlin.collections.RingBuffer: kotlin.collections.RingBuffer expanded(int)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounce(kotlinx.coroutines.flow.Flow,long)
kotlin.Result: boolean equals(java.lang.Object)
kotlin.UIntArrayKt: int[] uintArrayOf--ajY-9A(int[])
kotlin.time.LongSaturatedMathKt: long saturatingDiff(long,long)
kotlin.UByte: int compareTo-7apg3OU(byte)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filterIsInstance(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull()
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] $values()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
kotlin.NumbersKt__NumbersJVMKt: boolean isNaN(float)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.ULong minWith-zrEWJaI(long[],java.util.Comparator)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void sort(java.util.List)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.math.BigInteger sumOfBigInteger(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LimitedDispatcher$Worker: void run()
kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1: SequencesKt___SequencesKt$minus$4$iterator$1(java.util.List)
kotlin.io.ByteStreamsKt: java.io.OutputStreamWriter writer(java.io.OutputStream,java.nio.charset.Charset)
kotlinx.coroutines.flow.ThrowingCollector: ThrowingCollector(java.lang.Throwable)
kotlin._Assertions: _Assertions()
kotlin.io.encoding.Base64: java.lang.Appendable encodeToAppendable(byte[],java.lang.Appendable,int,int)
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: char minByOrThrow(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectImplementation: void reregisterClause(java.lang.Object)
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void isEmpty$annotations()
kotlinx.coroutines.ThreadPoolDispatcherKt__MultithreadedDispatchers_commonKt: kotlinx.coroutines.ExecutorCoroutineDispatcher newSingleThreadContext(java.lang.String)
kotlin.sequences.DropWhileSequence$iterator$1: void setDropState(int)
kotlin.reflect.KTypeProjection: int hashCode()
kotlin.collections.ByteIterator: java.lang.Object next()
kotlinx.coroutines.channels.ProducerCoroutine: void onCancelled(java.lang.Throwable,boolean)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object waitUntilSelected(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long singleOrNull(long[])
kotlinx.coroutines.selects.SelectUnbiasedKt: java.lang.Object selectUnbiased$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.ranges.CharRange: int hashCode()
kotlinx.coroutines.internal.LockFreeTaskQueue: java.util.List map(kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: boolean any(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void reverse(java.lang.Object[],int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int minWithOrThrow-U(int[],java.util.Comparator)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object maxWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)
kotlin.sequences.TakeWhileSequence$iterator$1: void setNextItem(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyInto(boolean[],boolean[],int,int,int)
kotlin.NumbersKt__BigIntegersKt: java.math.BigDecimal toBigDecimal(java.math.BigInteger,int,java.math.MathContext)
kotlin.time.Duration: boolean isInMillis-impl(long)
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceAtLeast(java.lang.Comparable,java.lang.Comparable)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.ChannelIterator iterator()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$receiveCatchingOnNoWaiterSuspend-GKJJFZk(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation)
kotlinx.coroutines.future.FutureKt$await$2$1: void invoke(java.lang.Throwable)
kotlin.NumbersKt__NumbersKt: int countLeadingZeroBits(byte)
kotlin.random.PlatformRandomKt: kotlin.random.Random defaultPlatformRandom()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.util.Iterator keyValueIterator(kotlin.jvm.functions.Function2)
kotlin.sequences.DropWhileSequence$iterator$1: void drop()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-2csIQuQ(byte[])
kotlinx.coroutines.flow.SharedFlowImpl: kotlin.coroutines.Continuation[] updateCollectorIndexLocked$kotlinx_coroutines_core(long)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Deferred async(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] onEachIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong randomOrNull-JzugnMA(long[],kotlin.random.Random)
kotlin.collections.ArraysKt__ArraysKt: kotlin.Pair unzip(kotlin.Pair[])
kotlin.ULong: long or-VKZWuLQ(long,long)
kotlinx.coroutines.CompletedContinuation: kotlin.jvm.functions.Function1 component3()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.EmptySet: boolean retainAll(java.util.Collection)
kotlin.sequences.SequencesKt___SequencesKt$elementAt$1: SequencesKt___SequencesKt$elementAt$1(int)
kotlin.collections.BooleanIterator: BooleanIterator()
kotlin.collections.IndexedValue: kotlin.collections.IndexedValue copy(int,java.lang.Object)
kotlin.random.Random: int nextInt()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfULong(int[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: boolean all(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.SemaphoreImpl$tryResumeNextFromQueue$createNewSegment$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: ChannelsKt__DeprecatedKt$filterNot$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Comparable min(kotlin.sequences.Sequence)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumes$1: ChannelsKt__DeprecatedKt$consumes$1(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.collections.ArraysKt___ArraysKt: long component4(long[])
kotlinx.coroutines.channels.BufferedChannel$sendImpl$1: BufferedChannel$sendImpl$1()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List requireNoNulls(java.util.List)
kotlin.reflect.TypeVariableImpl: TypeVariableImpl(kotlin.reflect.KTypeParameter)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: float minOf(float,float[])
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3)
kotlin.collections.builders.MapBuilder$Companion: int access$computeShift(kotlin.collections.builders.MapBuilder$Companion,int)
kotlin.collections.builders.ListBuilder$Itr: void set(java.lang.Object)
kotlinx.coroutines.ResumeOnCompletion: void invoke(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.UNumbersKt: int countLeadingZeroBits-VKZWuLQ(long)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.builders.AbstractMapBuilderEntrySet: boolean containsEntry(java.util.Map$Entry)
kotlin.reflect.KFunction: boolean isSuspend()
kotlin.text.UStringsKt: int toUInt(java.lang.String)
kotlinx.coroutines.NonCancellable: void cancel(java.util.concurrent.CancellationException)
kotlinx.coroutines.flow.SharedFlowImpl: kotlin.coroutines.Continuation[] access$findSlotsToResumeLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlin.coroutines.Continuation[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void beforeTask(int)
kotlinx.coroutines.stream.StreamKt: kotlinx.coroutines.flow.Flow consumeAsFlow(java.util.stream.Stream)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow filterNotNull(kotlinx.coroutines.flow.Flow)
kotlin.collections.EmptyList: int size()
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.jvm.internal.TypeReference: java.lang.String asString(kotlin.reflect.KTypeProjection)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: java.lang.Object hasNextOnNoWaiterSuspend(kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation)
kotlinx.coroutines.future.FutureKt: java.lang.Object asDeferred$lambda$4(kotlin.jvm.functions.Function2,java.lang.Object,java.lang.Throwable)
kotlin.collections.builders.MapBuilder: java.lang.Object writeReplace()
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1: FlowKt__LimitKt$collectWhile$collector$1(kotlin.jvm.functions.Function2)
kotlin.text.StringsKt___StringsKt: java.util.List flatMapIndexedIterable(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List chunked(java.lang.Iterable,int)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(double[])
kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow)
kotlin.io.TextStreamsKt: kotlin.sequences.Sequence lineSequence(java.io.BufferedReader)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.DelayKt: kotlinx.coroutines.Delay getDelay(kotlin.coroutines.CoroutineContext)
kotlin.ULongArray: void set-k8EXiF4(long[],int,long)
kotlin.text.StringsKt___StringsKt: java.util.List map(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,int,boolean,int,java.lang.Object)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow transformLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collectWithContextUndispatched(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlin.collections.ReversedList: java.lang.Object set(int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double averageOfFloat(java.lang.Float[])
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: FlowKt__DelayKt$sample$2$values$1(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.LazyKt: LazyKt()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
kotlin.sequences.TakeSequence$iterator$1: boolean hasNext()
kotlin.collections.builders.ListBuilder: java.lang.Object removeAt(int)
kotlin.collections.MapWithDefault: java.lang.Object getOrImplicitDefault(java.lang.Object)
kotlin.ULong: ULong(long)
kotlinx.coroutines.channels.BufferedChannelKt: long access$constructSendersAndCloseStatus(long,int)
kotlinx.coroutines.ResumeOnCompletion: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.InactiveNodeList: boolean isActive()
kotlin.jvm.internal.ClassReference: java.util.Collection getConstructors()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable unwrap(java.lang.Throwable)
kotlin.ranges.URangesKt___URangesKt: int coerceAtLeast-J1ME1BU(int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(double[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],double[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(double[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: short[] toShortArray(java.util.Collection)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: int minOf(int,int,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.UIntRange: java.lang.Comparable getEndExclusive()
kotlin.time.Duration$Companion: long hours-UwyO8pc(double)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBeforeLast(java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMapConcat(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEach-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow catch(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.work.impl.utils.NetworkApi21: boolean hasCapabilityCompat(android.net.NetworkCapabilities,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection flatMapIndexedIterableTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1: FlowKt__MergeKt$flattenConcat$1$1(kotlinx.coroutines.flow.FlowCollector)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: byte toByte(java.lang.String,int)
kotlinx.coroutines.channels.ChannelResult$Closed: java.lang.String toString()
kotlin.UInt: int and-WZ4Q5Ns(int,int)
kotlin.collections.ArraysKt___ArraysKt: short maxByOrThrow(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(int[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand valueOf(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.io.path.PathTreeWalk: java.util.Iterator iterator()
kotlin.io.encoding.Base64: byte[] decode(byte[],int,int)
kotlin.io.FilePathComponents: int hashCode()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: byte minOf(byte,byte[])
kotlin.ULong: byte toByte-impl(long)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(double[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.TimeoutCancellationException: TimeoutCancellationException(java.lang.String)
kotlin.jvm.internal.MutablePropertyReference2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.UInt: int plus-7apg3OU(int,byte)
kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob(kotlinx.coroutines.Job)
kotlin.ranges.URangesKt___URangesKt: byte coerceAtMost-Kr8caGY(byte,byte)
kotlin.collections.ArraysKt___ArraysKt: float maxOf(char[],kotlin.jvm.functions.Function1)
kotlin.sequences.MergingSequence: MergingSequence(kotlin.sequences.Sequence,kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.AtomicOp: kotlinx.coroutines.internal.AtomicOp getAtomicOp()
kotlin.collections.CharIterator: void remove()
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.LazyActorCoroutine: void onSendRegFunction(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,byte)
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyOfRange(char[],int,int)
kotlinx.coroutines.CoroutineStart: boolean isLazy()
kotlinx.coroutines.JobNode: kotlinx.coroutines.JobSupport getJob()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.EmptySet: boolean contains(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.ArrayCharIterator: char nextChar()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequenceBuilderIterator: void setNextStep(kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.Object useDirectoryEntries(java.nio.file.Path,java.lang.String,kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(long)
kotlin.ranges.UIntRange$Companion: UIntRange$Companion()
kotlin.jvm.internal.ClassReference: java.util.List getSealedSubclasses()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object onClosedSend(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.reflect.KTypeParameter: java.lang.String getName()
kotlin.text.StringsKt___StringsKt: char random(java.lang.CharSequence,kotlin.random.Random)
kotlin.experimental.BitwiseOperationsKt: byte xor(byte,byte)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow retryWhen(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.collections.builders.AbstractMapBuilderEntrySet: boolean remove(java.util.Map$Entry)
kotlin.coroutines.CombinedContext$toString$1: CombinedContext$toString$1()
kotlin.collections.builders.MapBuilderKeys: boolean remove(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment access$findSegmentReceive(kotlinx.coroutines.channels.BufferedChannel,long,kotlinx.coroutines.channels.ChannelSegment)
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.LimitedDispatcher: java.lang.Object delay(long,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.SystemPropsKt: boolean systemProp(java.lang.String,boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: ChannelsKt__DeprecatedKt$last$1(kotlin.coroutines.Continuation)
kotlin.jvm.internal.FunInterfaceConstructorReference: FunInterfaceConstructorReference(java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.TypeAliasesKt: void LinkedHashMap$annotations()
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith$default(java.lang.String,java.lang.String,int,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(float[],float,int,int)
kotlin.collections.ArraysKt___ArraysKt: float maxWithOrThrow(float[],java.util.Comparator)
androidx.work.impl.background.systemjob.SystemJobService$Api24Impl: android.net.Uri[] getTriggeredContentUris(android.app.job.JobParameters)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: SafeCollector_commonKt$unsafeFlow$1$collect$1(kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlin.random.jdk8.PlatformThreadLocalRandom: double nextDouble(double)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveCatching-JP2dKIU$suspendImpl(kotlinx.coroutines.channels.BufferedChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: ChannelLimitedFlowMerge(java.lang.Iterable,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.MapWithDefaultImpl: java.util.Set entrySet()
kotlin.collections.builders.MapBuilder: void ensureCapacity(int)
kotlinx.coroutines.internal.ThreadSafeHeapNode: void setIndex(int)
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.ExecutorCoroutineDispatcher: java.util.concurrent.Executor getExecutor()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer minByOrNull(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlin.text.DelimitedRangesSequence: java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence)
kotlin.ranges.RangesKt___RangesKt: java.lang.Character randomOrNull(kotlin.ranges.CharRange)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(short[],java.lang.Iterable)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.lang.Object get(java.lang.Object)
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot: AbstractSharedFlowSlot()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.math.MathKt__MathJVMKt: long max(long,long)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeSuffix(java.lang.CharSequence,java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(long[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatten(kotlinx.coroutines.flow.Flow)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map groupByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.coroutines.SafeContinuation$Companion: void getRESULT$annotations()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow scanFold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.time.TimeKt: java.lang.Object delay(java.time.Duration,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(short[])
kotlin.time.TimedValue: java.lang.Object getValue()
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence slice(java.lang.CharSequence,kotlin.ranges.IntRange)
kotlin.jvm.internal.TypeIntrinsics: java.util.List asMutableList(java.lang.Object)
kotlinx.coroutines.channels.BroadcastChannelImpl: int getCapacity()
kotlinx.coroutines.channels.LazyActorCoroutine: java.lang.Object trySend-JP2dKIU(java.lang.Object)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.KotlinVersion: boolean equals(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle-rL5Bavg(short[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Boolean[] toTypedArray(boolean[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(short[])
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention[] values()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1: java.util.Iterator iterator()
kotlinx.coroutines.AbstractTimeSource: long currentTimeMillis()
kotlin.coroutines.CombinedContext: int hashCode()
kotlin.collections.SetsKt___SetsKt: java.util.Set plus(java.util.Set,java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: DebugCoroutineInfoImpl$yieldFrames$1(kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1: FlowKt__MergeKt$flatMapConcat$$inlined$map$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
kotlin.UInt: long toULong-s-VKNKU(int)
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: ChannelFlowOperatorImpl(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int count-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: char first(char[])
kotlin.collections.ArraysKt___ArraysKt: void shuffle(long[],kotlin.random.Random)
kotlin.reflect.KVariance: KVariance(java.lang.String,int)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.Object[])
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlin.jvm.internal.PropertyReference: java.lang.String toString()
kotlinx.coroutines.selects.SelectClause1Impl: SelectClause1Impl(java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double maxOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.ranges.CharProgression: java.lang.String toString()
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger xor(java.math.BigInteger,java.math.BigInteger)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: SchedulerCoroutineDispatcher()
kotlin.text.StringsKt___StringsKt: java.util.List mapIndexedNotNull(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(float[],float,int,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(boolean[],boolean,int,int,int,java.lang.Object)
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow catch(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function3)
kotlin.UByteArray: boolean retainAll(java.util.Collection)
kotlin.ranges.URangesKt___URangesKt: long first(kotlin.ranges.ULongProgression)
kotlinx.coroutines.internal.StackTraceRecoveryKt: boolean isArtificial(java.lang.StackTraceElement)
kotlin.UShort: int times-7apg3OU(short,byte)
kotlinx.coroutines.DispatchedCoroutine: void loop$atomicfu(java.util.concurrent.atomic.AtomicIntegerFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.collections.SetsKt: SetsKt()
androidx.core.view.ViewCompat$Api29Impl: void setContentCaptureSession(android.view.View,android.view.contentcapture.ContentCaptureSession)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedNotNullTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUInt(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.ArrayAsCollection: boolean addAll(java.util.Collection)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.List map(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: FlowKt__ReduceKt$reduce$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__LimitKt: java.lang.Object collectWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.text.Charsets: Charsets()
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,java.lang.Iterable)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.random.Random: byte[] nextBytes$default(kotlin.random.Random,byte[],int,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2: FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2(kotlinx.coroutines.flow.FlowCollector,kotlin.reflect.KClass)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-FGO6Aew(short[],short[])
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$processResultSelectReceiveOrNull(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double[] sliceArray(double[],kotlin.ranges.IntRange)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1()
kotlin.text.MatcherMatchResult$groups$1$iterator$1: kotlin.text.MatchGroup invoke(int)
kotlin.text.StringsKt__StringsKt: java.lang.Boolean toBooleanStrictOrNull(java.lang.String)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getCore$FU$p()
kotlin.jvm.internal.PropertyReference0: kotlin.reflect.KProperty0$Getter getGetter()
kotlinx.coroutines.scheduling.DefaultScheduler: void shutdown$kotlinx_coroutines_core()
kotlin.collections.unsigned.UArraysKt___UArraysKt: double minOf-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.TypeAliasesKt: void Comparator$annotations()
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow withIndex(kotlinx.coroutines.flow.Flow)
kotlin.collections.builders.MapBuilderKeys: MapBuilderKeys(kotlin.collections.builders.MapBuilder)
kotlinx.coroutines.TimeoutCancellationException: TimeoutCancellationException(java.lang.String,kotlinx.coroutines.Job)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.JobSupport: void cancel(java.util.concurrent.CancellationException)
kotlin.concurrent.TimersKt: java.util.TimerTask scheduleAtFixedRate(java.util.Timer,long,long,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.properties.Delegates: Delegates()
kotlin.jvm.functions.Function19: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: java.lang.String toString()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(char[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(int,java.math.MathContext)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-d-6D3K8(short[])
kotlin.collections.builders.SerializedCollection: SerializedCollection(java.util.Collection,int)
kotlin.KotlinVersion: int getMajor()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] copyOf-qFRl0hI(int[],int)
kotlin.jvm.internal.ArrayDoubleIterator: ArrayDoubleIterator(double[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: long single-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.internal.jdk8.JDK8PlatformImplementations: boolean sdkIsNullOrAtLeast(int)
kotlin.reflect.KClass$DefaultImpls: void isOpen$annotations()
kotlin.ranges.CharProgression$Companion: CharProgression$Companion()
kotlin.ranges.UIntRange: void getEndExclusive-pVg5ArA$annotations()
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1: FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobSupport$Finishing: void setRootCause(java.lang.Throwable)
kotlin.sequences.SequencesKt___SequencesKt: boolean contains(kotlin.sequences.Sequence,java.lang.Object)
kotlin.StandardKt__StandardKt: java.lang.Void TODO(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-nl983wc(byte[],java.lang.Object[])
kotlin.sequences.SequencesKt___SequencesKt: long sumOfLong(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOrNull(java.lang.Comparable[])
kotlin.ranges.UIntProgression: int hashCode()
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(char[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong findLast-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.text.MatcherMatchResult$groups$1: boolean contains(kotlin.text.MatchGroup)
kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAtOrNull(java.lang.Iterable,int)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$withIndex$3: java.lang.Object invoke()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] asUShortArray(short[])
kotlin.coroutines.jvm.internal.DebugMetadataKt: int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: AbstractDoubleTimeSource$DoubleTimeMark(double,kotlin.time.AbstractDoubleTimeSource,long,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.coroutines.SafeContinuation: SafeContinuation(kotlin.coroutines.Continuation,java.lang.Object)
kotlin.ExceptionsKt__ExceptionsKt: java.util.List getSuppressedExceptions(java.lang.Throwable)
kotlin.collections.AbstractList: boolean equals(java.lang.Object)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void close()
kotlin.ranges.UIntProgression: UIntProgression(int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(char[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(byte[])
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,boolean)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
kotlin.ULong: int compareTo-VKZWuLQ(long)
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.EventLoopKt: kotlinx.coroutines.EventLoop createEventLoop()
kotlin.collections.ArraysKt___ArraysKt: boolean any(boolean[])
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2: FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(long[],kotlin.jvm.functions.Function1)
kotlin.reflect.KCallable: boolean isOpen()
kotlin.coroutines.SafeContinuation: kotlin.coroutines.CoroutineContext getContext()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(int[],int,int,int)
kotlinx.coroutines.scheduling.CoroutineScheduler: long releaseCpuPermit()
kotlin.collections.ArraysKt___ArraysKt: long first(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void updateState(kotlin.coroutines.Continuation,java.lang.String)
kotlin.io.path.PathTreeWalk: java.util.Iterator bfsIterator()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: boolean contains-WZ4Q5Ns(int)
kotlin.text.StringsKt___StringsKt: char maxWithOrThrow(java.lang.CharSequence,java.util.Comparator)
kotlin.sequences.DropSequence$iterator$1: boolean hasNext()
kotlin.collections.ArraysKt___ArraysKt: boolean first(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1: java.lang.Object keyOf(java.lang.Object)
kotlin.ULong: long rem-7apg3OU(long,byte)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
kotlin.time.Duration$Companion: long minutes-UwyO8pc(double)
kotlin.io.FilesKt__UtilsKt: java.io.File resolveSibling(java.io.File,java.io.File)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List createListBuilder()
kotlin.collections.AbstractMap: boolean containsValue(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function7)
kotlin.collections.ArraysKt___ArraysKt: boolean any(short[])
kotlin.collections.ArraysKt___ArraysKt: boolean single(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlin.math.MathKt__MathJVMKt: float hypot(float,float)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: void clear()
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Short toShortOrNull(java.lang.String,int)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
kotlin.random.FallbackThreadLocalRandom: FallbackThreadLocalRandom()
kotlinx.coroutines.flow.FlowKt: java.lang.Object first(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.LazyActorCoroutine$onSend$1: LazyActorCoroutine$onSend$1()
kotlin.UnsignedKt: int doubleToUInt(double)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.NumbersKt__NumbersJVMKt: double fromBits(kotlin.jvm.internal.DoubleCompanionObject,long)
kotlin.io.FilesKt__UtilsKt: java.io.File copyTo(java.io.File,java.io.File,boolean,int)
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyOfRangeInline(double[],int,int)
kotlin.coroutines.CombinedContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.SharedFlowImpl: long access$getHead(kotlinx.coroutines.flow.SharedFlowImpl)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow unsafeTransform(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__MigrationKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__AppendableKt: StringsKt__AppendableKt()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(float[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: java.lang.Object reduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.UShort: int compareTo(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(float[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(long[])
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOfNotNull(java.lang.Object)
kotlin.collections.builders.MapBuilder: void checkIsMutable$kotlin_stdlib()
kotlin.collections.ArraysKt___ArraysKt: short[] reversedArray(short[])
kotlinx.coroutines.JobSupport$Finishing: java.lang.String toString()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxOfWithOrNull(java.lang.Iterable,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: ArraysKt___ArraysJvmKt()
kotlin.collections.ArrayDeque: java.lang.Object last()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle-GBYM_sE(byte[])
kotlin.sequences.DropSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.DropSequence)
kotlin.collections.CollectionsKt__MutableCollectionsKt: void plusAssign(java.util.Collection,kotlin.sequences.Sequence)
kotlin.sequences.MergingSequence$iterator$1: MergingSequence$iterator$1(kotlin.sequences.MergingSequence)
kotlin.io.path.FileVisitorBuilderImpl: java.nio.file.FileVisitor build()
kotlin.UByteArray: int hashCode()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UShort min-rL5Bavg(short[])
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key()
kotlin.collections.ArraysKt___ArraysKt: int single(int[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(boolean[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: void access$setReceiveResult$p(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator,java.lang.Object)
kotlin.HashCodeKt: int hashCode(java.lang.Object)
kotlinx.coroutines.channels.BroadcastCoroutine: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: float minOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.io.encoding.Base64: Base64(boolean,boolean,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.ExceptionsKt: java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlin.jvm.functions.Function1 consumesAll(kotlinx.coroutines.channels.ReceiveChannel[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(char[],int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(boolean[],java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt: java.lang.Object singleOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: int count(short[],kotlin.jvm.functions.Function1)
kotlin.io.FilePathComponents: FilePathComponents(java.io.File,java.util.List)
kotlin.ULongArray: int size()
kotlin.collections.ArraysKt___ArraysKt: int single(int[],kotlin.jvm.functions.Function1)
kotlin.sequences.SubSequence: int getCount()
kotlin.collections.CollectionsKt__MutableCollectionsKt: void plusAssign(java.util.Collection,java.lang.Object[])
kotlinx.coroutines.channels.BufferedChannel: boolean isCellNonEmpty(kotlinx.coroutines.channels.ChannelSegment,int,long)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filterIsInstance(kotlinx.coroutines.flow.Flow,kotlin.reflect.KClass)
kotlin.jvm.internal.BooleanCompanionObject: BooleanCompanionObject()
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow retry(kotlinx.coroutines.flow.SharedFlow,long,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.CallableReference: boolean isOpen()
kotlin.collections.AbstractSet: int hashCode()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUInt(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ResizableAtomicArray: void setSynchronized(int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfULong(short[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxByOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ThreadSafeHeapNode: kotlinx.coroutines.internal.ThreadSafeHeap getHeap()
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1: java.lang.Object invoke(int)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KProperty$Getter getGetter()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.io.TextStreamsKt: java.lang.Object useLines(java.io.Reader,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ArrayByteIterator: boolean hasNext()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(java.lang.StringBuffer)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte reduceRightIndexedOrNull-EOyYB1Y(byte[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.ChannelResult: boolean equals-impl(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt[] toTypedArray--ajY-9A(int[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: ChannelsKt__DeprecatedKt$filterNotNull$1(kotlin.coroutines.Continuation)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: boolean contains(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Object count(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.internal.PlatformImplementations: kotlin.text.MatchGroup getMatchResultNamedGroup(java.util.regex.MatchResult,java.lang.String)
kotlinx.coroutines.channels.SendChannel: boolean offer(java.lang.Object)
kotlin.concurrent.ThreadsKt$thread$thread$1: ThreadsKt$thread$thread$1(kotlin.jvm.functions.Function0)
kotlinx.coroutines.channels.BufferedChannel: void incCompletedExpandBufferAttempts$default(kotlinx.coroutines.channels.BufferedChannel,long,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] copyInto-9-ak10g(short[],short[],int,int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(char[],char,int,int,int,java.lang.Object)
kotlinx.coroutines.selects.SelectImplementation: void invoke(kotlinx.coroutines.selects.SelectClause0,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List parse(java.net.URL)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int lastIndexOf(java.lang.Object)
kotlin.text.StringsKt___StringsKt$windowedSequence$1: StringsKt___StringsKt$windowedSequence$1()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.builders.SerializedCollection$Companion: SerializedCollection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double minOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: float coerceAtMost(float,float)
kotlinx.coroutines.CoroutineScopeKt: void cancel(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException)
kotlin.ranges.LongProgression: kotlin.collections.LongIterator iterator()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(double[],kotlin.jvm.functions.Function2)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte reduceIndexedOrNull(byte[],kotlin.jvm.functions.Function3)
kotlin.time.AbstractLongTimeSource$LongTimeMark: int compareTo(kotlin.time.ComparableTimeMark)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(int[],kotlin.random.Random)
kotlin.collections.MapsKt__MapsJVMKt: MapsKt__MapsJVMKt()
kotlinx.coroutines.BuildersKt__BuildersKt: java.lang.Object runBlocking$default(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberBuffered: BroadcastChannelImpl$SubscriberBuffered(kotlinx.coroutines.channels.BroadcastChannelImpl)
kotlin.collections.ArraysKt___ArraysKt: short reduceRightIndexed(short[],kotlin.jvm.functions.Function3)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List windowed$default(java.lang.Iterable,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.DebugKt: void getRECOVER_STACK_TRACES$annotations()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
kotlin.text.StringsKt__StringsKt$splitToSequence$2: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.EventLoopImplPlatform: void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlinx.coroutines.flow.LintKt$retry$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable maxOrThrow(kotlin.sequences.Sequence)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List buildList(int,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.util.List,kotlin.jvm.functions.Function1)
kotlin.coroutines.SafeContinuation: java.lang.StackTraceElement getStackTraceElement()
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(java.lang.Long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(long[],kotlin.jvm.functions.Function2)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: CombineKt$zipImpl$1$1$2$1$1(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWith-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.Intrinsics: Intrinsics()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean isClosedForSend()
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: CombineKt$combineInternal$2$1$1$emit$1(kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1,kotlin.coroutines.Continuation)
kotlin.random.Random: byte[] nextBytes(byte[],int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1: CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1(kotlin.jvm.functions.Function2,kotlinx.coroutines.CoroutineExceptionHandler$Key)
kotlinx.coroutines.ThreadState: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.sync.MutexImpl: MutexImpl(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int indexOf-WZ4Q5Ns(int)
kotlin.io.encoding.StreamEncodingKt: StreamEncodingKt()
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Float,java.lang.Float)
kotlin.collections.builders.ListBuilder: java.util.Iterator iterator()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,char[],boolean,int)
kotlin.time.AbstractLongTimeSource$LongTimeMark: kotlin.time.TimeMark plus-LRDsOJo(long)
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.IndexedValue: int component1()
kotlinx.coroutines.channels.BufferedChannelKt: kotlin.reflect.KFunction createSegmentFunction()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7(double[])
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$4: java.lang.Throwable invoke(java.lang.Throwable)
kotlin.collections.RingBuffer: java.lang.Object[] toArray(java.lang.Object[])
kotlin.ranges.ClosedDoubleRange: boolean isEmpty()
kotlin.io.path.PathTreeWalk: java.nio.file.Path access$getStart$p(kotlin.io.path.PathTreeWalk)
kotlinx.coroutines.flow.FlowKt__ErrorsKt: kotlinx.coroutines.flow.Flow retryWhen(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRight-yXmHNn8(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: long minByOrThrow(long[],kotlin.jvm.functions.Function1)
kotlin.text.CharsKt__CharJVMKt: boolean isTitleCase(char)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long min(long[])
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: float round(float)
kotlin.collections.builders.SetBuilder: SetBuilder(int)
kotlin.UInt: int times-7apg3OU(int,byte)
kotlinx.coroutines.channels.BufferedChannel$onReceive$2: BufferedChannel$onReceive$2()
kotlin.sequences.SequencesKt__SequenceBuilderKt: java.util.Iterator iterator(kotlin.jvm.functions.Function2)
kotlin.random.Random$Default: float nextFloat()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] sortedArrayWith(java.lang.Object[],java.util.Comparator)
kotlinx.coroutines.flow.SharedFlowImpl: long tryPeekLocked(kotlinx.coroutines.flow.SharedFlowSlot)
kotlin.collections.ArraysKt__ArraysKt: java.lang.String contentDeepToString(java.lang.Object[])
kotlin.coroutines.intrinsics.IntrinsicsKt: IntrinsicsKt()
kotlin.collections.builders.ListBuilder: void addAtInternal(int,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: void getExtension$annotations(java.nio.file.Path)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte[] toTypedArray(byte[])
kotlin.text.StringsKt___StringsKt: char single(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: FlowKt__LimitKt$drop$2$1$emit$1(kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(long[],java.util.Collection)
kotlin.text.StringsKt__IndentKt: java.lang.String trimMargin(java.lang.String,java.lang.String)
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.NonCancellable: void isCancelled$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] toUShortArray(kotlin.UShort[])
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p()
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float getOrNull(float[],int)
kotlin.math.MathKt__MathJVMKt: void getSign$annotations(double)
kotlin.math.UMathKt: long min-eb3DHEI(long,long)
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int)
androidx.core.view.ViewCompat$Api28Impl: void setAutofillId(android.view.View,android.view.autofill.AutofillId)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(double[])
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Float,float)
kotlin.io.FileWalkDirection: FileWalkDirection(java.lang.String,int)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void dispose()
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(float)
kotlinx.coroutines.DelayWithTimeoutDiagnostics$DefaultImpls: java.lang.Object delay(kotlinx.coroutines.DelayWithTimeoutDiagnostics,long,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder$Itr: int getLastIndex$kotlin_stdlib()
kotlin.collections.ArraysKt___ArraysKt: boolean any(boolean[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(double[],java.lang.Iterable)
kotlin.reflect.KFunction$DefaultImpls: void isInfix$annotations()
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int,java.lang.String)
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: void sortWith(java.lang.Object[],java.util.Comparator)
kotlin.io.encoding.DecodeInputStream: void close()
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause2,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(long[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: kotlinx.coroutines.debug.internal.Marked mark(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: void loop$atomicfu(java.util.concurrent.atomic.AtomicLongFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path readSymbolicLink(java.nio.file.Path)
kotlinx.coroutines.internal.Segment: void onSlotCleaned()
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyInto$default(long[],long[],int,int,int,int,java.lang.Object)
kotlin.reflect.KClasses: java.lang.Object safeCast(kotlin.reflect.KClass,java.lang.Object)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator thenComparator(java.util.Comparator,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.ClassReference: java.lang.String getSimpleName()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(java.lang.Object[])
kotlin.jvm.internal.Intrinsics: void throwJavaNpe()
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task tryExtractFromTheMiddle(int,boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(java.lang.Comparable[])
kotlin.io.FilesKt__FileReadWriteKt: FilesKt__FileReadWriteKt()
kotlin.collections.ArrayDeque: java.lang.Object removeFirst()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int nullsLast$lambda$4$ComparisonsKt__ComparisonsKt(java.util.Comparator,java.lang.Object,java.lang.Object)
kotlin.collections.UArraySortingKt: int partition-Aa5vz7o(short[],int,int)
kotlinx.coroutines.flow.SharedFlowImpl: boolean tryEmitLocked(java.lang.Object)
kotlinx.coroutines.CoroutineDispatcher: void releaseInterceptedContinuation(kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sorted-GBYM_sE(byte[])
kotlinx.coroutines.channels.ChannelsKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)
kotlinx.coroutines.selects.OnTimeout: kotlinx.coroutines.selects.SelectClause0 getSelectClause()
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.RingBuffer: int access$getCapacity$p(kotlin.collections.RingBuffer)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapIndexedTo--6EtJGI(int[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plusElement(java.lang.Iterable,java.lang.Object)
kotlin.collections.builders.MapBuilder: java.util.Set entrySet()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-uaTIQ5s(short[],java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(int[])
kotlin.collections.MapsKt___MapsKt: java.lang.Object firstNotNullOfOrNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ProduceKt: java.lang.Object awaitClose(kotlinx.coroutines.channels.ProducerScope,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: java.lang.Appendable filterTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.InputStreamReader reader(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scan-yXmHNn8(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.builders.SetBuilder: boolean contains(java.lang.Object)
kotlinx.coroutines.AwaitAll: java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$getNotCompletedCount$FU$p()
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.random.KotlinRandom: int nextInt()
kotlinx.coroutines.BuildersKt__Builders_commonKt: java.lang.Object invoke(kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object maxWith(java.lang.Object[],java.util.Comparator)
kotlinx.coroutines.CancellableContinuationImpl: void completeResume(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$3: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.ChannelAsFlow: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.io.TerminateException: TerminateException(java.io.File)
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(boolean[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short maxByOrThrow-U(short[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: kotlin.Pair partition(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean isIo()
kotlin.ExceptionsKt__ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
kotlin.ranges.ComparableOpenEndRange: java.lang.Comparable getStart()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte random-GBYM_sE(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],java.lang.Object[])
kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.text.StringsKt__StringsKt: boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(char[],char)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: CombineKt$zipImpl$1$1$2(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,java.lang.Object,kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.StandardKt__StandardKt: java.lang.Object takeUnless(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
kotlin.text.Charsets: java.nio.charset.Charset UTF32_LE()
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence filter(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: short minByOrThrow(short[],kotlin.jvm.functions.Function1)
kotlin.text.UStringsKt: java.lang.String toString-V7xB4Y4(int,int)
kotlin.properties.NotNullVar: NotNullVar()
kotlin.ranges.RangesKt___RangesKt: float coerceAtLeast(float,float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMap-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Boolean maxBy(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List flatMapIndexedSequence(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow flowCombineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow channelFlow(kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyOfRange(boolean[],int,int)
kotlin.collections.ArraysKt___ArraysKt: int count(short[])
kotlinx.coroutines.internal.SystemPropsKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
kotlin.text.StringsKt__StringsKt: boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean)
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toString()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
kotlin.text.StringsKt___StringsKt: java.util.List runningFoldIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt__RangesKt: kotlin.ranges.OpenEndRange rangeUntil(float,float)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow asSharedFlow(kotlinx.coroutines.flow.MutableSharedFlow)
kotlinx.coroutines.flow.FlowKt__ErrorsKt: kotlinx.coroutines.flow.Flow retry$default(kotlinx.coroutines.flow.Flow,long,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.JobKt__JobKt: void cancel(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable)
kotlinx.coroutines.Job$Key: Job$Key()
kotlin.collections.CollectionsKt___CollectionsKt: int sumOfByte(java.lang.Iterable)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
kotlin.collections.AbstractCollection$toString$1: AbstractCollection$toString$1(kotlin.collections.AbstractCollection)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(char[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.sequences.SequenceScope: java.lang.Object yieldAll(java.lang.Iterable,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
kotlin.ranges.URangesKt___URangesKt: byte coerceAtLeast-Kr8caGY(byte,byte)
kotlinx.coroutines.sync.SemaphoreImpl: boolean access$addAcquireToQueue(kotlinx.coroutines.sync.SemaphoreImpl,kotlinx.coroutines.Waiter)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean cancel(java.lang.Throwable)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.lang.Object[] copyToArrayImpl(java.util.Collection,java.lang.Object[])
kotlinx.coroutines.selects.SelectClause0Impl: kotlin.jvm.functions.Function3 getProcessResFunc()
kotlin.collections.ArraysKt___ArraysJvmKt: short elementAt(short[],int)
kotlin.collections.ArraysKt___ArraysKt: void reverse(byte[])
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Float minOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map toSingletonMap(java.util.Map)
kotlin.io.path.PathsKt__PathUtilsKt: void visitFileTree(java.nio.file.Path,int,boolean,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilder$EntriesItr: void nextAppendString(java.lang.StringBuilder)
kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl: boolean tryEmit(java.lang.Object)
kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.UShort: boolean equals-impl(short,java.lang.Object)
kotlin.jvm.internal.PropertyReference0: PropertyReference0(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.collections.EmptyList: boolean contains(java.lang.Void)
kotlin.ranges.OpenEndFloatRange: boolean lessThanOrEquals(float,float)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String toLowerCase(java.lang.String,java.util.Locale)
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.Long getCoroutineId()
kotlin.math.MathKt__MathJVMKt: float sqrt(float)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(short[])
kotlin.ULongArray: java.lang.Object[] toArray(java.lang.Object[])
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filter(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Object maxBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBeforeLast(java.lang.String,char,java.lang.String,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(double[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte maxWith(byte[],java.util.Comparator)
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.String toString()
kotlinx.coroutines.CompletedContinuation: java.lang.Object component1()
kotlin.enums.EnumEntriesList: int lastIndexOf(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence chunked(kotlin.sequences.Sequence,int)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
kotlin.text.StringsKt__IndentKt: java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getCoroutineContext()
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: kotlin.coroutines.jvm.internal.CoroutineStackFrame getLastObservedFrame()
kotlin.random.Random$Default: byte[] nextBytes(byte[])
kotlin.UIntKt: int toUInt(short)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: int getAVAILABLE_PROCESSORS()
kotlinx.coroutines.scheduling.CoroutineScheduler: CoroutineScheduler(int,int,long,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
kotlinx.coroutines.scheduling.UnlimitedIoScheduler: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlin.UIntArray: boolean isEmpty-impl(int[])
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List reversed--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt: boolean all(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport$SelectOnJoinCompletionHandler: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: byte[] sortedArrayDescending(byte[])
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List filterIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.text.RegexKt: kotlin.ranges.IntRange range(java.util.regex.MatchResult,int)
kotlin.collections.ArraysKt___ArraysKt: short[] sliceArray(short[],java.util.Collection)
kotlin.text.UStringsKt: kotlin.UShort toUShortOrNull(java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(double[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: int sumOfUInt(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List flatMap(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: java.lang.Throwable getCompletionCause()
kotlin.NumbersKt__FloorDivModKt: int mod(byte,int)
kotlin.io.path.ExceptionsCollector: void exitEntry(java.nio.file.Path)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object emitSuspend(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: void setStateDescription(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
kotlin.text.MatchGroup: MatchGroup(java.lang.String,kotlin.ranges.IntRange)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(float[])
androidx.work.impl.background.systemalarm.Alarms$Api19Impl: void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent)
kotlin.text.StringsKt__StringsKt$splitToSequence$2: StringsKt__StringsKt$splitToSequence$2(java.lang.CharSequence)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getCLOSE_HANDLER_INVOKED$p()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOf-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__AppendableKt: void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,java.lang.Object)
kotlin.text.StringsKt__RegexExtensionsKt: kotlin.text.Regex toRegex(java.lang.String,kotlin.text.RegexOption)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode getAliveSegmentLeft()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.lang.Iterable)
kotlin.collections.AbstractList$Companion: void checkPositionIndex$kotlin_stdlib(int,int)
kotlin.reflect.KClass$DefaultImpls: void getSupertypes$annotations()
kotlin.experimental.BitwiseOperationsKt: byte and(byte,byte)
kotlin.UByte: byte mod-7apg3OU(byte,byte)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceIndexed(java.lang.Iterable,kotlin.jvm.functions.Function3)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double maxOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(double[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List minusElement(java.lang.Iterable,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object first(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1: FlowKt__ZipKt$combine$6$1(kotlinx.coroutines.flow.Flow[])
kotlinx.coroutines.channels.BroadcastChannelImpl: java.lang.Object getValue()
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.LongRange,short)
kotlin.text.StringsKt__IndentKt: java.lang.String prependIndent(java.lang.String,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte first-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathUtilsKt: void forEachDirectoryEntry$default(java.nio.file.Path,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.future.FutureKt$asDeferred$2: FutureKt$asDeferred$2(kotlinx.coroutines.CompletableDeferred)
kotlin.collections.IndexingIterator: boolean hasNext()
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float reduceOrNull(float[],kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1: java.lang.Boolean invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: byte elementAtOrElse(byte[],int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(byte[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
kotlin.text.MatchResult$DefaultImpls: kotlin.text.MatchResult$Destructured getDestructured(kotlin.text.MatchResult)
kotlin.reflect.KProperty0: java.lang.Object getDelegate()
kotlin.comparisons.ReverseOrderComparator: int compare(java.lang.Comparable,java.lang.Comparable)
kotlin.collections.builders.MapBuilder: void putAll(java.util.Map)
kotlin.reflect.KCallable: java.lang.Object call(java.lang.Object[])
kotlin.jvm.internal.Reflection: kotlin.reflect.KTypeParameter typeParameter(java.lang.Object,java.lang.String,kotlin.reflect.KVariance,boolean)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: float maxOf(float,float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short component2-rL5Bavg(short[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: short minOrThrow-U(short[])
kotlin.coroutines.ContinuationKt$Continuation$1: kotlin.coroutines.CoroutineContext getContext()
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void isClosedForReceive$annotations()
kotlin.ranges.CharProgression: int getStep()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filter$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt__IndentKt: java.lang.String prependIndent$default(java.lang.String,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void tryPark()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle--ajY-9A(int[])
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.AwaitAll: AwaitAll(kotlinx.coroutines.Deferred[])
kotlin.coroutines.EmptyCoroutineContext: java.lang.Object readResolve()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
kotlin.text.StringsKt__StringsJVMKt: int codePointAt(java.lang.String,int)
kotlin.time.Duration$Companion: long getNEG_INFINITE-UwyO8pc$kotlin_stdlib()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int getIndexInArray()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: short minOrThrow(short[])
kotlinx.coroutines.ParentJob$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.ParentJob,kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minOfWithOrNull(java.lang.Iterable,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: long markAllEmptyCellsAsClosed(kotlinx.coroutines.channels.ChannelSegment)
kotlin.Triple: java.lang.Object component1()
kotlinx.coroutines.AwaitAll$AwaitAllNode: kotlinx.coroutines.DisposableHandle getHandle()
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlin.ranges.IntRange: boolean contains(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(double[],int)
kotlinx.coroutines.NonCancellable: java.lang.Object join(kotlin.coroutines.Continuation)
kotlin.UInt: boolean equals(java.lang.Object)
kotlin.io.FileTreeWalk$FileTreeWalkIterator: FileTreeWalk$FileTreeWalkIterator(kotlin.io.FileTreeWalk)
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: EventLoopImplBase$DelayedTaskQueue(long)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
kotlinx.coroutines.internal.StackTraceRecoveryKt: void StackTraceElement$annotations()
kotlin.sequences.MergingSequence$iterator$1: void remove()
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharingConfig configureSharing$FlowKt__ShareKt(kotlinx.coroutines.flow.Flow,int)
kotlin.TypeAliasesKt: void NullPointerException$annotations()
kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
kotlinx.coroutines.JobSupportKt: java.lang.Object boxIncomplete(java.lang.Object)
kotlin.ULong: int compareTo(java.lang.Object)
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(float[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.ranges.UIntRange: java.lang.String toString()
kotlinx.coroutines.internal.ConcurrentLinkedListNode: void remove()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowCombineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal plus(java.math.BigDecimal,java.math.BigDecimal)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: float maxOrThrow(java.lang.Iterable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
kotlin.Metadata: int k()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int indexOf(java.lang.Object)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.util.Collection,java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object randomOrNull(java.lang.Object[])
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: java.lang.Object next()
kotlin.collections.EmptySet: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: int sumBy(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: boolean equals(java.lang.Object)
kotlin.time.ComparableTimeMark: kotlin.time.ComparableTimeMark minus-LRDsOJo(long)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
kotlin.DeepRecursiveScopeImpl: java.lang.Object callRecursive(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.Ref$LongRef: Ref$LongRef()
kotlinx.coroutines.CompletableDeferredImpl: java.lang.Object await(kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong firstOrNull-QwZRm1k(long[])
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float lastOrNull(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancellableContinuationImpl: boolean trySuspend()
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow merge(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArrayDeque: void ensureCapacity(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWith-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlin.UNumbersKt: byte takeLowestOneBit-7apg3OU(byte)
kotlin.UShort: int compareTo-xj2QHRw(short)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte maxByOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__CollectionsKt: int getLastIndex(java.util.List)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow delayEach(kotlinx.coroutines.flow.Flow,long)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(long[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowImpl: int access$getQueueSize$p(kotlinx.coroutines.flow.SharedFlowImpl)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean elementAtOrNull(boolean[],int)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow filterIsInstance(kotlinx.coroutines.flow.Flow,kotlin.reflect.KClass)
kotlinx.coroutines.TimeoutCancellationException: java.lang.Throwable createCopy()
kotlin.collections.builders.MapBuilder: int getSize()
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode removeOrNext()
kotlin.ranges.ClosedFloatingPointRange: boolean contains(java.lang.Comparable)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableListIterator(java.lang.Object)
kotlin.ranges.ULongProgressionIterator: boolean hasNext()
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()
androidx.work.impl.WorkDatabase_Impl: WorkDatabase_Impl()
kotlin.reflect.KParameter$DefaultImpls: void isVararg$annotations()
kotlinx.coroutines.future.FutureKt$asCompletableFuture$1: java.lang.Object invoke(java.lang.Object)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator thenBy(java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(boolean[],int)
kotlin.reflect.KProperty: boolean isLateinit()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigInteger toBigIntegerOrNull(java.lang.String,int)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: BufferedChannel$BufferedChannelIterator(kotlinx.coroutines.channels.BufferedChannel)
kotlin.collections.ArraysKt___ArraysKt: long single(long[],kotlin.jvm.functions.Function1)
kotlin.reflect.KVariance: kotlin.reflect.KVariance[] $values()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: void loop$atomicfu(java.util.concurrent.atomic.AtomicLongFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object getAndUpdate$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.collections.MapsKt__MapsKt: void plusAssign(java.util.Map,kotlin.sequences.Sequence)
kotlin.collections.ArrayDeque: int getSize()
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableSet(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toCollection(kotlinx.coroutines.flow.Flow,java.util.Collection,kotlin.coroutines.Continuation)
kotlin.collections.AbstractMap$values$1: java.util.Iterator iterator()
kotlin.time.Duration$Companion: double convert(double,kotlin.time.DurationUnit,kotlin.time.DurationUnit)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int maxByOrThrow-U(int[],kotlin.jvm.functions.Function1)
kotlin.io.FilesKt__FileReadWriteKt: java.io.PrintWriter printWriter$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
kotlin.collections.MapsKt__MapsKt: java.util.Map toMutableMap(java.util.Map)
kotlinx.coroutines.Dispatchers: void getIO$annotations()
kotlinx.coroutines.debug.internal.DebugProbesImpl: void setSanitizeStackTraces$kotlinx_coroutines_core(boolean)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.SegmentOrClosed: boolean equals-impl0(java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1: java.lang.Boolean invoke(java.lang.Object)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression downTo-J1ME1BU(int,int)
kotlin.io.path.FileVisitorBuilderImpl: void onPostVisitDirectory(kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.LazyActorCoroutine: boolean offer(java.lang.Object)
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CancellableContinuationImpl claimReusableCancellableContinuation$kotlinx_coroutines_core()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(double[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence shuffled(kotlin.sequences.Sequence)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlin.collections.UArraySortingKt: void sortArray-4UcCI2c(byte[],int,int)
kotlin.UInt: java.lang.String toString()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Double minOrNull(kotlin.sequences.Sequence)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List distinct(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(float[],java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(java.lang.Object[],java.lang.Object)
kotlinx.coroutines.JobSupport: boolean makeCompleting$kotlinx_coroutines_core(java.lang.Object)
kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)
kotlinx.coroutines.CompletedExceptionally: boolean getHandled()
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot allocateSlot()
kotlinx.coroutines.DebugStringsKt: java.lang.String getClassSimpleName(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfFirst-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow observeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
kotlin.io.ReadAfterEOFException: ReadAfterEOFException(java.lang.String)
kotlin.io.encoding.Base64: byte[] encodeToByteArray(byte[],int,int)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte[] toTypedArray-GBYM_sE(byte[])
kotlin.time.Duration: int getHoursComponent-impl(long)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
kotlin.sequences.SequencesKt___SequencesKt: double maxOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: long reduceRightIndexed(long[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(float[],float,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt minWithOrNull-YmdZ_VM(int[],java.util.Comparator)
kotlin.text.StringsKt__StringsJVMKt: char[] toCharArray(java.lang.String)
kotlin.jvm.functions.Function4: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.UByte: long rem-VKZWuLQ(byte,long)
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1: SequencesKt___SequencesKt$sortedWith$1(kotlin.sequences.Sequence,java.util.Comparator)
kotlinx.coroutines.CancellableContinuation: void resumeUndispatchedWithException(kotlinx.coroutines.CoroutineDispatcher,java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List drop(java.lang.Iterable,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(int[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: java.lang.CharSequence getContainerTitle(android.view.accessibility.AccessibilityNodeInfo)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.SegmentOrClosed: boolean isClosed-impl(java.lang.Object)
kotlinx.coroutines.channels.BroadcastCoroutine: kotlinx.coroutines.selects.SelectClause2 getOnSend()
kotlin.io.ExceptionsKt: java.lang.String access$constructMessage(java.io.File,java.io.File,java.lang.String)
kotlin.ranges.LongRange: boolean equals(java.lang.Object)
kotlin.UNumbersKt: short takeLowestOneBit-xj2QHRw(short)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter(java.lang.String,char,java.lang.String)
kotlin.coroutines.jvm.internal.DebugMetadataKt: kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimStart(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow transform(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(java.lang.Object[])
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence windowedSequence$default(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: double sumOfDouble(kotlin.sequences.Sequence)
kotlin.text.DelimitedRangesSequence$iterator$1: DelimitedRangesSequence$iterator$1(kotlin.text.DelimitedRangesSequence)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
kotlin.DeepRecursiveScopeImpl: void resumeWith(java.lang.Object)
kotlin.jvm.internal.InlineMarker: void mark(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceIndexed(java.lang.Object[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.DisposableFutureHandle: void dispose()
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: kotlin.time.TimeMark minus-LRDsOJo(long)
kotlinx.coroutines.Delay$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnTimeout(kotlinx.coroutines.Delay,long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfLong(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOrNull(java.lang.Float[])
kotlin.time.DurationKt: long times-kIfJnKk(double,long)
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyOf(char[],int)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow scan(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-QwZRm1k(long[])
kotlinx.coroutines.JobNode: java.lang.String toString()
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.TypeReference: void getFlags$kotlin_stdlib$annotations()
kotlin.time.TimeSource$Monotonic$ValueTimeMark: kotlin.time.ComparableTimeMark minus-LRDsOJo(long)
kotlinx.coroutines.sync.SemaphoreSegment: java.util.concurrent.atomic.AtomicReferenceArray getAcquirers()
kotlin.math.MathKt__MathJVMKt: double abs(double)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(float[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: boolean hasPassedNow()
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: boolean hasNext()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.lang.Iterable,kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(short[],kotlin.jvm.functions.Function1)
kotlin.text.RegexKt: kotlin.text.MatchResult findNext(java.util.regex.Matcher,int,java.lang.CharSequence)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
kotlinx.coroutines.ThreadPoolDispatcherKt: kotlinx.coroutines.ExecutorCoroutineDispatcher newSingleThreadContext(java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyOf(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: void forEach(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectKt: void RegistrationFunction$annotations()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: java.lang.Object invoke(kotlin.coroutines.Continuation)
kotlinx.coroutines.ChildJob$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.ChildJob,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.NumbersKt__FloorDivModKt: short mod(short,short)
kotlin.time.Duration: java.lang.String toString()
kotlin.jvm.internal.BooleanSpreadBuilder: BooleanSpreadBuilder(int)
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol access$getON_LOCK_ALREADY_LOCKED_BY_OWNER$p()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(float[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minByOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt___MapsJvmKt: java.util.Map$Entry minWith(java.util.Map,java.util.Comparator)
kotlinx.coroutines.flow.internal.CombineKt: kotlinx.coroutines.flow.Flow zipImpl(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType platformType(kotlin.reflect.KType,kotlin.reflect.KType)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1: FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1(kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
kotlin.collections.ArraysKt___ArraysKt: short[] onEachIndexed(short[],kotlin.jvm.functions.Function2)
kotlin.UShortArray: void set-01HTLdE(short[],int,short)
kotlinx.coroutines.DispatchedTask: void handleFatalException$kotlinx_coroutines_core(java.lang.Throwable,java.lang.Throwable)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object lastOrNull(java.util.List)
kotlin.PreconditionsKt__PreconditionsKt: java.lang.Object checkNotNull(java.lang.Object,kotlin.jvm.functions.Function0)
kotlinx.coroutines.debug.internal.DebugProbesImpl$startWeakRefCleanerThread$1: DebugProbesImpl$startWeakRefCleanerThread$1()
kotlin.collections.MapsKt___MapsKt: float maxOf(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map toSingletonMapOrSelf(java.util.Map)
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object sendBroadcast$suspendImpl(kotlinx.coroutines.channels.ConflatedBufferedChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int last--ajY-9A(int[])
kotlin.collections.AbstractMutableList: java.lang.Object removeAt(int)
kotlin.io.path.ExceptionsCollector: void enterEntry(java.nio.file.Path)
kotlin.jvm.internal.ClassReference: java.util.HashMap access$getClassFqNames$cp()
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow filterIsInstance(kotlinx.coroutines.flow.Flow)
kotlin.io.encoding.Base64Kt: int[] access$getBase64UrlDecodeMap$p()
kotlin.jvm.functions.Function10: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(char[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt$iterator$1: boolean hasNext()
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: boolean isActive()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: char single(char[],kotlin.jvm.functions.Function1)
kotlin.time.DurationKt: long access$parseDuration(java.lang.String,boolean)
kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)
kotlin.time.DurationKt: long times-mvk6XK0(int,long)
kotlin.collections.ArraysKt___ArraysKt: void reverse(long[])
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: FlowKt__ReduceKt$first$$inlined$collectWhile$2$1(kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2,kotlin.coroutines.Continuation)
kotlin.jvm.internal.PrimitiveSpreadBuilder: int getSize(java.lang.Object)
kotlinx.coroutines.internal.ConcurrentKt: java.util.Set identitySet(int)
kotlinx.coroutines.CoroutineDispatcher$Key$1: java.lang.Object invoke(java.lang.Object)
kotlin.streams.jdk8.StreamsKt: java.util.List toList(java.util.stream.IntStream)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void sortWith(java.util.List,java.util.Comparator)
kotlin.UByte$Companion: UByte$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArrayDeque: void addFirst(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $values()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.Character lastOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int indexOf(java.lang.Object)
kotlinx.coroutines.CompletedWithCancellation: CompletedWithCancellation(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
kotlin.UByte: int compareTo-xj2QHRw(byte,short)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean randomOrNull(boolean[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(long[],int)
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: kotlinx.coroutines.CancellableContinuationImpl access$getCont$p(kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl)
kotlin.time.Duration$Companion: long minutes-UwyO8pc(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int lastIndexOf-3uqUaXg(long[],long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object takeState$kotlinx_coroutines_core()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__IndentKt: java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10(kotlin.ranges.LongRange)
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toSet$default(kotlinx.coroutines.flow.Flow,java.util.Set,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlinx.coroutines.internal.FastServiceLoader: kotlinx.coroutines.internal.MainDispatcherFactory createInstanceOf(java.lang.Class,java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-Aa5vz7o(short[],int,int)
kotlinx.coroutines.InterruptibleKt: java.lang.Object runInterruptibleInExpectedContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function0)
kotlinx.coroutines.DispatchedCoroutine: void afterCompletion(java.lang.Object)
kotlin.UByte: byte toUByte-w2LRezQ(byte)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(char[],java.lang.Iterable)
kotlinx.coroutines.flow.internal.AbortFlowException: AbortFlowException(kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: FlowKt__CollectKt$collectIndexed$2(kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.ReadonlySharedFlow: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.collections.builders.SerializedCollection: SerializedCollection()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow callbackFlow(kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsKt: boolean endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
kotlin.jvm.internal.Ref: Ref()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int lastIndexOf(java.lang.Object)
kotlin.jvm.internal.PropertyReference1Impl: PropertyReference1Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] sliceArray-c0bezYM(byte[],kotlin.ranges.IntRange)
kotlin.collections.AbstractList$ListIteratorImpl: void add(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object fold(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.math.MathKt__MathJVMKt: float ln(float)
kotlinx.coroutines.DispatchedTaskKt: void resumeUnconfined(kotlinx.coroutines.DispatchedTask)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2: FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsJVMKt: int nativeIndexOf(java.lang.String,char,int)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(double[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.time.Duration$Companion: long getMicroseconds-UwyO8pc(double)
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
kotlin.collections.FloatIterator: FloatIterator()
kotlin.collections.ArraysKt___ArraysKt: int sumBy(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: float last(float[])
kotlinx.coroutines.flow.LintKt: void cancel(kotlinx.coroutines.flow.FlowCollector,java.util.concurrent.CancellationException)
kotlin.NumbersKt__FloorDivModKt: long floorDiv(byte,long)
kotlin.io.FilesKt__FilePathComponentsKt: FilesKt__FilePathComponentsKt()
kotlin.PreconditionsKt__AssertionsJVMKt: void assert(boolean)
kotlin.ExceptionsKt__ExceptionsKt: void printStackTrace(java.lang.Throwable,java.io.PrintWriter)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.channels.BufferedChannelKt: long getEbCompletedCounter(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(boolean[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.LimitingDispatcher: java.util.concurrent.Executor getExecutor()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte component5-GBYM_sE(byte[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1: ChannelsKt__DeprecatedKt$zip$1()
kotlin.jvm.optionals.OptionalsKt: java.lang.Object getOrNull(java.util.Optional)
kotlin.collections.EmptyMap: boolean containsKey(java.lang.Object)
kotlin.DeprecationLevel: kotlin.DeprecationLevel valueOf(java.lang.String)
kotlinx.coroutines.ChildHandleNode: void invoke(java.lang.Throwable)
kotlinx.coroutines.JobSupport: boolean isCancelling(kotlinx.coroutines.Incomplete)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$tryResume$token$1: MutexImpl$CancellableContinuationWithOwner$tryResume$token$1(kotlinx.coroutines.sync.MutexImpl,kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(long[],long[])
kotlin.ranges.OpenEndFloatRange: boolean contains(float)
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,byte)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,java.lang.String,java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List reversed(java.lang.Iterable)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlin.collections.AbstractMap$values$1: int getSize()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.String toString(byte,int)
kotlin.sequences.DistinctSequence: DistinctSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathUtilsKt: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])
kotlin.io.LinesSequence: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: double[] sortedArray(double[])
kotlin.Suppress: java.lang.String[] names()
kotlinx.coroutines.internal.SynchronizedKt: java.lang.Object synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory: int getLoadPriority()
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: void run()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
kotlinx.coroutines.scheduling.CoroutineScheduler: void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int)
kotlin.math.MathKt__MathJVMKt: double withSign(double,double)
kotlin.StandardKt__StandardKt: java.lang.Object takeIf(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.text.Regex: Regex(java.lang.String,java.util.Set)
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch$default(java.util.List,int,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode--ajY-9A(int[])
kotlin.time.AdjustedTimeMark: long elapsedNow-UwyO8pc()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(double[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection filterNotTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.room.Index$Order: androidx.room.Index$Order[] values()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: boolean contains(double)
kotlin.io.FileSystemException: java.io.File getOther()
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion: JDK7PlatformImplementations$ReflectSdkVersion()
kotlinx.coroutines.internal.SegmentOrClosed: SegmentOrClosed(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.String dropLast(java.lang.String,int)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
kotlin.io.LineReader: java.lang.String readLine(java.io.InputStream,java.nio.charset.Charset)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setIndexInArray(int)
kotlin.collections.ArraysKt___ArraysKt: byte reduce(byte[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.CharProgression: java.util.Iterator iterator()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence zipWithNext(kotlin.sequences.Sequence)
kotlinx.coroutines.EventLoopImplBase: java.lang.Runnable dequeue()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumOfDouble(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobKt: void cancelChildren$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlinx.coroutines.DefaultExecutor: boolean isShutdownRequested()
kotlin.text.StringsKt___StringsKt: java.lang.String filterIndexed(java.lang.String,kotlin.jvm.functions.Function2)
kotlin.time.Duration$Companion: void getMicroseconds-UwyO8pc$annotations(long)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,char[])
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.scheduling.NanoTimeSource: NanoTimeSource()
kotlin.collections.ArrayDeque: boolean addAll(int,java.util.Collection)
kotlin.reflect.KCallable$DefaultImpls: void getTypeParameters$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-7znnbtw(int[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1: FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow)
kotlin.jvm.internal.TypeReference: kotlin.reflect.KType getPlatformTypeUpperBound$kotlin_stdlib()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float maxOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel drop(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)
kotlin.ranges.ComparableRange: boolean isEmpty()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable minOrThrow(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character maxByOrNull(char[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(long[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.CharCompanionObject: void getSIZE_BITS$annotations()
kotlin.ULongArray$Iterator: long next-s-VKNKU()
kotlin.PreconditionsKt__PreconditionsKt: java.lang.Object requireNotNull(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-rL5Bavg(short[])
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Iterable)
kotlin.jvm.internal.Ref$IntRef: java.lang.String toString()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: int minOf(int,int)
kotlin.collections.builders.SerializedCollection: java.lang.Object readResolve()
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: ChannelFlowMerge$collectTo$2(kotlinx.coroutines.Job,kotlinx.coroutines.sync.Semaphore,kotlinx.coroutines.channels.ProducerScope,kotlinx.coroutines.flow.internal.SendingCollector)
kotlin.jvm.internal.MutablePropertyReference2Impl: void set(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(short[])
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowImpl: kotlin.coroutines.Continuation[] findSlotsToResumeLocked(kotlin.coroutines.Continuation[])
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.DefaultExecutor: void ensureStarted$kotlinx_coroutines_core()
kotlin.sequences.FilteringSequence$iterator$1: void remove()
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel drop(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)
kotlin.collections.MapsKt__MapsKt: boolean containsKey(java.util.Map,java.lang.Object)
kotlin.time.AdjustedTimeMark: AdjustedTimeMark(kotlin.time.TimeMark,long,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression reversed(kotlin.ranges.LongProgression)
kotlin.coroutines.CombinedContext$toString$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineSchedulerKt: boolean mayNotBlock(java.lang.Thread)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: ChannelsKt__DeprecatedKt$elementAt$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: ChannelsKt__DeprecatedKt$dropWhile$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: ArraysKt___ArraysJvmKt$asList$8(char[])
kotlinx.coroutines.DispatchedCoroutine: java.lang.Object getResult$kotlinx_coroutines_core()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
kotlin.collections.builders.MapBuilder: boolean contentEquals(java.util.Map)
kotlinx.coroutines.UndispatchedMarker: UndispatchedMarker()
kotlin.collections.AbstractMap$Companion: boolean entryEquals$kotlin_stdlib(java.util.Map$Entry,java.lang.Object)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void invokeOnCancellation(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: FlowKt__ZipKt$combineTransformUnsafe$1$1(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUInt(long[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: void forEach(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.Appendable appendln(java.lang.Appendable,char)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short randomOrNull(short[])
kotlinx.coroutines.channels.BufferedChannel: boolean shouldSendSuspend(long)
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,char,int,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy--_j2Y-Q(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long)
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext)
kotlin.jvm.internal.MutableLocalVariableReference: kotlin.reflect.KDeclarationContainer getOwner()
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment access$findSegmentSend(kotlinx.coroutines.channels.BufferedChannel,long,kotlinx.coroutines.channels.ChannelSegment)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: boolean isConflatedDropOldest()
kotlin.collections.ArraysKt___ArraysKt: boolean any(byte[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,long)
kotlin.collections.MapsKt___MapsKt: java.util.Collection flatMapSequenceTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(byte[],kotlin.jvm.functions.Function1)
kotlin.coroutines.ContinuationKt$Continuation$1: void resumeWith(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimStart(java.lang.CharSequence)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.util.Collection,java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(double[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
kotlin.io.FilesKt__UtilsKt: java.io.File resolve(java.io.File,java.io.File)
kotlinx.coroutines.Active: java.lang.String toString()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(int,long)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.StackTraceFrame toStackTraceFrame(java.util.List)
kotlin.random.Random$Default: int nextInt()
kotlin.time.DurationUnit: java.util.concurrent.TimeUnit getTimeUnit$kotlin_stdlib()
kotlin.ranges.LongProgressionIterator: boolean hasNext()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(short[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function6)
kotlin.io.ExposingBufferByteArrayOutputStream: byte[] getBuffer()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object lastOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CompletableDeferred$DefaultImpls: void cancel(kotlinx.coroutines.CompletableDeferred)
androidx.work.WorkManagerInitializer: WorkManagerInitializer()
kotlinx.coroutines.channels.BroadcastKt$broadcast$1: BroadcastKt$broadcast$1(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: FlowKt__ZipKt$combine$$inlined$unsafeFlow$3(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: float minOf(char[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyOf(long[],int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object firstOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.InvokeOnCompletion: java.lang.Object invoke(java.lang.Object)
kotlin.time.Duration: void getInNanoseconds$annotations()
kotlinx.coroutines.flow.SharingConfig: SharingConfig(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberBuffered: boolean cancelImpl(java.lang.Throwable)
kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator getIterator()
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope plus(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(byte[])
kotlin.time.Duration$Companion: void getMicroseconds-UwyO8pc$annotations(double)
kotlinx.coroutines.channels.BufferedChannel: void access$onClosedReceiveCatchingOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.CancellableContinuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(float[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: long minWithOrThrow(long[],java.util.Comparator)
kotlinx.coroutines.BlockingCoroutine: void afterCompletion(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
kotlin.io.encoding.Base64$Default: Base64$Default(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.JobKt: kotlinx.coroutines.DisposableHandle disposeOnCompletion(kotlinx.coroutines.Job,kotlinx.coroutines.DisposableHandle)
kotlinx.coroutines.ThreadContextElementKt: java.lang.Object isPresent$$forInline(java.lang.ThreadLocal,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.SemaphoreSegment: void onCancellation(int,java.lang.Throwable,kotlin.coroutines.CoroutineContext)
kotlin.ranges.RangesKt___RangesKt: java.lang.Short toShortExactOrNull(int)
kotlinx.coroutines.channels.BroadcastCoroutine: kotlinx.coroutines.channels.ReceiveChannel openSubscription()
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: java.util.Iterator iterator()
kotlin.jdk7.AutoCloseableKt: java.lang.Object use(java.lang.AutoCloseable,kotlin.jvm.functions.Function1)
kotlin.UByte: void getData$annotations()
kotlinx.coroutines.CancellableContinuationImpl: void resumeImpl(java.lang.Object,int,kotlin.jvm.functions.Function1)
kotlin.UByteArray: java.lang.String toString-impl(byte[])
kotlin.NumbersKt__NumbersJVMKt: int countTrailingZeroBits(int)
kotlinx.coroutines.AbstractTimeSourceKt: long currentTimeMillis()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double minOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.TypeParameterReference: boolean isReified()
kotlin.collections.ArraysKt___ArraysKt: byte minWithOrThrow(byte[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt: double reduceRightIndexed(double[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: int random(int[],kotlin.random.Random)
kotlin.io.path.PathsKt__PathReadWriteKt: void writeBytes(java.nio.file.Path,byte[],java.nio.file.OpenOption[])
kotlin.jvm.internal.PrimitiveSpreadBuilder: void setPosition(int)
kotlinx.coroutines.DelayKt: java.lang.Object awaitCancellation(kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: byte minOf(byte,byte)
kotlin.collections.MapsKt___MapsKt: java.util.List flatMapSequence(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.io.LinesSequence$iterator$1: java.lang.String next()
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.coroutines.CoroutineContext$Element: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: ChannelFlowOperatorImpl(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.StringsKt___StringsKt: java.lang.Character maxWithOrNull(java.lang.CharSequence,java.util.Comparator)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort minOrNull-rL5Bavg(short[])
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: short maxOf(short,short)
kotlinx.coroutines.flow.ReadonlySharedFlow: ReadonlySharedFlow(kotlinx.coroutines.flow.SharedFlow,kotlinx.coroutines.Job)
kotlin.reflect.KMutableProperty2: kotlin.reflect.KMutableProperty2$Setter getSetter()
kotlin.ranges.ComparableRange: int hashCode()
kotlin.UByte: long toULong-s-VKNKU(byte)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path relativeTo(java.nio.file.Path,java.nio.file.Path)
kotlin.io.CloseableKt: java.lang.Object use(java.io.Closeable,kotlin.jvm.functions.Function1)
kotlin.sequences.FilteringSequence: boolean access$getSendWhen$p(kotlin.sequences.FilteringSequence)
kotlin.time.AbstractLongTimeSource$LongTimeMark: boolean equals(java.lang.Object)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence windowedSequence$default(java.lang.CharSequence,int,int,boolean,int,java.lang.Object)
kotlin.io.ConsoleKt: void print(short)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String toLowerCase(java.lang.String)
kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper: java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$getInstallations$FU$p()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1: BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1(kotlinx.coroutines.channels.BufferedChannel)
kotlin.ranges.RangesKt___RangesKt: java.lang.Short toShortExactOrNull(float)
kotlin.ranges.ClosedRange: boolean isEmpty()
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int)
kotlin.jvm.internal.FunctionImpl: int getArity()
kotlin.io.FileTreeWalk: FileTreeWalk(java.io.File,kotlin.io.FileWalkDirection,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.BuildersKt: java.lang.Object runBlocking$default(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.internal.LimitedDispatcher: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.util.Collection,kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte maxBy(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancelledContinuation: CancelledContinuation(kotlin.coroutines.Continuation,java.lang.Throwable,boolean)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object access$awaitValue(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean lastOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: void sortWith$default(java.lang.Object[],java.util.Comparator,int,int,int,java.lang.Object)
kotlin.ranges.ComparableRange: boolean equals(java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String concatToString(char[],int,int)
kotlin.collections.CollectionsKt___CollectionsKt: long sumOfULong(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.ranges.OpenEndDoubleRange: java.lang.Double getStart()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(java.lang.Object[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Iterable onEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.AwaitAll$AwaitAllNode: kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel getDisposer()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler)
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy[] values()
kotlinx.coroutines.JobSupport$onJoin$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.AbstractList$IteratorImpl: void remove()
kotlin.collections.AbstractMap: java.util.Collection values()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.ChannelFlowBuilder: ChannelFlowBuilder(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.io.encoding.Base64: int encodeSize(int)
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,long)
kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(char[])
kotlin.jvm.functions.Function20: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.UShort: kotlin.ranges.UIntRange rangeTo-xj2QHRw(short,short)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
kotlin.jvm.internal.ArrayLongIterator: ArrayLongIterator(long[])
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention valueOf(java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(short[])
kotlin.text.StringsKt__StringsKt: java.util.List lines(java.lang.CharSequence)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlinx.coroutines.DeferredCoroutine: DeferredCoroutine(kotlin.coroutines.CoroutineContext,boolean)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: AbstractSharedFlow()
kotlinx.coroutines.flow.SubscribedSharedFlow: SubscribedSharedFlow(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow debounce-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean getIgnoreCoroutinesWithEmptyContext()
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt: java.lang.Object trySendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-GBYM_sE(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt__ArraysKt: ArraysKt__ArraysKt()
kotlin.text.MatchResult$Destructured: java.lang.String component8()
kotlinx.coroutines.ThreadLocalEventLoop: ThreadLocalEventLoop()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong randomOrNull-QwZRm1k(long[])
kotlin.io.path.ExceptionsCollector: ExceptionsCollector(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short component5-rL5Bavg(short[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: double maxOf-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: byte coerceIn(byte,byte,byte)
kotlinx.coroutines.internal.DispatchedContinuation: DispatchedContinuation(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int getLastIndex--ajY-9A(int[])
kotlin.collections.CollectionsKt___CollectionsKt: void forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.random.AbstractPlatformRandom: boolean nextBoolean()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] plus(boolean[],boolean)
kotlin.io.encoding.Base64: kotlin.io.encoding.Base64 access$getMime$cp()
kotlinx.coroutines.channels.BroadcastCoroutine: BroadcastCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.BroadcastChannel,boolean)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection flatMapSequenceTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.StackTraceFrame: StackTraceFrame(kotlin.coroutines.jvm.internal.CoroutineStackFrame,java.lang.StackTraceElement)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(short[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.TypeReference$asString$args$1: java.lang.CharSequence invoke(kotlin.reflect.KTypeProjection)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: java.lang.String toString()
kotlinx.coroutines.Deferred$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Deferred,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$3: DebugProbesImpl$dumpCoroutinesInfoImpl$3(kotlin.jvm.functions.Function2)
kotlin.time.MonotonicTimeSource: long read()
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.internal.Symbol access$getPENDING$p()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-2fe2U9s(int[],int,int,int)
kotlin.collections.LongIterator: long nextLong()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object getValue()
kotlin.sequences.ConstrainedOnceSequence: ConstrainedOnceSequence(kotlin.sequences.Sequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
kotlin.collections.ArraysKt___ArraysKt: long first(long[])
kotlin.text.StringsKt___StringsKt: java.lang.Object minOfWithOrNull(java.lang.CharSequence,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.NumbersKt__FloorDivModKt: int floorDiv(short,byte)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
kotlinx.coroutines.ThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.builders.MapBuilder$EntriesItr: MapBuilder$EntriesItr(kotlin.collections.builders.MapBuilder)
kotlinx.coroutines.flow.StartedLazily: kotlinx.coroutines.flow.Flow command(kotlinx.coroutines.flow.StateFlow)
kotlin.collections.AbstractMap$values$1: boolean contains(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],java.lang.Iterable)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.channels.BufferedChannel: void prepareReceiverForSuspension(kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int)
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toStringInternalImpl()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object[])
kotlin.text.StringsKt___StringsKt: java.lang.Comparable minOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.text.Regex: java.lang.String replace(java.lang.CharSequence,java.lang.String)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder deleteRange(java.lang.StringBuilder,int,int)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1(kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2,kotlin.coroutines.Continuation)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: AbstractDoubleTimeSource$DoubleTimeMark(double,kotlin.time.AbstractDoubleTimeSource,long)
kotlin.UInt: int compareTo-WZ4Q5Ns(int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scanIndexed-3iWJZGE(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.Deferred: java.lang.Object await(kotlin.coroutines.Continuation)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(char[],char,int,int,int,java.lang.Object)
kotlin.NumbersKt__FloorDivModKt: short mod(byte,short)
kotlin.sequences.SequencesKt___SequencesKt$flatMap$2: java.util.Iterator invoke(kotlin.sequences.Sequence)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$onClosedSend(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1: ComparisonsKt__ComparisonsKt$thenByDescending$1(java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.startup.InitializationProvider: InitializationProvider()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.selects.SelectImplementation: boolean access$getInRegistrationPhase(kotlinx.coroutines.selects.SelectImplementation)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence)
kotlin.io.FilesKt__UtilsKt: java.io.File normalize(java.io.File)
kotlin.UByteArray: int hashCode-impl(byte[])
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBeforeLast$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.time.Duration$Companion: long milliseconds-UwyO8pc(double)
kotlin.collections.EmptySet: void clear()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
kotlin.collections.ArraysKt___ArraysKt: double reduce(double[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double maxOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
kotlin.collections.ArraysKt___ArraysKt: int minWithOrThrow(int[],java.util.Comparator)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence flatMapIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void missing()
kotlin.time.TimeSource$Monotonic$ValueTimeMark: boolean equals-impl0(long,long)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
kotlin.ULong: long times-7apg3OU(long,byte)
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3: StreamsKt$asSequence$$inlined$Sequence$3(java.util.stream.LongStream)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(double[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int indexOf(java.lang.Object)
kotlin.jvm.internal.ArrayShortIterator: boolean hasNext()
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction[] $values()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFoldIndexed-bzxtMww(short[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(char[],kotlin.jvm.functions.Function3)
kotlin.ULongArray: int hashCode-impl(long[])
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
kotlinx.coroutines.flow.ChannelFlowBuilder: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String)
kotlin.io.FilesKt__FileReadWriteKt: void forEachBlock(java.io.File,int,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt___StringsKt: java.util.Collection flatMapIndexedIterableTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: boolean timeToExecute(long)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.CtorCache: kotlin.jvm.functions.Function1 get(java.lang.Class)
kotlin.collections.builders.MapBuilderKeys: boolean addAll(java.util.Collection)
kotlinx.coroutines.flow.FlowKt__EmittersKt: java.lang.Object invokeSafely$FlowKt__EmittersKt(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,java.lang.Throwable,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt: kotlinx.coroutines.Job getJob(kotlin.coroutines.CoroutineContext)
kotlin.reflect.GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow runningFold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.coroutines.CombinedContext$Serialized$Companion: CombinedContext$Serialized$Companion()
kotlin.time.DurationKt: long getHours(double)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UInt minWith-YmdZ_VM(int[],java.util.Comparator)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt__ArraysKt: void contentDeepToStringInternal$ArraysKt__ArraysKt(java.lang.Object[],java.lang.StringBuilder,java.util.List)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1(java.lang.Object,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.io.path.PathsKt__PathUtilsKt: void visitFileTree$default(java.nio.file.Path,java.nio.file.FileVisitor,int,boolean,int,java.lang.Object)
kotlin.UIntArray: boolean add(java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: boolean isCompleted()
kotlinx.coroutines.DefaultExecutor: void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression step(kotlin.ranges.LongProgression,long)
kotlinx.coroutines.ResumeUndispatchedRunnable: ResumeUndispatchedRunnable(kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CancellableContinuation)
kotlin.UShort: short mod-xj2QHRw(short,short)
kotlin.ULong: int toUInt-pVg5ArA(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long firstOrNull(long[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.MapsKt___MapsKt: boolean all(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.reflect.KParameter: kotlin.reflect.KParameter$Kind getKind()
kotlin.collections.UCollectionsKt___UCollectionsKt: long sumOfULong(java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object invoke(kotlinx.coroutines.flow.SharingCommand,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character[] toTypedArray(char[])
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2: FlowKt__ReduceKt$reduce$2(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void runWorker()
kotlin.math.MathKt__MathJVMKt: double min(double,double)
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1: java.lang.Object invoke()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1: java.util.Map$Entry invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(java.lang.Object[],java.lang.Object)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
kotlin.coroutines.cancellation.CancellationExceptionKt: java.util.concurrent.CancellationException CancellationException(java.lang.Throwable)
kotlinx.coroutines.debug.internal.Marked: Marked(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
kotlin.jvm.internal.Reflection: kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sortedWith(kotlin.sequences.Sequence,java.util.Comparator)
kotlin.collections.State: State(java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow dropWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__CollectKt: kotlinx.coroutines.Job launchIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)
kotlinx.coroutines.flow.SharedFlowKt: java.lang.Object getBufferAt(java.lang.Object[],long)
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow unsafeTransform(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from(android.os.Handler)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt singleOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short minWith(short[],java.util.Comparator)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong elementAtOrNull-r7IrZao(long[],int)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.String absolutePathString(java.nio.file.Path)
kotlin.collections.SetsKt__SetsKt: java.util.LinkedHashSet linkedSetOf()
kotlinx.coroutines.sync.Semaphore: java.lang.Object acquire(kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMap-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.ULong: long plus-VKZWuLQ(long,long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(byte[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
kotlinx.coroutines.channels.BufferedChannel: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Throwable)
kotlin.DeepRecursiveKt: void getUNDEFINED_RESULT$annotations()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.collections.ArrayDeque: void copyElements(int)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String capitalize(java.lang.String,java.util.Locale)
kotlin.text.StringsKt___StringsKt: char first(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: boolean hasSurrogatePairAt(java.lang.CharSequence,int)
kotlin.coroutines.ContinuationKt: java.lang.Object suspendCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: long last(kotlin.ranges.LongProgression)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
kotlin.DeepRecursiveFunction: kotlin.jvm.functions.Function3 getBlock$kotlin_stdlib()
kotlin.TypeAliasesKt: void UnsupportedOperationException$annotations()
kotlin.concurrent.ThreadsKt$thread$thread$1: void run()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow conflate(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow delayFlow(kotlinx.coroutines.flow.Flow,long)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(short[])
kotlin.text.StringsKt___StringsKt: int count(java.lang.CharSequence)
kotlin.collections.builders.MapBuilder: MapBuilder(int)
kotlin.collections.ArraysKt___ArraysKt: double maxOf(short[],kotlin.jvm.functions.Function1)
kotlin.ULong: long xor-VKZWuLQ(long,long)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder: LockFreeTaskQueueCore$Placeholder(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer firstOrNull(int[])
kotlin.collections.UArraySortingKt: void sortArray--nroSd4(long[],int,int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int indexOf(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(byte[],int)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(int[])
kotlin.coroutines.ContinuationKt: kotlin.coroutines.Continuation createCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: boolean all(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float max(java.lang.Float[])
kotlin.UNumbersKt: int countTrailingZeroBits-WZ4Q5Ns(int)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getNO_RECEIVE_RESULT$p()
kotlin.time.Duration$Companion: void getMinutes-UwyO8pc$annotations(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Iterable withIndex-QwZRm1k(long[])
kotlinx.coroutines.scheduling.CoroutineScheduler: void loop$atomicfu(java.util.concurrent.atomic.AtomicLongFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object invoke(kotlin.Unit,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(float[],kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: long maxOf(long,long,long)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ActorScope$DefaultImpls: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull(kotlinx.coroutines.channels.ActorScope)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy-3bBvP4M(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.Character singleOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstIf(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5(long[])
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getDefault()
kotlinx.coroutines.JobSupport$onAwaitInternal$1: JobSupport$onAwaitInternal$1()
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.selects.TrySelectDetailedResult TrySelectDetailedResult(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-LuipOMY(byte[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.UnsafeLazyImpl: UnsafeLazyImpl(kotlin.jvm.functions.Function0)
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1: StringsKt___StringsKt$asSequence$$inlined$Sequence$1(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: boolean any(long[])
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collectTo$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.sequences.DropWhileSequence$iterator$1: boolean hasNext()
kotlinx.coroutines.scheduling.CoroutineScheduler: int createNewWorker()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: boolean isTextSelectable(android.view.accessibility.AccessibilityNodeInfo)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentDeepEqualsNullable(java.lang.Object[],java.lang.Object[])
kotlin.UInt: int times-WZ4Q5Ns(int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-lec5QzE(long[],long[])
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
kotlin.coroutines.ContinuationKt: void getCoroutineContext$annotations()
kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlinx.coroutines.CoroutineStart,int,java.lang.Object)
kotlin.collections.builders.MapBuilderValues: kotlin.collections.builders.MapBuilder getBacking()
kotlinx.coroutines.channels.BufferedChannel: void prepareSenderForSuspension(kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object find(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ExceptionsConstructorKt: int fieldsCount(java.lang.Class,int)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Void alreadyResumedError(java.lang.Object)
kotlinx.coroutines.future.CompletableFutureCoroutine: void onCancelled(java.lang.Throwable,boolean)
kotlin.StandardKt__StandardKt: java.lang.Void TODO()
kotlin.collections.ShortIterator: java.lang.Short next()
kotlin.collections.ArraysKt___ArraysKt: void reverse(char[],int,int)
kotlin.UShort: int plus-7apg3OU(short,byte)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause2 getOnSend()
kotlin.jvm.internal.ShortCompanionObject: ShortCompanionObject()
kotlin.collections.ArraysKt___ArraysKt: double average(byte[])
kotlin.collections.jdk8.CollectionsJDK8Kt: java.lang.Object getOrDefault(java.util.Map,java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(java.lang.StringBuilder)
kotlinx.coroutines.channels.ChannelIterator$next0$1: ChannelIterator$next0$1(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(char[],int,int,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
kotlin.text.CharsKt__CharKt: boolean isSurrogate(char)
kotlinx.coroutines.InvokeOnCompletion: void invoke(java.lang.Throwable)
kotlin.jvm.internal.ArrayDoubleIterator: boolean hasNext()
kotlin.collections.CollectionsKt__CollectionsKt: java.util.ArrayList arrayListOf(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: char getOrElse(char[],int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte reduceOrNull(byte[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobImpl: JobImpl(kotlinx.coroutines.Job)
kotlin.io.path.PathNode: void setContentIterator(java.util.Iterator)
kotlin.PreconditionsKt__PreconditionsKt: void check(boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
kotlinx.coroutines.internal.LocalAtomicsKt: void LocalAtomicInt$annotations()
kotlin.NumbersKt__NumbersKt: int countTrailingZeroBits(short)
kotlin.collections.builders.ListBuilder: void insertAtInternal(int,int)
kotlin.comparisons.ReverseOrderComparator: ReverseOrderComparator()
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void printStackTrace(java.io.PrintStream,java.util.List)
kotlinx.coroutines.channels.ReceiveChannel: boolean cancel(java.lang.Throwable)
kotlin.ranges.URangesKt___URangesKt: URangesKt___URangesKt()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.LintKt$retry$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1(java.util.Iterator)
kotlin.collections.EmptyList: java.util.List subList(int,int)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.reflect.KClass: boolean isInstance(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,short)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte reduceRightIndexedOrNull(byte[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$2: java.lang.Object invoke(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: short elementAt-nggk6HY(short[],int)
kotlin.random.AbstractPlatformRandom: java.util.Random getImpl()
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: long getOrElse(long[],int,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1: CollectionsKt__IterablesKt$Iterable$1(kotlin.jvm.functions.Function0)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator nullsLast()
kotlinx.coroutines.internal.DispatchedContinuationKt: boolean executeUnconfined$default(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(short[],short,int,int)
kotlinx.coroutines.EventLoopImplPlatform: EventLoopImplPlatform()
kotlin.math.MathKt__MathJVMKt: float nextUp(float)
kotlinx.coroutines.ParentJob: java.util.concurrent.CancellationException getChildJobCancellationCause()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte elementAtOrNull-PpDY95g(byte[],int)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.FastServiceLoader: java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: FlowKt__ShareKt$launchSharingDeferred$1$1(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CompletableDeferred)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyInto$default(short[],short[],int,int,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(char[],int,int)
kotlin.collections.ArrayDeque: java.lang.Object[] toArray()
kotlin.text.UStringsKt: java.lang.String toString-LxnNnR4(byte,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object first(java.util.List)
kotlin.UShortArray: short[] constructor-impl(short[])
kotlin.jvm.internal.TypeIntrinsics: java.util.Map castToMap(java.lang.Object)
kotlin.jvm.internal.FunctionImpl: void throwWrongArity(int)
kotlin.ranges.ULongProgressionIterator: java.lang.Object next()
kotlin.collections.builders.ListBuilderKt: java.lang.String subarrayContentToString(java.lang.Object[],int,int)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.coroutines.jvm.internal.RunSuspend: void setResult(kotlin.Result)
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: SubscribedSharedFlow$collect$1(kotlinx.coroutines.flow.SubscribedSharedFlow,kotlin.coroutines.Continuation)
kotlin.random.Random$Default: byte[] nextBytes(byte[],int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(short[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__ReversedViewsKt: java.util.List asReversed(java.util.List)
kotlin.sequences.MergingSequence: kotlin.jvm.functions.Function2 access$getTransform$p(kotlin.sequences.MergingSequence)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void completeResume(java.lang.Object)
kotlin.jvm.internal.FunctionBase: int getArity()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.random.AbstractPlatformRandom: byte[] nextBytes(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.StateFlowImpl: java.util.List getReplayCache()
kotlin.ULong: int compareTo-VKZWuLQ(long,long)
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: double maxOf(double,double[])
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimEnd(java.lang.CharSequence,char[])
kotlinx.coroutines.internal.LockFreeTaskQueue: boolean isClosed()
kotlinx.coroutines.channels.BufferedChannel: boolean isClosedForReceive0(long)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable maxOrThrow(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: boolean none(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt: kotlinx.coroutines.Job Job(kotlinx.coroutines.Job)
kotlinx.coroutines.CoroutineExceptionHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlin.collections.builders.MapBuilder: int findValue(java.lang.Object)
kotlinx.coroutines.sync.MutexKt: java.lang.Object withLock(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: double component2(double[])
kotlin.collections.ByteIterator: byte nextByte()
kotlin.ULongArray$Iterator: ULongArray$Iterator(long[])
kotlin.sequences.TakeSequence$iterator$1: void remove()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none-GBYM_sE(byte[])
kotlin.UInt: int minus-7apg3OU(int,byte)
kotlin.collections.MutableMapWithDefaultImpl: java.util.Set keySet()
kotlin.jvm.internal.ShortCompanionObject: void getSIZE_BYTES$annotations()
kotlin.random.jdk8.PlatformThreadLocalRandom: long nextLong(long,long)
kotlinx.coroutines.sync.SemaphoreKt: int access$getSEGMENT_SIZE$p()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence runningReduce(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterIsInstance(kotlin.sequences.Sequence)
kotlin.NumbersKt__FloorDivModKt: byte mod(long,byte)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.time.Duration$Companion: void getNanoseconds-UwyO8pc$annotations(int)
kotlinx.coroutines.channels.ChannelsKt: kotlin.jvm.functions.Function1 consumesAll(kotlinx.coroutines.channels.ReceiveChannel[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List takeLastWhile(java.util.List,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt___MapsKt: int count(java.util.Map)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,double)
kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 safeCtor(kotlin.jvm.functions.Function1)
kotlin.jvm.functions.Function21: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.ULongArray: boolean add-VKZWuLQ(long)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: ConcurrentWeakMap$Core$KeyValueIterator(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.Intrinsics: void throwParameterIsNullNPE(java.lang.String)
kotlin.ranges.RangesKt___RangesKt: long coerceAtLeast(long,long)
kotlin.UByte: byte or-7apg3OU(byte,byte)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean minWithOrNull(boolean[],java.util.Comparator)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.Removed: java.lang.String toString()
kotlin.io.FilesKt__FileReadWriteKt: java.io.OutputStreamWriter writer(java.io.File,java.nio.charset.Charset)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: FlowKt__ReduceKt$firstOrNull$1(kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: long minOf(long,long,long)
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind[] $values()
kotlinx.coroutines.flow.FlowKt__ErrorsKt: java.lang.Object catchImpl(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.text.CharCategory$Companion: CharCategory$Companion()
kotlin.properties.Delegates$observable$1: Delegates$observable$1(java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.time.Duration$Companion: long getNanoseconds-UwyO8pc(long)
kotlin.UIntArray: java.util.Iterator iterator-impl(int[])
kotlinx.coroutines.CompletedContinuation: java.lang.Throwable component5()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: void reverse(short[],int,int)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOf()
kotlin.ranges.ComparableOpenEndRange: boolean equals(java.lang.Object)
kotlin.enums.EnumEntriesList: int getSize()
kotlin.jvm.internal.PropertyReference: boolean isLateinit()
kotlinx.coroutines.JobSupport$AwaitContinuation: java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job)
kotlin.collections.ArrayDeque: java.lang.Object get(int)
kotlin.collections.MapsKt__MapsKt: java.lang.Object ifEmpty(java.util.Map,kotlin.jvm.functions.Function0)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
kotlin.collections.GroupingKt__GroupingJVMKt: java.util.Map mapValuesInPlace(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.MapAccessorsKt: void setValue(java.util.Map,java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(int[],int)
kotlin.DeepRecursiveScopeImpl: java.lang.Object runCallLoop()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
kotlin.UIntArray: boolean contains-WZ4Q5Ns(int[],int)
kotlin.jvm.internal.MagicApiIntrinsics: void voidMagicApiCall(int)
kotlin.time.TimeSource$Companion: TimeSource$Companion()
kotlin.text.StringsKt___StringsKt: java.util.Map associate(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.FloatCompanionObject: float getPOSITIVE_INFINITY()
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character max(char[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort firstOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(long[],kotlin.jvm.functions.Function1)
kotlin.coroutines.jvm.internal.CompletedContinuation: void resumeWith(java.lang.Object)
kotlinx.coroutines.NonDisposableHandle: void dispose()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer maxWithOrNull(int[],java.util.Comparator)
kotlin.collections.AbstractMutableSet: AbstractMutableSet()
kotlinx.coroutines.channels.BufferedChannelKt: boolean tryResume0(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: float sumOfFloat(kotlin.sequences.Sequence)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1: DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1()
kotlinx.coroutines.flow.AbstractFlow$collect$1: AbstractFlow$collect$1(kotlinx.coroutines.flow.AbstractFlow,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.io.FilesKt__UtilsKt: java.io.File createTempDir(java.lang.String,java.lang.String,java.io.File)
kotlin.ranges.ClosedDoubleRange: int hashCode()
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String commonPrefixWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double maxWithOrThrow(double[],java.util.Comparator)
kotlin.collections.IntIterator: java.lang.Integer next()
kotlinx.coroutines.flow.ChannelFlowBuilder: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.util.List getCreationStackTrace()
kotlinx.coroutines.selects.SelectClause1Impl: kotlin.jvm.functions.Function3 getOnCancellationConstructor()
kotlin.collections.ArraysKt___ArraysKt: boolean elementAtOrElse(boolean[],int,kotlin.jvm.functions.Function1)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
kotlinx.coroutines.flow.FlowKt: int getDEFAULT_CONCURRENCY()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],char[])
kotlin.collections.ArraysKt___ArraysKt: int count(byte[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List minus(java.lang.Iterable,kotlin.sequences.Sequence)
kotlin.collections.builders.SerializedMap$Companion: SerializedMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(double[],double,int,int)
kotlin.jvm.internal.MutablePropertyReference1: java.lang.Object invoke(java.lang.Object)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
kotlin.ranges.UIntProgressionIterator: void remove()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collectIndexed$$forInline(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.NumbersKt__NumbersJVMKt: boolean isFinite(float)
kotlin.collections.EmptyList: java.lang.Object get(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1: java.lang.Object[] invoke()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object randomOrNull(java.util.Collection)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: AwaitAll$DisposeHandlersOnCancel(kotlinx.coroutines.AwaitAll,kotlinx.coroutines.AwaitAll$AwaitAllNode[])
kotlin.UIntArray: boolean equals-impl0(int[],int[])
kotlin.UShort: long toULong-s-VKNKU(short)
kotlinx.coroutines.JobSupport: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(char[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.UByteArray: boolean equals-impl0(byte[],byte[])
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.jvm.functions.Function0)
kotlinx.coroutines.AbstractCoroutine: java.lang.String nameString$kotlinx_coroutines_core()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StateFlowSlot: boolean allocateLocked(kotlinx.coroutines.flow.StateFlowImpl)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow delayFlow(kotlinx.coroutines.flow.Flow,long)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])
kotlin.io.FilesKt__FileReadWriteKt: void writeBytes(java.io.File,byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(long[])
kotlin.collections.CollectionsKt___CollectionsKt: int indexOfLast(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport$ChildCompletion: JobSupport$ChildCompletion(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: void run()
kotlinx.coroutines.NodeList: kotlinx.coroutines.NodeList getList()
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(byte[],byte)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] sliceArray-CFIt9YE(int[],java.util.Collection)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
kotlinx.coroutines.Dispatchers: void shutdown()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long find(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancellableContinuationImplKt: int getDecision(int)
kotlin.NumbersKt__FloorDivModKt: long mod(byte,long)
kotlin.jvm.internal.LongCompanionObject: void getSIZE_BYTES$annotations()
kotlin.collections.ArraysKt___ArraysKt: double single(double[])
kotlin.collections.AbstractList$Companion: int orderedHashCode$kotlin_stdlib(java.util.Collection)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int count(char[])
kotlin.collections.builders.MapBuilder$KeysItr: java.lang.Object next()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyOfRangeInline(boolean[],int,int)
kotlin.collections.MapsKt___MapsKt: boolean none(java.util.Map)
kotlinx.coroutines.channels.ChannelResult: ChannelResult(java.lang.Object)
kotlin.time.Duration: boolean isPositive-impl(long)
kotlin.collections.ArraysKt___ArraysKt: double getOrElse(double[],int,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempDirectory$default(java.lang.String,java.nio.file.attribute.FileAttribute[],int,java.lang.Object)
kotlin.collections.SetsKt___SetsKt: java.util.Set minusElement(java.util.Set,java.lang.Object)
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot: boolean allocateLocked(java.lang.Object)
kotlin.time.Duration: void getInSeconds$annotations()
kotlin.UShort: short constructor-impl(short)
kotlin.text.StringsKt___StringsKt: java.util.Map associateTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.UInt: kotlin.UInt box-impl(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3: java.util.Iterator invoke()
kotlinx.coroutines.JobImpl: boolean getOnCancelComplete$kotlinx_coroutines_core()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryAcquireCpuPermit()
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double component4(double[])
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
kotlin.time.Duration: double getInMicroseconds-impl(long)
kotlinx.coroutines.selects.SelectClause1Impl: kotlin.jvm.functions.Function3 getRegFunc()
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.sequences.Sequence)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.AwaitAll$AwaitAllNode: void invoke(java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-X6OPwNk(long[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String invoke(java.lang.String)
kotlinx.coroutines.internal.InlineList: boolean equals(java.lang.Object)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: CancellableFlowImpl$collect$2$emit$1(kotlinx.coroutines.flow.CancellableFlowImpl$collect$2,kotlin.coroutines.Continuation)
kotlin.text.MatcherMatchResult: kotlin.ranges.IntRange getRange()
kotlin.KotlinNothingValueException: KotlinNothingValueException(java.lang.String)
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow cancellable(kotlinx.coroutines.flow.SharedFlow)
kotlin.UByteArray: boolean contains-7apg3OU(byte[],byte)
kotlin.collections.ArraysKt___ArraysKt: boolean all(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow drop(kotlinx.coroutines.flow.Flow,int)
kotlin.ranges.RangesKt___RangesKt: double coerceAtLeast(double,double)
kotlinx.coroutines.channels.ChannelKt: java.lang.Object getOrElse-WpGqRn0(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.UInt: int floorDiv-xj2QHRw(int,short)
kotlin.NumbersKt__NumbersKt: byte rotateRight(byte,int)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10,kotlin.coroutines.Continuation)
kotlinx.coroutines.DispatchedTaskKt: void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean)
kotlin.collections.ArraysKt___ArraysKt: int first(int[])
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void initCancellability()
kotlin.UShortArray: void getStorage$annotations()
kotlin.jvm.internal.PackageReference: boolean equals(java.lang.Object)
kotlinx.coroutines.debug.AgentPremain: AgentPremain()
kotlin.text.StringsKt___StringsKt: java.util.Map associateByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__EmittersKt: void ensureActive(kotlinx.coroutines.flow.FlowCollector)
androidx.work.impl.workers.DiagnosticsWorker: DiagnosticsWorker(android.content.Context,androidx.work.WorkerParameters)
kotlinx.coroutines.channels.BufferedChannel: void onClosedReceiveOnNoWaiterSuspend(kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.internal.SystemPropsKt: long systemProp(java.lang.String,long,long,long)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoopImplBase: void closeQueue()
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: DistinctFlowImpl$collect$2$emit$1(kotlinx.coroutines.flow.DistinctFlowImpl$collect$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapNotNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__IterablesKt: kotlin.Pair unzip(java.lang.Iterable)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection flatMapTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.LazyThreadSafetyMode: LazyThreadSafetyMode(java.lang.String,int)
kotlin.collections.AbstractMap$keys$1$iterator$1: void remove()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator reverseOrder()
kotlin.StandardKt__StandardKt: java.lang.Object also(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(char[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List filterNot(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: ChannelFlowTransformLatest$flowCollect$3$1$2(kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest,kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.time.TimedValue: java.lang.String toString()
kotlin.DeepRecursiveScopeImpl: void access$setResult$p(kotlin.DeepRecursiveScopeImpl,java.lang.Object)
kotlin.text.DelimitedRangesSequence$iterator$1: void setNextSearchIndex(int)
kotlin.collections.IndexedValue: java.lang.Object getValue()
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,boolean)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3: java.nio.file.FileVisitResult invoke(java.nio.file.Path,java.lang.Exception)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
kotlin.text.MatcherMatchResult$groupValues$1: int lastIndexOf(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: ChannelsKt__DeprecatedKt$requireNoNulls$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,int)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(long,long)
kotlin.time.Duration$Companion: Duration$Companion()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.io.ConsoleKt: void println(char[])
kotlin.text.StringsKt__StringsJVMKt: char[] toCharArray$default(java.lang.String,int,int,int,java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl: void resetReplayCache()
kotlin.collections.MapWithDefaultImpl: java.util.Collection values()
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1: FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1(kotlin.jvm.internal.Ref$ObjectRef)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: boolean isEmpty()
kotlinx.coroutines.TimeoutCoroutine: TimeoutCoroutine(long,kotlin.coroutines.Continuation)
kotlin.ranges.OpenEndFloatRange: OpenEndFloatRange(float,float)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeRange(java.lang.CharSequence,int,int)
kotlin.collections.builders.MapBuilder: boolean removeEntry$kotlin_stdlib(java.util.Map$Entry)
kotlinx.coroutines.JobSupport: void promoteEmptyToNodeList(kotlinx.coroutines.Empty)
kotlin.NumbersKt__BigIntegersKt: java.math.BigDecimal toBigDecimal(java.math.BigInteger)
kotlin.collections.CollectionsKt__CollectionsKt: boolean containsAll(java.util.Collection,java.util.Collection)
kotlinx.coroutines.NodeList: java.lang.String toString()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minOfWithOrNull(kotlin.sequences.Sequence,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType mutableCollectionType(kotlin.reflect.KType)
kotlin.io.encoding.Base64: byte[] decode$default(kotlin.io.encoding.Base64,byte[],int,int,int,java.lang.Object)
kotlin.text.Regex: boolean matchesAt(java.lang.CharSequence,int)
kotlinx.coroutines.CoroutineId: long getId()
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int,java.lang.Object,java.lang.Object)
kotlin.collections.IndexedValue: kotlin.collections.IndexedValue copy$default(kotlin.collections.IndexedValue,int,java.lang.Object,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer minWithOrNull(int[],java.util.Comparator)
kotlin.io.FilesKt__FileReadWriteKt: java.lang.Object useLines$default(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: int compareTo-6eNON_k(long,long)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object minWith(java.lang.Object[],java.util.Comparator)
kotlin.ULong: int compareTo-xj2QHRw(long,short)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short reduceRightIndexedOrNull(short[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow dropWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapIndexedTo-eNpIKz8(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BufferedChannel$sendImpl$1: java.lang.Void invoke(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long)
kotlinx.coroutines.EventLoop: long getNextTime()
kotlin.RequiresOptIn$Level: kotlin.RequiresOptIn$Level[] $values()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-oBK06Vg$default(int[],int,int,int,java.lang.Object)
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StateFlowImpl: void resetReplayCache()
kotlin.coroutines.CombinedContext: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(java.lang.Object[])
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.String toString(short,int)
kotlin.io.encoding.Base64: Base64(boolean,boolean)
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int,long,java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String nameString()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: void findNext()
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: StartedWhileSubscribed$command$1(kotlinx.coroutines.flow.StartedWhileSubscribed,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: byte maxWithOrThrow(byte[],java.util.Comparator)
kotlin.collections.AbstractList$Companion: boolean orderedEquals$kotlin_stdlib(java.util.Collection,java.util.Collection)
kotlin.ranges.ClosedRange$DefaultImpls: boolean isEmpty(kotlin.ranges.ClosedRange)
kotlin.collections.MapsKt___MapsKt: java.lang.Float minOfOrNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlin.reflect.KTypeProjection: kotlin.reflect.KVariance component1()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.Character reduceIndexedOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function3)
kotlin.text.CharsKt__CharJVMKt: char lowercaseChar(char)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicLongFieldUpdater access$getSendersAndCloseStatus$FU$p()
kotlin.ranges.LongProgression$Companion: LongProgression$Companion()
kotlin.sequences.SequencesKt___SequencesKt$minus$4: SequencesKt___SequencesKt$minus$4(kotlin.sequences.Sequence,kotlin.sequences.Sequence)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: int minOf-Md2H83M(int,int[])
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.Pair[],java.util.Map)
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable)
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaObjectType(kotlin.reflect.KClass)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(boolean[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.UShortArray: kotlin.UShortArray box-impl(short[])
kotlin.UByte: float toFloat-impl(byte)
kotlin.jvm.internal.ByteSpreadBuilder: byte[] toArray()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: java.lang.Integer get(int)
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.OpenEndRange,short)
kotlin.collections.CollectionsKt___CollectionsKt: int[] toIntArray(java.util.Collection)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: long minOf-eb3DHEI(long,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong firstOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(char[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
kotlin.collections.MapsKt___MapsKt: java.lang.Double maxOfOrNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object lastIndexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletionHandler_commonKt: boolean isHandlerOf(kotlin.jvm.functions.Function1)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,kotlin.Pair[])
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,long)
kotlin.time.DurationKt: long parseDuration(java.lang.String,boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler: void signalBlockingWork(long,boolean)
kotlinx.coroutines.EventLoopImplBase: boolean shouldUnpark(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlin.random.Random: byte[] nextBytes(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(double[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void uninstall$kotlinx_coroutines_core()
kotlin.UByte: kotlin.ranges.UIntRange rangeTo-7apg3OU(byte,byte)
kotlinx.coroutines.EventLoop: long processNextEvent()
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(long[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(char[])
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object component2(java.util.List)
kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1: java.lang.Boolean invoke(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: boolean isClosed(long,boolean)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.OpenEndRange,long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(double[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.reflect.KFunction$DefaultImpls: void isExternal$annotations()
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: boolean isCancelled()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean reduceOrNull(boolean[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment completeClose(long)
kotlin.collections.builders.ListBuilder$Itr: int nextIndex()
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder)
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: void handleBuilderException(java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-rL5Bavg(short[])
kotlin.sequences.TransformingIndexedSequence: kotlin.jvm.functions.Function2 access$getTransformer$p(kotlin.sequences.TransformingIndexedSequence)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
kotlin.io.path.ExceptionsCollector: ExceptionsCollector(int,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.channels.BufferedChannel: void getOnUndeliveredElementReceiveCancellationConstructor$annotations()
kotlin.jvm.internal.Intrinsics: int compare(long,long)
kotlinx.coroutines.ParentJob$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.ParentJob,kotlinx.coroutines.Job)
kotlinx.coroutines.flow.internal.ChannelFlowMerge: ChannelFlowMerge(kotlinx.coroutines.flow.Flow,int,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.sequences.SequencesKt___SequencesKt: double averageOfInt(kotlin.sequences.Sequence)
kotlin.text.DelimitedRangesSequence$iterator$1: void setCurrentStartIndex(int)
kotlin.jvm.internal.ClassReference: java.util.Map access$getSimpleNames$cp()
kotlinx.coroutines.channels.ReceiveChannel: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(long[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short[] toTypedArray(short[])
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction valueOf(java.lang.String)
kotlin.time.DurationKt: long toDuration(int,kotlin.time.DurationUnit)
kotlin.text.UStringsKt: long toULong(java.lang.String,int)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence scan(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.math.MathKt__MathJVMKt: float pow(float,float)
kotlin.jvm.internal.ClassReference: boolean isOpen()
kotlin.math.MathKt: MathKt()
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: ChannelLimitedFlowMerge(java.lang.Iterable,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.UIntArray$Iterator: java.lang.Object next()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(long[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.EmptySet: boolean containsAll(java.util.Collection)
kotlin.collections.AbstractList$IteratorImpl: boolean hasNext()
kotlinx.coroutines.channels.BroadcastChannelImpl: boolean close(java.lang.Throwable)
kotlin.text.StringsKt___StringsKt$groupingBy$1: StringsKt___StringsKt$groupingBy$1(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(java.lang.Object[],java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
kotlin.time.DurationKt: long getSeconds(double)
kotlin.sequences.EmptySequence: EmptySequence()
kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()
kotlin.collections.AbstractMap: java.util.Set getKeys()
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1: CollectionsKt___CollectionsKt$groupingBy$1(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Double min(java.lang.Iterable)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: short maxOf(short,short,short)
kotlinx.coroutines.sync.Mutex: boolean isLocked()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass[] getOrCreateKotlinClasses(java.lang.Class[])
kotlin.collections.UArraySortingKt: void quickSort--nroSd4(long[],int,int)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator then(java.util.Comparator,java.util.Comparator)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort reduceRightIndexedOrNull-aLgx1Fo(short[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.SinceKotlin: java.lang.String version()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int nullsFirst$lambda$3$ComparisonsKt__ComparisonsKt(java.util.Comparator,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(int[],kotlin.jvm.functions.Function2)
kotlin.UShort: int floorDiv-xj2QHRw(short,short)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object elementAtOrNull(java.lang.Object[],int)
kotlin.math.MathKt__MathJVMKt: float exp(float)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
kotlin.collections.ArraysKt___ArraysKt: long component3(long[])
kotlinx.coroutines.flow.internal.ChannelFlowMerge: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(char[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.time.AbstractLongTimeSource$LongTimeMark: AbstractLongTimeSource$LongTimeMark(long,kotlin.time.AbstractLongTimeSource,long,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.SearchView: int getInputType()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long last-QwZRm1k(long[])
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,java.lang.String,int,boolean)
kotlin.jvm.internal.MagicApiIntrinsics: void voidMagicApiCall(java.lang.Object)
kotlin.collections.MapsKt__MapsKt: void minusAssign(java.util.Map,java.lang.Object)
kotlin.time.AdjustedTimeMark: kotlin.time.TimeMark minus-LRDsOJo(long)
kotlin.collections.ArraysKt___ArraysKt: boolean minWithOrThrow(boolean[],java.util.Comparator)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.lang.Object putSynchronized(java.lang.Object,java.lang.Object)
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException()
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object trySendDropOldest-JP2dKIU(java.lang.Object)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$resume$2: void invoke(java.lang.Throwable)
kotlin.coroutines.CombinedContext$Serialized: java.lang.Object readResolve()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection mapNotNullTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(long[])
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: java.lang.Long randomOrNull(kotlin.ranges.LongRange)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: kotlin.jvm.functions.Function3 access$getTransform$p(kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest)
kotlin.UShort: int div-xj2QHRw(short,short)
kotlin.sequences.TakeSequence$iterator$1: void setLeft(int)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getChildJobCancellationCause()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],java.lang.Object[])
kotlin.UShortArray: java.lang.String toString-impl(short[])
kotlin.jvm.internal.TypeParameterReference: void setUpperBounds(java.util.List)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer reduceRightIndexedOrNull(int[],kotlin.jvm.functions.Function3)
kotlin.NumbersKt__FloorDivModKt: float mod(float,float)
kotlin.time.DurationKt: long getNanoseconds(int)
kotlinx.coroutines.channels.BufferedChannel: java.lang.String toString()
kotlinx.coroutines.DefaultExecutor: void enqueue(java.lang.Runnable)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow publishOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: ConcurrentLinkedListNode(kotlinx.coroutines.internal.ConcurrentLinkedListNode)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceRightIndexed(java.lang.Object[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.internal.UndeliveredElementException: UndeliveredElementException(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow subscribeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
kotlin.jvm.internal.ClassReference: void isSealed$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(char[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CancelHandlerBase: CancelHandlerBase()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: java.lang.Void remove()
kotlin.jvm.internal.PropertyReference1: PropertyReference1(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.reflect.TypeVariableImpl: java.lang.annotation.Annotation[] getAnnotations()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: int toInt(java.lang.String,int)
kotlinx.coroutines.JobImpl: boolean handlesException()
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind[] values()
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,float)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
kotlin.UShort: int rem-7apg3OU(short,byte)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])
kotlin.collections.builders.MapBuilderValues: boolean remove(java.lang.Object)
kotlinx.coroutines.internal.ThreadLocalElement: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.sync.MutexImpl: void onLockRegFunction(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.ExceptionsKt__ExceptionsKt: void printStackTrace(java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfLong(byte[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sortedBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: FlowKt__ReduceKt$first$3(kotlin.coroutines.Continuation)
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass createKotlinClass(java.lang.Class)
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
kotlin.reflect.KClass: int hashCode()
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.AwaitAll$AwaitAllNode: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: CombineKt$zipImpl$1$1$1(kotlinx.coroutines.CompletableJob,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object single(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long updateAndGet$atomicfu(java.util.concurrent.atomic.AtomicLongFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.time.DurationUnitKt__DurationUnitJvmKt: kotlin.time.DurationUnit toDurationUnit(java.util.concurrent.TimeUnit)
kotlinx.coroutines.Job$DefaultImpls: void cancel(kotlinx.coroutines.Job)
kotlin.collections.ArraysKt___ArraysKt: void forEach(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character lastOrNull(char[])
kotlinx.coroutines.channels.ReceiveChannel: boolean isClosedForReceive()
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner owner(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
kotlin.text.StringsKt___StringsKt: java.util.Map associateByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.EmptyMap: EmptyMap()
kotlin.jvm.internal.LocalVariableReferencesKt: java.lang.Void notSupportedError()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel take$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlin.time.TimeMark$DefaultImpls: kotlin.time.TimeMark plus-LRDsOJo(kotlin.time.TimeMark,long)
kotlin.contracts.ContractBuilder: kotlin.contracts.Returns returns()
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.util.List lastObservedStackTrace$kotlinx_coroutines_core()
kotlinx.coroutines.AbstractTimeSourceKt: void trackTask()
kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)
kotlin.io.path.PathNode: java.lang.Object getKey()
kotlinx.coroutines.channels.ActorKt: kotlinx.coroutines.channels.SendChannel actor$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,java.lang.Object)
kotlin.collections.MapsKt___MapsKt: boolean any(java.util.Map)
kotlin.Result$Companion: Result$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minWithOrNull(java.lang.Iterable,java.util.Comparator)
kotlinx.coroutines.scheduling.CoroutineSchedulerKt: boolean isSchedulerWorker(java.lang.Thread)
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean isInstalled$kotlinx_coroutines_debug()
kotlin.coroutines.cancellation.CancellationExceptionKt: void CancellationException$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float find(float[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeWhile-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger inc(java.math.BigInteger)
kotlinx.coroutines.selects.SelectImplementation$ClauseData: kotlin.jvm.functions.Function1 createOnCancellationAction(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.reflect.KFunction: boolean isInfix()
kotlin.collections.AbstractMap$Companion: java.lang.String entryToString$kotlin_stdlib(java.util.Map$Entry)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: kotlinx.coroutines.Job transitiveCoroutineParent(kotlinx.coroutines.Job,kotlinx.coroutines.Job)
kotlin.collections.ArraysKt___ArraysKt: int sumBy(char[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilder: int hashCode()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(byte[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.coroutines.ContinuationKt$Continuation$1: ContinuationKt$Continuation$1(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List mutableListOf(java.lang.Object[])
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse-oBK06Vg(int[],int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(java.lang.Object[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: boolean isReadable(java.nio.file.Path)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.builders.MapBuilder: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.OpDescriptor: java.lang.String toString()
kotlin.time.Duration$Companion: kotlin.time.Duration parseIsoStringOrNull-FghU774(java.lang.String)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Comparable min(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte find(byte[],kotlin.jvm.functions.Function1)
kotlin.time.Duration: Duration(long)
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
kotlinx.coroutines.EventLoopImplBase: void schedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlin.text.StringsKt__StringsKt: boolean startsWith(java.lang.CharSequence,char,boolean)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceFirstCharWithCharSequence(java.lang.String,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlinx.coroutines.channels.BroadcastChannel)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection flatMapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(long[],kotlin.jvm.functions.Function1)
kotlin.properties.PropertyDelegateProvider: java.lang.Object provideDelegate(java.lang.Object,kotlin.reflect.KProperty)
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KProperty getReflected()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float singleOrNull(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysKt: char maxOrThrow(char[])
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
kotlin.jvm.internal.Lambda: int getArity()
kotlin.collections.GroupingKt__GroupingKt: java.util.Map reduce(kotlin.collections.Grouping,kotlin.jvm.functions.Function3)
kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1: SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfULong(byte[],kotlin.jvm.functions.Function1)
kotlin.ULong: long plus-WZ4Q5Ns(long,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(short[],kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: float cbrt(float)
kotlin.collections.builders.MapBuilderKeys: java.util.Iterator iterator()
kotlinx.coroutines.flow.FlowKt__ContextKt: void checkFlowContext$FlowKt__ContextKt(kotlin.coroutines.CoroutineContext)
kotlin.UnsignedKt: java.lang.String ulongToString(long,int)
kotlin.time.DurationKt: long getMicroseconds(double)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decapitalize(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(long[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.UCollectionsKt: UCollectionsKt()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel zip$default(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.util.List dumpDebuggerInfo()
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$get_next$FU$p()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
kotlin.UShort: byte mod-7apg3OU(short,byte)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong getOrNull-r7IrZao(long[],int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: ChannelsKt__DeprecatedKt$mapIndexed$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.time.Duration: java.lang.String toString-impl(long)
kotlin.random.Random$Default: byte[] nextBytes(int)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
kotlinx.coroutines.Job$DefaultImpls: boolean cancel$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] plus-uWY9BYg(int[],int)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: kotlin.coroutines.CoroutineContext getContext()
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.flow.Flow fuseStateFlow(kotlinx.coroutines.flow.StateFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.UShort: short toUShort-Mh2AYeg(short)
kotlinx.coroutines.sync.SemaphoreImpl: SemaphoreImpl(int,int)
kotlin.collections.CollectionsKt__MutableCollectionsKt: void minusAssign(java.util.Collection,kotlin.sequences.Sequence)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(java.lang.Iterable,kotlin.jvm.functions.Function3)
kotlin.time.TimeMark: kotlin.time.TimeMark minus-LRDsOJo(long)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Throwable getReceiveException()
kotlin.text.Regex$special$$inlined$fromInt$1: Regex$special$$inlined$fromInt$1(int)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List List(int,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer maxWith(int[],java.util.Comparator)
kotlinx.coroutines.channels.BufferedChannel$onSend$1: void invoke(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.collections.SetsKt___SetsKt: java.util.Set minus(java.util.Set,java.lang.Object[])
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol access$getSTATE_COMPLETED$p()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte minWithOrNull(byte[],java.util.Comparator)
kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] getSlots()
kotlin.collections.ArraysKt___ArraysKt: void reverse(boolean[])
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CoroutineContextKt$foldCopies$1: kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: SequencesKt___SequencesKt$runningFold$1(java.lang.Object,kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.random.KotlinRandom$Companion: KotlinRandom$Companion()
kotlin.DeepRecursiveScopeImpl: void access$setCont$p(kotlin.DeepRecursiveScopeImpl,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.SemaphoreSegment: SemaphoreSegment(long,kotlinx.coroutines.sync.SemaphoreSegment,int)
kotlin.collections.ArraysKt___ArraysKt: long elementAtOrElse(long[],int,kotlin.jvm.functions.Function1)
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String[] s()
kotlin.text.StringsKt___StringsKt: char last(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: DebugCoroutineInfoImpl(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.debug.internal.StackTraceFrame,long)
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$1: BufferedChannel$onReceiveOrNull$1()
kotlinx.coroutines.internal.Segment: int getNumberOfSlots()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence flatten(kotlin.sequences.Sequence)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence mapNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow conflate(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean isClosed()
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelIterator iterator()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(double[])
kotlin.time.MonotonicTimeSource: MonotonicTimeSource()
kotlinx.coroutines.JobNode: JobNode()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
kotlin.collections.ArrayDeque: java.lang.Object first()
kotlin.collections.UCollectionsKt___UCollectionsKt: int sumOfUShort(java.lang.Iterable)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: float minOf(short[],kotlin.jvm.functions.Function1)
kotlin.text.CharsKt__CharJVMKt: java.lang.String titlecase(char,java.util.Locale)
kotlin.jvm.optionals.OptionalsKt: java.lang.Object getOrDefault(java.util.Optional,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object single(kotlin.sequences.Sequence)
kotlinx.coroutines.flow.FlowKt__ErrorsKt: boolean isCancellationCause$FlowKt__ErrorsKt(java.lang.Throwable,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.CompletableJob$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.CompletableJob,kotlin.coroutines.CoroutineContext$Key)
kotlin.math.MathKt__MathJVMKt: float asin(float)
kotlinx.coroutines.Job$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.SendChannel: void invokeOnClose(kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object indexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object access$doSelectSuspend(kotlinx.coroutines.selects.SelectImplementation,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.selects.SelectClause2Impl: kotlin.jvm.functions.Function3 getProcessResFunc()
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,byte)
kotlinx.coroutines.flow.StartedEagerly: kotlinx.coroutines.flow.Flow command(kotlinx.coroutines.flow.StateFlow)
kotlin.jvm.internal.TypeIntrinsics: java.util.Iterator asMutableIterator(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List minus(java.lang.Iterable,java.lang.Iterable)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
kotlin.sequences.SequencesKt__SequencesKt$flatten$2: java.util.Iterator invoke(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt$withIndex$1: ArraysKt___ArraysKt$withIndex$1(java.lang.Object[])
kotlin.jvm.internal.CharSpreadBuilder: char[] toArray()
kotlin.text.StringsKt___StringsKt: java.util.List zipWithNext(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger rem(java.math.BigInteger,java.math.BigInteger)
kotlin.collections.ArraysKt___ArraysJvmKt: long elementAt(long[],int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float min(java.lang.Float[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(long[])
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: double maxOf(double,double)
kotlin.collections.ArraysKt___ArraysKt: double component1(double[])
kotlin.collections.MapAccessorsKt: java.lang.Object getValue(java.util.Map,java.lang.Object,kotlin.reflect.KProperty)
kotlin.math.MathKt__MathJVMKt: double cos(double)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long minWithOrNull(long[],java.util.Comparator)
kotlin.collections.MapsKt___MapsKt: java.util.List map(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: ConcurrentWeakMap$Entry(java.lang.Object,java.lang.Object)
kotlin.reflect.TypeVariableImpl: java.lang.String toString()
kotlin.math.MathKt__MathJVMKt: float sin(float)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer lastOrNull(int[])
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.selects.SelectClause1 onReceiveOrNull(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toChannel(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-EtDCXyQ(short[],short,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short minOrNull(short[])
kotlin.ranges.UIntRange: kotlin.ranges.UIntRange access$getEMPTY$cp()
kotlin.text.StringsKt___StringsKt: java.util.Map associateWith(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.builders.MapBuilder$Companion: int access$computeHashSize(kotlin.collections.builders.MapBuilder$Companion,int)
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: kotlin.time.TimeMark plus-LRDsOJo(long)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow buffer(kotlinx.coroutines.flow.Flow,int)
kotlin.jvm.internal.TypeReference: boolean equals(java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode peek()
kotlin.sequences.SequencesKt___SequencesKt: double averageOfByte(kotlin.sequences.Sequence)
kotlin.collections.builders.SerializedMap$Companion: SerializedMap$Companion()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(short[])
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfter$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.io.path.CopyActionContext: kotlin.io.path.CopyActionResult copyToIgnoringExistingDirectory(java.nio.file.Path,java.nio.file.Path,boolean)
kotlin.collections.ArraysKt___ArraysKt: boolean none(int[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: ChannelsKt__DeprecatedKt$distinctBy$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any-GBYM_sE(byte[])
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,kotlin.sequences.Sequence)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRightIndexed-bzxtMww(short[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: kotlin.time.TimeMark plus-LRDsOJo(long)
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,short)
kotlin.collections.ArraysKt___ArraysKt: byte[] sliceArray(byte[],kotlin.ranges.IntRange)
kotlin.collections.ArraysKt___ArraysKt: char last(char[])
kotlin.math.MathKt__MathJVMKt: void getAbsoluteValue$annotations(double)
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyOfRangeInline(byte[],int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-kBb4a-s(short[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.LimitingDispatcher: void afterTask()
kotlinx.coroutines.Job: boolean start()
kotlin.collections.ArraysKt___ArraysKt: double average(long[])
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
kotlin.collections.builders.MapBuilder$Itr: void initNext$kotlin_stdlib()
kotlin.jvm.internal.Reflection: Reflection()
kotlin.collections.CollectionsKt__ReversedViewsKt: java.util.List asReversedMutable(java.util.List)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int lastIndexOf(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.UIntArray: int getSize()
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1: java.util.Iterator iterator()
kotlinx.coroutines.CoroutineDispatcher$Key$1: kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(byte[],java.util.Comparator)
kotlinx.coroutines.EventLoopImplBase: java.lang.Object delay(long,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] copyOf-rL5Bavg(short[])
kotlinx.coroutines.JobNode: void setJob(kotlinx.coroutines.JobSupport)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: java.lang.String toString()
kotlin.sequences.SequencesKt___SequencesKt: int sumOfInt(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: char[] sliceArray(char[],kotlin.ranges.IntRange)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobSupport$ChildCompletion: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(boolean[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ClassReference: int hashCode()
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: kotlinx.coroutines.internal.Symbol access$getREHASH$p()
kotlin.io.FilesKt__UtilsKt: java.io.File resolveSibling(java.io.File,java.lang.String)
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String m()
kotlin.jvm.internal.ClassReference: boolean isCompanion()
kotlin.UShort: int times-WZ4Q5Ns(short,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle-2D5oskM(int[],kotlin.random.Random)
kotlin.time.AdjustedTimeMark: kotlin.time.TimeMark getMark()
kotlin.collections.EmptyIterator: boolean hasNext()
kotlin.io.ByteStreamsKt$iterator$1: boolean getFinished()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow runningReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.text.RegexKt: kotlin.text.MatchResult access$matchEntire(java.util.regex.Matcher,java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character randomOrNull(char[],kotlin.random.Random)
kotlin.jvm.internal.Ref$DoubleRef: java.lang.String toString()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-XUkPCBk(int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-WpHrYlw$default(byte[],byte,int,int,int,java.lang.Object)
kotlin.io.ByteStreamsKt: kotlin.collections.ByteIterator iterator(java.io.BufferedInputStream)
kotlinx.coroutines.JobKt__FutureKt: void cancelFutureOnCancellation(kotlinx.coroutines.CancellableContinuation,java.util.concurrent.Future)
kotlinx.coroutines.flow.ReadonlyStateFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.MapsKt__MapsKt: boolean contains(java.util.Map,java.lang.Object)
kotlinx.coroutines.DebugKt: boolean getDEBUG()
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1: StreamsKt$asSequence$$inlined$Sequence$1(java.util.stream.Stream)
kotlin.text.StringsKt___StringsKt: java.lang.Object minOfWith(java.lang.CharSequence,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.TypeAliasesKt: void Exception$annotations()
kotlin.io.ByteStreamsKt: java.io.BufferedReader bufferedReader$default(java.io.InputStream,java.nio.charset.Charset,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object firstNotNullOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(float[])
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.FileVisitResult toFileVisitResult$PathsKt__PathRecursiveFunctionsKt(kotlin.io.path.OnErrorResult)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: java.lang.Object tryResume(kotlin.Unit,java.lang.Object)
kotlin.ranges.ClosedFloatRange: boolean contains(float)
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.selects.SelectImplementation: void checkClauseObject(java.lang.Object)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set createSetBuilder(int)
kotlin.random.FallbackThreadLocalRandom: java.util.Random getImpl()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(long[],long[])
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.SharedFlowSlot createSlot()
kotlinx.coroutines.EventLoopImplBase: void setCompleted(boolean)
kotlinx.coroutines.Deferred: java.lang.Object getCompleted()
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater access$getControlState$FU$p()
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext)
kotlin.time.AbstractLongTimeSource: kotlin.time.TimeMark markNow()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean all-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UShort minWith-eOHTfZs(short[],java.util.Comparator)
kotlin.jvm.functions.Function13: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1: java.lang.Boolean invoke(java.lang.Object)
kotlin.reflect.KType$DefaultImpls: void getClassifier$annotations()
kotlin.sequences.GeneratorSequence$iterator$1: void remove()
kotlin.jvm.internal.PackageReference: int hashCode()
kotlinx.coroutines.JobSupport: void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-QwZRm1k(long[])
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(float[],kotlin.jvm.functions.Function1)
kotlin.io.LineReader: void resetAll()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(int,short)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map createMapBuilder()
kotlinx.coroutines.selects.SelectClause0Impl: kotlin.jvm.functions.Function3 getOnCancellationConstructor()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1: int compare(java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.io.encoding.DecodeInputStream: void shiftByteBufferToStartIfNeeded()
kotlin.collections.ArraysKt___ArraysKt: double last(double[])
kotlinx.coroutines.CompletableDeferred$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.CompletableDeferred,kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(long[],kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
kotlin.io.ConsoleKt: void print(char)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence onEach(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.time.Duration$Companion: void getMinutes-UwyO8pc$annotations(long)
kotlin.collections.ArraysKt___ArraysKt: boolean[] sliceArray(boolean[],java.util.Collection)
kotlin.collections.MapWithDefaultImpl: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map aggregate(kotlin.collections.Grouping,kotlin.jvm.functions.Function4)
kotlinx.coroutines.EventLoopImplBase: void rescheduleAllDelayed()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
kotlin.SafePublicationLazyImpl: java.lang.String toString()
kotlin.ranges.IntRange: boolean equals(java.lang.Object)
kotlin.text.StringsKt__StringBuilderJVMKt: StringsKt__StringBuilderJVMKt()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replaceFirst$default(java.lang.String,char,char,boolean,int,java.lang.Object)
kotlin.UShortKt: short toUShort(long)
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode[] values()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer minOrNull(int[])
kotlinx.coroutines.Deferred$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Deferred,kotlin.coroutines.CoroutineContext)
kotlin.text.StringsKt___StringsKt: java.util.HashSet toHashSet(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character reduceOrNull(char[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(java.lang.Object[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.collections.ArraysKt___ArraysKt: int count(char[],kotlin.jvm.functions.Function1)
kotlin.sequences.DropWhileSequence: java.util.Iterator iterator()
kotlin.sequences.SequencesKt___SequencesKt$elementAt$1: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.internal.FunctionReference: int getArity()
kotlinx.coroutines.channels.LazyActorCoroutine: void access$onSendRegFunction(kotlinx.coroutines.channels.LazyActorCoroutine,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String getLastObservedThreadName()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxByOrThrow(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character singleOrNull(char[])
kotlin.collections.SetsKt__SetsKt: java.util.Set buildSet(int,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List take-qFRl0hI(int[],int)
kotlin.io.FilePathComponents: boolean isRooted()
kotlinx.coroutines.channels.TickerChannelsKt: kotlinx.coroutines.channels.ReceiveChannel ticker(long,long,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.TickerMode)
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(double)
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol access$getNO_RESULT$p()
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1: FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.MovingSubList: MovingSubList(java.util.List)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeRange(java.lang.CharSequence,kotlin.ranges.IntRange)
kotlin.collections.EmptyList: java.lang.Object readResolve()
kotlin.collections.builders.MapBuilderEntries: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysKt: int sumBy(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.InvokeOnCancel: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: UnbiasedSelectBuilderImpl(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(char[])
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.time.TimeKt: java.lang.Object withTimeoutOrNull(java.time.Duration,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path absolute(java.nio.file.Path)
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object awaitPending(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.FastServiceLoader: FastServiceLoader()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] asULongArray(long[])
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(java.lang.Object[])
kotlin.comparisons.UComparisonsKt___UComparisonsKt: short minOf-5PvTz6A(short,short)
kotlin.math.MathKt__MathJVMKt: float floor(float)
kotlinx.coroutines.JobSupport$AwaitContinuation: java.lang.String nameString()
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.ranges.IntRange)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: void invoke(java.lang.Throwable)
kotlin.io.encoding.Base64: java.lang.Appendable encodeToAppendable$default(kotlin.io.encoding.Base64,byte[],java.lang.Appendable,int,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(short[],short[])
kotlin.sequences.TransformingIndexedSequence$iterator$1: boolean hasNext()
kotlin.collections.AbstractMap: java.lang.String toString()
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1: kotlin.Pair invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.ChannelAsFlow: kotlinx.coroutines.flow.Flow dropChannelOperators()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List take-r7IrZao(long[],int)
kotlin.io.encoding.Base64: boolean isUrlSafe$kotlin_stdlib()
kotlin.time.DurationKt: void getMicroseconds$annotations(double)
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: SafeCollectorKt$emitFun$1()
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: MutexImpl$SelectInstanceWithOwner(kotlinx.coroutines.sync.MutexImpl,kotlinx.coroutines.selects.SelectInstanceInternal,java.lang.Object)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
kotlin.collections.EmptySet: boolean contains(java.lang.Void)
kotlinx.coroutines.DispatchedCoroutine: DispatchedCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlin.io.FileSystemException: java.io.File getFile()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfULong(kotlin.ULong[])
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldIndexed-mwnnOCs(long[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.coroutines.jvm.internal.RunSuspend: kotlin.Result getResult-xLWZpok()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence subSequence(java.lang.String,int,int)
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api30Impl: int getImportantForContentCapture(android.view.View)
kotlin.UShortArray: int getSize-impl(short[])
kotlinx.coroutines.channels.LazyActorCoroutine$onSend$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: BufferedChannel$receiveCatchingOnNoWaiterSuspend$1(kotlinx.coroutines.channels.BufferedChannel,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt: UArraysKt()
kotlin.jvm.internal.TypeReference: java.util.List getArguments()
kotlin.collections.ArraysKt___ArraysKt: double averageOfInt(java.lang.Integer[])
kotlin.sequences.DropWhileSequence$iterator$1: DropWhileSequence$iterator$1(kotlin.sequences.DropWhileSequence)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException(java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence onEachIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List slice(java.util.List,kotlin.ranges.IntRange)
kotlin.collections.ArraysKt___ArraysKt: int sumBy(float[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,int)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: ChannelFlowMerge$collectTo$2$emit$1(kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2,kotlin.coroutines.Continuation)
kotlin.ranges.CharRange: java.lang.Character getStart()
kotlin.io.path.PathsKt__PathUtilsKt: boolean isSameFileAs(java.nio.file.Path,java.nio.file.Path)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext)
kotlin.time.AbstractLongTimeSource$LongTimeMark: int hashCode()
kotlinx.coroutines.selects.SelectImplementation: kotlin.coroutines.CoroutineContext getContext()
kotlin.NumbersKt__NumbersJVMKt: float fromBits(kotlin.jvm.internal.FloatCompanionObject,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapIndexedTo-pe2Q0Dw(long[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.reflect.KProperty2: java.lang.Object getDelegate(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: void selectInRegistrationPhase(java.lang.Object)
kotlin.collections.MapWithDefaultImpl: java.lang.Object get(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List map-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMap$values$1$iterator$1: java.lang.Object next()
kotlin.jvm.internal.MutablePropertyReference0Impl: MutablePropertyReference0Impl(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: boolean markAsClosed()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1: java.lang.Object[] invoke()
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
kotlin.reflect.KCallable$DefaultImpls: void isSuspend$annotations()
kotlin.sequences.SequenceScope: java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.time.DurationKt: long durationOf(long,int)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(short[],int,int,int,java.lang.Object)
kotlinx.coroutines.JobKt__FutureKt: kotlinx.coroutines.DisposableHandle cancelFutureOnCompletion(kotlinx.coroutines.Job,java.util.concurrent.Future)
kotlinx.coroutines.ExceptionsKt: void addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getINTERRUPTED_RCV$p()
kotlin.time.Duration$Companion: long parse-UwyO8pc(java.lang.String)
kotlin.io.ByteStreamsKt: long copyTo$default(java.io.InputStream,java.io.OutputStream,int,int,java.lang.Object)
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: JobSupport$addLastAtomic$$inlined$addLastIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int reduce-WyvcNBI(int[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String toString()
kotlin.UIntArray: int hashCode-impl(int[])
kotlin.collections.ArraysKt___ArraysKt: void shuffle(float[])
kotlin.time.DurationKt: long getMicroseconds(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLast-r7IrZao(long[],int)
kotlin.collections.AbstractCollection$toString$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean firstOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1: java.lang.Boolean invoke(java.lang.Object)
kotlin.SynchronizedLazyImpl: java.lang.Object writeReplace()
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyOfRange(byte[],int,int)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(float[],int,int)
kotlin.collections.ArraysKt___ArraysKt: double maxOf(float[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1: SequencesKt___SequencesKt$groupingBy$1(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.ULong min-QwZRm1k(long[])
kotlin.jvm.internal.ArrayIterator: boolean hasNext()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.jvm.internal.BooleanSpreadBuilder: void add(boolean)
kotlinx.coroutines.selects.SelectInstance: boolean trySelect(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] plus-kdPth3s(byte[],byte[])
kotlin.time.MeasureTimeKt: kotlin.time.TimedValue measureTimedValue(kotlin.time.TimeSource,kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: FlowKt__DelayKt$sample$2(long,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.collections.LongIterator: java.lang.Object next()
kotlinx.coroutines.JobSupport$ChildCompletion: void invoke(java.lang.Throwable)
kotlin.ranges.URangesKt___URangesKt: short coerceAtLeast-5PvTz6A(short,short)
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean getEnableCreationStackTraces$kotlinx_coroutines_core()
kotlin.collections.AbstractCollection: boolean contains(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character firstOrNull(char[])
kotlin.collections.ArraysKt___ArraysKt: void shuffle(byte[],kotlin.random.Random)
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext$Key getKey()
kotlin.io.encoding.Base64: int encodeIntoByteArray$default(kotlin.io.encoding.Base64,byte[],byte[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.channels.ReceiveChannel fixedPeriodTicker(kotlinx.coroutines.CoroutineScope,long,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-PabeH-Q(long[],long[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt$withIndex$8: java.lang.Object invoke()
kotlinx.coroutines.flow.MutableSharedFlow: void resetReplayCache()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] onEach-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getState$kotlinx_coroutines_core()
kotlin.ranges.RangesKt___RangesKt: long random(kotlin.ranges.LongRange,kotlin.random.Random)
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean isFinished(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence take(kotlin.sequences.Sequence,int)
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence shuffled(kotlin.sequences.Sequence,kotlin.random.Random)
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(float[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable[] sortedArrayDescending(java.lang.Comparable[])
kotlin.collections.SetsKt___SetsKt: java.util.Set plusElement(java.util.Set,java.lang.Object)
kotlinx.coroutines.EventLoopImplBase: boolean isCompleted()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAt(java.util.List,int)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.LocalVariableReference: java.lang.Object get()
kotlinx.coroutines.channels.BufferedChannel: java.lang.String toStringDebug$kotlinx_coroutines_core()
kotlin.text.StringsKt___StringsKt: java.util.List chunked(java.lang.CharSequence,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer firstOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.time.DurationJvmKt: java.text.DecimalFormat createFormatForDecimals(int)
kotlinx.coroutines.JobSupport: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
kotlin.collections.ArraysKt___ArraysJvmKt: int elementAt(int[],int)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: byte toByte(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(java.lang.Object[])
kotlin.ranges.ULongRange$Companion: ULongRange$Companion()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
kotlinx.coroutines.channels.ClosedSendChannelException: ClosedSendChannelException(java.lang.String)
kotlinx.coroutines.Job: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
kotlin.io.TextStreamsKt$readLines$1: java.lang.Object invoke(java.lang.Object)
kotlin.UByteArray: kotlin.UByteArray box-impl(byte[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object getNextParkedWorker()
kotlinx.coroutines.selects.UnbiasedSelectImplementation: void shuffleAndRegisterClauses()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence lineSequence(java.lang.CharSequence)
kotlinx.coroutines.flow.SharedFlowImpl: void access$enqueueLocked(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange)
kotlinx.coroutines.JobCancellationException: java.lang.String toString()
kotlin.math.MathKt__MathJVMKt: float min(float,float)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence dropWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(char[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(short[],kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: double acosh(double)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(byte[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.text.DelimitedRangesSequence: int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
kotlinx.coroutines.ParentJob$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.ParentJob,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SafeFlow: SafeFlow(kotlin.jvm.functions.Function2)
kotlin.io.ByteStreamsKt: java.io.BufferedWriter bufferedWriter(java.io.OutputStream,java.nio.charset.Charset)
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: long getReceiversCounter$kotlinx_coroutines_core()
kotlin.NumbersKt__NumbersJVMKt: NumbersKt__NumbersJVMKt()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterNot-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(float[])
kotlin.NumbersKt__NumbersJVMKt: long takeLowestOneBit(long)
kotlinx.coroutines.CancelledContinuation: boolean makeResumed()
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.io.encoding.Base64Kt: void getBase64EncodeMap$annotations()
kotlin.text.StringsKt__StringsKt: int indexOfAny(java.lang.CharSequence,java.util.Collection,int,boolean)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger div(java.math.BigInteger,java.math.BigInteger)
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(double[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.ListBuilderKt: java.lang.String access$subarrayContentToString(java.lang.Object[],int,int)
kotlinx.coroutines.internal.LockFreeTaskQueue: int getSize()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List windowed$default(java.lang.Iterable,int,int,boolean,int,java.lang.Object)
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1: TickerChannelsKt$fixedDelayTicker$1(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyOfRange(short[],int,int)
kotlinx.coroutines.channels.BufferedChannel$sendImpl$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: FlowKt__MigrationKt$onErrorReturn$2(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.Job: void cancel()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMap: java.lang.String toString(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOrThrow(java.lang.Comparable[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlin.collections.MutableMapWithDefaultImpl: java.util.Collection getValues()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
kotlin.collections.ArraysKt___ArraysKt: void reverse(double[],int,int)
kotlin.enums.EnumEntriesList: EnumEntriesList(kotlin.jvm.functions.Function0)
kotlin.properties.Delegates: kotlin.properties.ReadWriteProperty vetoable(java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.io.FilesKt__UtilsKt: java.io.File createTempDir$default(java.lang.String,java.lang.String,java.io.File,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable minOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.text.Regex$Companion: java.lang.String escapeReplacement(java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: SequencesKt___SequencesKt$runningReduce$1(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyInto$default(boolean[],boolean[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMutableSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean all-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(char[],kotlin.jvm.functions.Function1)
com.automation.flipkart.engine.TrafficAnalyzer$Strategy: com.automation.flipkart.engine.TrafficAnalyzer$Strategy valueOf(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: float minOf(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long minByOrNull(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StateFlowSlot: boolean allocateLocked(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(double[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toList(java.lang.Iterable)
kotlin.text.CharCategory: java.lang.String getCode()
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.OpenEndRange,int)
kotlin.enums.EnumEntriesList: java.lang.Enum[] getEntries()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Float minOrNull(java.lang.Iterable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWith-myNOsp4(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
kotlin.io.FileTreeWalk: FileTreeWalk(java.io.File,kotlin.io.FileWalkDirection)
kotlin.math.MathKt__MathJVMKt: MathKt__MathJVMKt()
kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator getItemIterator()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ThreadLocalKey: kotlinx.coroutines.internal.ThreadLocalKey copy(java.lang.ThreadLocal)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysUtilJVM: ArraysUtilJVM()
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: FlowKt__LimitKt$transformWhile$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.collections.EmptyMap: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(float[],kotlin.jvm.functions.Function1)
kotlin.text.MatcherMatchResult$groupValues$1: boolean contains(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: double averageOfLong(java.lang.Long[])
kotlin.ranges.RangesKt___RangesKt: RangesKt___RangesKt()
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List shuffled(java.lang.Iterable,java.util.Random)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short firstOrNull(short[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.lang.Iterable,java.lang.Object[])
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
kotlin.coroutines.CombinedContext: java.lang.String toString()
kotlin.io.path.LinkFollowing: LinkFollowing()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character lastOrNull(char[],kotlin.jvm.functions.Function1)
kotlin.ULongKt: long toULong(byte)
kotlinx.coroutines.selects.OnTimeout: OnTimeout(long)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] $values()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet: java.util.Iterator iterator()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.sequences.SequencesKt__SequencesKt$flatten$2: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
kotlin.collections.builders.MapBuilder$Companion: MapBuilder$Companion()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short single-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.io.LineReader: LineReader()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(double[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$receiveOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation)
kotlin.sequences.IndexingSequence$iterator$1: kotlin.collections.IndexedValue next()
kotlin.random.XorWowRandom$Companion: XorWowRandom$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.scheduling.WorkQueue: void decrementIfBlocking(kotlinx.coroutines.scheduling.Task)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double findLast(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.FusibleFlow: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(long[])
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.Float toFloatOrNull(java.lang.String)
kotlin.jvm.optionals.OptionalsKt: java.lang.Object getOrElse(java.util.Optional,kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
kotlin.collections.builders.SetBuilder: java.lang.Object writeReplace()
kotlin.text.CharsKt__CharJVMKt: java.lang.String uppercase(char)
kotlinx.coroutines.flow.FlowKt: java.lang.Object lastOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getNO_CLOSE_CAUSE$p()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: float minOrThrow(kotlin.sequences.Sequence)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void validateNode$kotlinx_coroutines_core(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.UShort: int compareTo-xj2QHRw(short,short)
kotlinx.coroutines.BuildersKt__Builders_commonKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.NumbersKt__FloorDivModKt: int floorDiv(int,int)
kotlin.io.ConsoleKt: void println()
kotlinx.coroutines.channels.BufferedChannel: void receiveImplOnNoWaiter(kotlinx.coroutines.channels.ChannelSegment,int,long,kotlinx.coroutines.Waiter,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: double random(double[],kotlin.random.Random)
kotlinx.coroutines.CoroutineExceptionHandler$Key: CoroutineExceptionHandler$Key()
kotlinx.coroutines.channels.ConflatedBufferedChannel: ConflatedBufferedChannel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectImplementation$ClauseData: void dispose()
kotlin.ULong: long floorDiv-xj2QHRw(long,short)
kotlin.ranges.RangesKt___RangesKt: short coerceAtMost(short,short)
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(double[],kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt__MapsKt: java.util.Iterator iterator(java.util.Map)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.String toString()
kotlin.jvm.internal.Intrinsics: boolean areEqual(float,java.lang.Float)
kotlin.jvm.internal.MutablePropertyReference2Impl: java.lang.Object get(java.lang.Object,java.lang.Object)
kotlin.collections.builders.ListBuilder: java.lang.Object writeReplace()
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence padEnd$default(java.lang.CharSequence,int,char,int,java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcher: java.lang.Object delay(long,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: java.lang.Object invoke(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin._Assertions: void getENABLED$annotations()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.Object createRangeInfo(int,float,float,float)
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.sync.MutexImpl: void getOnLock$annotations()
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException)
kotlinx.coroutines.channels.ProduceKt$awaitClose$2: java.lang.Object invoke()
kotlinx.coroutines.internal.MainDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: kotlinx.coroutines.debug.internal.Marked access$mark(java.lang.Object)
kotlin.text.StringsKt__StringsKt: void requireNonNegativeLimit(int)
kotlin.ranges.ClosedDoubleRange: java.lang.Double getStart()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOf-XzdR7RA(short[],short)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(long[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.ranges.UIntRange: boolean equals(java.lang.Object)
kotlin.collections.BooleanIterator: boolean nextBoolean()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: ConcurrentWeakMap()
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean access$isFinished(kotlinx.coroutines.debug.internal.DebugProbesImpl,kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
kotlin.sequences.SubSequence$iterator$1: boolean hasNext()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List mapIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.scheduling.DefaultIoScheduler: java.lang.String toString()
kotlin.collections.AbstractCollection: java.lang.String toString()
kotlin.collections.MapWithDefaultImpl: int size()
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyInto$default(byte[],byte[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job,kotlinx.coroutines.Job)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectImplementation: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getState$FU$p()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object any(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable maxOf(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)
kotlinx.coroutines.flow.FlowKt: java.lang.Object toList(kotlinx.coroutines.flow.Flow,java.util.List,kotlin.coroutines.Continuation)
androidx.work.NetworkType: androidx.work.NetworkType[] values()
androidx.core.view.ViewCompat$Api29Impl: android.view.contentcapture.ContentCaptureSession getContentCaptureSession(android.view.View)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
kotlin.ResultKt: java.lang.Object runCatching(kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sorted(kotlin.sequences.Sequence)
kotlin.text.CharDirectionality$Companion: CharDirectionality$Companion()
kotlin.collections.ArraysKt___ArraysJvmKt: int contentDeepHashCodeNullable(java.lang.Object[])
kotlin.ULongArray: boolean retainAll(java.util.Collection)
kotlin.io.FilesKt__FileReadWriteKt: java.io.FileOutputStream outputStream(java.io.File)
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object sendBroadcast$kotlinx_coroutines_core(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
kotlin.UShort: long mod-VKZWuLQ(short,long)
kotlin.jvm.internal.ClassReference: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: long component5(long[])
kotlin.ranges.CharRange$Companion: CharRange$Companion()
kotlin.text.StringsKt___StringsKt: java.lang.Float minOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.time.DurationKt: void getMilliseconds$annotations(long)
kotlin.time.DurationKt: void getSeconds$annotations(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-L83TJbI(int[],int[],kotlin.jvm.functions.Function2)
kotlin.collections.Grouping: java.lang.Object keyOf(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$minus$2: SequencesKt___SequencesKt$minus$2(kotlin.sequences.Sequence,java.lang.Object[])
kotlin.time.TimeMark: boolean hasPassedNow()
kotlin.UShort: int rem-xj2QHRw(short,short)
kotlin.UShortArray: java.util.Iterator iterator()
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Object minBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode getNext()
kotlin.io.ByteStreamsKt: long copyTo(java.io.InputStream,java.io.OutputStream,int)
kotlin.time.Duration: int hashCode()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int getSize()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduce-WyvcNBI(int[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KProperty$Getter getGetter()
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
kotlin.NumbersKt__NumbersJVMKt: boolean isInfinite(float)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte lastOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.String joinToString(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.IntIterator: java.lang.Object next()
kotlin.collections.MutableMapWithDefaultImpl: int hashCode()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Float minOrNull(kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysKt: float first(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: int[] onEach(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterNot(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.selects.SelectImplementation: boolean access$isCancelled(kotlinx.coroutines.selects.SelectImplementation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduceIndexed-EOyYB1Y(byte[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object updateCellReceiveSlow(kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object)
kotlin.jvm.functions.Function11: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object random(java.lang.Object[])
kotlin.collections.MutableMapWithDefaultImpl: java.lang.Object getOrImplicitDefault(java.lang.Object)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object single(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: kotlinx.coroutines.flow.Flow dropChannelOperators()
kotlinx.coroutines.flow.StartedWhileSubscribed: int hashCode()
kotlinx.coroutines.selects.SelectClause: kotlin.jvm.functions.Function3 getProcessResFunc()
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection[] $values()
kotlin.collections.SetsKt__SetsKt: java.util.Set optimizeReadOnlySet(java.util.Set)
kotlin.io.ExceptionsKt: java.lang.String constructMessage(java.io.File,java.io.File,java.lang.String)
kotlin.Result: int hashCode()
kotlin.UIntArray: boolean retainAll(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxWithOrNull(float[],java.util.Comparator)
kotlinx.coroutines.flow.StateFlowImpl: StateFlowImpl(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(java.lang.Object[],java.util.Collection)
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(java.lang.Comparable[])
kotlin.text.StringsKt___StringsKt: double sumOfDouble(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.UByte: java.lang.String toString-impl(byte)
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceAtMost(java.lang.Comparable,java.lang.Comparable)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(int,byte)
androidx.core.os.BuildCompat$Api30Impl: int getExtensionVersion(int)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow compose(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: boolean contains-VKZWuLQ(long)
kotlin.UNumbersKt: int countOneBits-VKZWuLQ(long)
kotlinx.coroutines.JobSupport: void onCompletionInternal(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(float[],java.util.Comparator)
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection copy$default(kotlin.reflect.KTypeProjection,kotlin.reflect.KVariance,kotlin.reflect.KType,int,java.lang.Object)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object doSelectSuspend(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(byte[],kotlin.jvm.functions.Function1)
kotlin.io.FileTreeWalk: kotlin.io.FileTreeWalk maxDepth(int)
kotlin.collections.MapWithDefaultImpl: java.util.Set getKeys()
kotlinx.coroutines.ChildJob$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.ChildJob,kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobKt: void cancel$default(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.MapWithDefaultImpl: boolean containsKey(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: FlowKt__LimitKt$emitAbort$1(kotlin.coroutines.Continuation)
kotlin.io.ByteStreamsKt$iterator$1: boolean hasNext()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.collections.ArrayAsCollection: java.lang.Object[] toArray()
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$tryResume$token$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.AbstractIterator: void done()
kotlin.jvm.internal.ByteSpreadBuilder: void add(byte)
kotlinx.coroutines.CompletedWithCancellation: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] plus(boolean[],boolean[])
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: LockFreeTaskQueueCore$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double max(double[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWithTo-4D70W2E(int[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1: java.lang.Object invoke(java.lang.Object)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: long maxOf(long,long)
kotlin.collections.ArraysKt___ArraysKt: ArraysKt___ArraysKt()
kotlinx.coroutines.scheduling.CoroutineScheduler: void execute(java.lang.Runnable)
kotlin.text.StringsKt___StringsKt$groupingBy$1: java.util.Iterator sourceIterator()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete)
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.BlockingEventLoop: java.lang.Thread getThread()
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableMap(java.lang.Object)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
kotlinx.coroutines.AbstractCoroutine: void afterResume(java.lang.Object)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort--nroSd4$default(long[],int,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.DefaultIoScheduler: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: FlowKt__TransformKt$withIndex$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1,kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: boolean none(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.NonCancellable: boolean isActive()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
kotlinx.coroutines.JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
kotlin.collections.builders.SetBuilder: boolean removeAll(java.util.Collection)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
kotlinx.coroutines.debug.internal.DebugProbesKt: void probeCoroutineResumed(kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int getSize()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long component4-QwZRm1k(long[])
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
kotlin.io.TextStreamsKt: long copyTo$default(java.io.Reader,java.io.Writer,int,int,java.lang.Object)
kotlinx.coroutines.Deferred: kotlinx.coroutines.selects.SelectClause1 getOnAwait()
kotlinx.coroutines.flow.CallbackFlowBuilder: CallbackFlowBuilder(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.RingBuffer: int getSize()
kotlin.collections.EmptySet: boolean removeAll(java.util.Collection)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] copyOfRange-4UcCI2c(byte[],int,int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(short[],java.lang.Iterable)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(char[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.PrimitiveSpreadBuilder: int getPosition()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$onSend$2: BufferedChannel$onSend$2()
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(java.lang.Object[])
kotlin.SafePublicationLazyImpl$Companion: SafePublicationLazyImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: char random(char[],kotlin.random.Random)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable minOf(java.lang.Comparable,java.lang.Comparable)
kotlin.sequences.DistinctIterator: void computeNext()
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.OpenEndRange,int)
kotlin.collections.builders.MapBuilder$Companion: int computeHashSize(int)
kotlin.io.ExposingBufferByteArrayOutputStream: ExposingBufferByteArrayOutputStream(int)
kotlinx.coroutines.channels.BroadcastChannelImpl: void removeSubscriber(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.reflect.KClass$DefaultImpls: void isAbstract$annotations()
kotlin.collections.EmptyList: boolean contains(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getLastIndex-rL5Bavg$annotations(short[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(short[],kotlin.jvm.functions.Function1)
kotlin.io.FilesKt__UtilsKt$copyRecursively$2: void invoke(java.io.File,java.io.IOException)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.String invoke(kotlin.ranges.IntRange)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.FileVisitResult toFileVisitResult$PathsKt__PathRecursiveFunctionsKt(kotlin.io.path.CopyActionResult)
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy valueOf(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.OpenEndRange,int)
kotlin.collections.ArraysKt___ArraysKt: kotlin.collections.Grouping groupingBy(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.KotlinNothingValueException: KotlinNothingValueException()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: kotlinx.coroutines.selects.SelectClause1 onReceiveOrNull(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.jvm.internal.InlineMarker: void mark(int)
kotlin.collections.ArraysKt___ArraysKt: float minOrThrow(java.lang.Float[])
kotlin.StandardKt__StandardKt: StandardKt__StandardKt()
kotlinx.coroutines.flow.StateFlowSlot: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$get_state$FU$p()
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.util.Collection mapNotNullTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractIterator: AbstractIterator()
kotlin.collections.ArraysKt___ArraysKt: boolean contains(byte[],byte)
kotlin.collections.ArrayDeque: void internalStructure$kotlin_stdlib(kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toMutableList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1: java.lang.Object invoke(java.lang.Object)
kotlin.time.AbstractLongTimeSource$LongTimeMark: kotlin.time.ComparableTimeMark minus-LRDsOJo(long)
kotlin.collections.ArraysKt___ArraysKt: int maxOrThrow(int[])
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1: ConcurrentWeakMap$entries$1()
kotlin.io.FilesKt__UtilsKt: boolean startsWith(java.io.File,java.io.File)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: FlowKt__ReduceKt$fold$1(kotlin.coroutines.Continuation)
kotlin.jvm.internal.Ref$ObjectRef: Ref$ObjectRef()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] plus-gMuBH34(byte[],byte)
kotlin.time.TimedValue: java.lang.Object component1()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.util.Collection,java.util.Collection)
kotlinx.coroutines.internal.Segment: void onCancellation(int,java.lang.Throwable,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(java.lang.Object[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(char[],int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character maxOrNull(char[])
kotlin.collections.EmptySet: boolean equals(java.lang.Object)
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.EventLoop getEventLoop$kotlinx_coroutines_core()
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.text.StringsKt___StringsKt: long sumOfULong(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int lastIndexOf(java.lang.Object)
kotlin.collections.builders.MapBuilderEntries: java.util.Iterator iterator()
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowImpl: void access$cancelEmitter(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowImpl$Emitter)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
kotlin.UIntArray: boolean equals-impl(int[],java.lang.Object)
kotlin.text.CharDirectionality$Companion$directionalityMap$2: java.util.Map invoke()
kotlin.collections.ArraysKt___ArraysKt: float maxOf(float[],kotlin.jvm.functions.Function1)
kotlin.text.MatcherMatchResult$groups$1: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3(short[])
kotlin.time.Duration: long unbox-impl()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6(float[])
kotlin.collections.builders.MapBuilderEntries: void clear()
kotlin.NumbersKt: NumbersKt()
kotlinx.coroutines.flow.FlowKt__MigrationKt: java.lang.Void noImpl()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Key getKey()
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
kotlin.collections.SlidingWindowKt: kotlin.sequences.Sequence windowedSequence(kotlin.sequences.Sequence,int,int,boolean,boolean)
kotlin.collections.ArraysKt___ArraysKt: void reverse(boolean[],int,int)
kotlin.ExceptionsKt__ExceptionsKt: java.lang.StackTraceElement[] getStackTrace(java.lang.Throwable)
kotlin.time.Duration: void getInMilliseconds$annotations()
kotlinx.coroutines.flow.FlowKt: java.lang.Object toList$default(kotlinx.coroutines.flow.Flow,java.util.List,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map foldTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function3)
kotlin.ranges.RangesKt___RangesKt: java.lang.Long lastOrNull(kotlin.ranges.LongProgression)
kotlin.text.StringsKt___StringsKt: java.lang.Object firstNotNullOf(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.DefaultIoScheduler: java.util.concurrent.Executor getExecutor()
kotlin.time.TimeSource$Monotonic$ValueTimeMark: kotlin.time.TimeMark minus-LRDsOJo(long)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.SuspendKt: kotlin.jvm.functions.Function1 suspend(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.TypeIntrinsics: java.util.Map asMutableMap(java.lang.Object,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: ThreadContextKt$findOne$1()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-TUPTUsU(long[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.UShort: long minus-VKZWuLQ(short,long)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence zip(kotlin.sequences.Sequence,kotlin.sequences.Sequence)
kotlin.ranges.ULongRange: void getEndExclusive-s-VKNKU$annotations()
kotlin.collections.MapsKt___MapsKt: java.util.List flatMap(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean maxByOrThrow(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.text.StringsKt__AppendableKt: java.lang.Appendable appendLine(java.lang.Appendable)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: ComparisonsKt__ComparisonsKt$compareByDescending$1(kotlin.jvm.functions.Function1)
kotlin.ULongKt: long toULong(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(double[],kotlin.jvm.functions.Function1)
kotlin.time.Duration: java.lang.String toString-impl(long,kotlin.time.DurationUnit,int)
kotlinx.coroutines.channels.BufferedChannel$receiveImpl$1: java.lang.Void invoke(kotlinx.coroutines.channels.ChannelSegment,int,long)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Float max(java.lang.Iterable)
kotlin.sequences.SequencesKt___SequencesKt: double minOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean)
kotlinx.coroutines.CoroutineId: int hashCode()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: boolean contains(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map groupBy(java.lang.Iterable,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object elementAt(java.lang.Object[],int)
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1: ArraysKt___ArraysKt$groupingBy$1(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: boolean isTail()
kotlinx.coroutines.sync.SemaphoreKt: java.lang.Object withPermit(kotlinx.coroutines.sync.Semaphore,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
kotlin.collections.AbstractMutableMap: AbstractMutableMap()
kotlin.collections.builders.MapBuilderValues: boolean isEmpty()
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCreationStackBottom$kotlinx_coroutines_core()
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()
kotlin.time.Duration: void getInHours$annotations()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(long,long)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
kotlin.text.CharsKt__CharJVMKt: kotlin.text.CharDirectionality getDirectionality(char)
kotlin.time.ComparableTimeMark$DefaultImpls: int compareTo(kotlin.time.ComparableTimeMark,kotlin.time.ComparableTimeMark)
kotlin.coroutines.ContinuationInterceptor$Key: ContinuationInterceptor$Key()
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(char[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] toUIntArray(kotlin.UInt[])
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toMutableList(kotlin.sequences.Sequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$2: java.lang.Boolean invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.text.CharsKt__CharKt: char digitToChar(int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(int[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.MutablePropertyReference0Impl: MutablePropertyReference0Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double firstOrNull(double[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow skip(kotlinx.coroutines.flow.Flow,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.util.Collection,kotlin.sequences.Sequence)
kotlin.UInt: float toFloat-impl(int)
kotlin.collections.ArraysKt___ArraysKt: boolean reduceRight(boolean[],kotlin.jvm.functions.Function2)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] $values()
kotlin.collections.ArraysKt___ArraysKt: short maxWithOrThrow(short[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] plusElement(java.lang.Object[],java.lang.Object)
kotlin.sequences.DropWhileSequence: DropWhileSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.IntIterator iterator(int[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.properties.ReadOnlyProperty: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: CombineKt$zipImpl$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer maxOrNull(int[])
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KType nothingType(kotlin.reflect.KType)
kotlin.collections.ArrayDeque: java.lang.Object set(int,java.lang.Object)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(double[],double,int,int,int,java.lang.Object)
kotlin.collections.ArrayDeque: int negativeMod(int)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9: java.util.Iterator iterator()
kotlinx.coroutines.JobSupport: boolean getCompletionCauseHandled()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobSupport$onAwaitInternal$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.sequences.FilteringSequence: FilteringSequence(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger toBigInteger(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(char[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.String substring(java.lang.String,kotlin.ranges.IntRange)
kotlin.time.Duration$Companion: long days-UwyO8pc(double)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.UNumbersKt: long takeHighestOneBit-VKZWuLQ(long)
kotlin.collections.builders.ListBuilderKt: void resetAt(java.lang.Object[],int)
kotlin.time.DurationKt: long getMilliseconds(long)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation)
kotlin.io.FilesKt__UtilsKt: java.lang.String getExtension(java.io.File)
kotlin.text.StringsKt___StringsKt: java.util.List flatMap(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] plus-mazbYpA(short[],short[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1: java.lang.Object invoke()
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.selects.SelectOldKt: java.lang.Object selectOld$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte random-oSF2wD8(byte[],kotlin.random.Random)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-WpHrYlw$default(byte[],byte,int,int,int,java.lang.Object)
kotlinx.coroutines.JobKt: void cancel(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable)
kotlin.text.StringsKt__StringsJVMKt: byte[] encodeToByteArray(java.lang.String,int,int,boolean)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(byte[],kotlin.jvm.functions.Function1)
kotlin.NumbersKt__FloorDivModKt: long floorDiv(long,byte)
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: FlowKt__CountKt$count$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlin.ResultKt: java.lang.Object onSuccess(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobSupport: void cancel()
kotlin.text.StringsKt___StringsKt: char reduce(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlinx.coroutines.BlockingCoroutine: boolean isScopedCoroutine()
kotlin.io.ByteStreamsKt: java.io.BufferedWriter bufferedWriter$default(java.io.OutputStream,java.nio.charset.Charset,int,java.lang.Object)
kotlin.text.MatcherMatchResult$groupValues$1: boolean contains(java.lang.Object)
kotlin.jvm.internal.PropertyReference: boolean isConst()
kotlin.collections.ArraysKt___ArraysKt: boolean none(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.io.FileTreeWalk$FileTreeWalkIterator: void computeNext()
kotlin.collections.CollectionsKt___CollectionsKt: int lastIndexOf(java.util.List,java.lang.Object)
kotlinx.coroutines.CoroutineScopeKt: java.lang.Object currentCoroutineContext(kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder$EntryRef: java.lang.String toString()
kotlinx.coroutines.selects.OnTimeout$register$$inlined$Runnable$1: void run()
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedSequence(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.random.Random$Default: Random$Default()
kotlin.collections.ArraysKt__ArraysJVMKt: java.lang.Object[] orEmpty(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRight-zww5nb8(short[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.UByteArray: boolean contains(java.lang.Object)
kotlin.ULong: float toFloat-impl(long)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.String getExtension(java.nio.file.Path)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: double minOf(double,double[])
kotlin.time.LongSaturatedMathKt: long saturatingAdd-pTJri5U(long,long)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.Job getJob(kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path appendLines(java.nio.file.Path,kotlin.sequences.Sequence,java.nio.charset.Charset)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterNotTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(char[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow buffer(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.reflect.KCallable$DefaultImpls: void isAbstract$annotations()
kotlinx.coroutines.sync.Mutex: boolean holdsLock(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
kotlin.ranges.LongRange: java.lang.Comparable getEndInclusive()
kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1: kotlinx.coroutines.channels.ChannelSegment invoke(long,kotlinx.coroutines.channels.ChannelSegment)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle-oSF2wD8(byte[],kotlin.random.Random)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] sliceArray-kzHmqpY(long[],java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: int minOrThrow(int[])
kotlin.collections.MapsKt__MapsKt: java.lang.Object getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0)
kotlin.text.Typography: Typography()
kotlin.Triple: java.lang.Object getSecond()
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.BooleanIterator iterator(boolean[])
kotlin.text.StringsKt___StringsKt: int sumBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.time.Duration$Companion: kotlin.time.Duration parseOrNull-FghU774(java.lang.String)
kotlin.sequences.SubSequence$iterator$1: void drop()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
kotlin.collections.ArrayDeque: boolean add(java.lang.Object)
kotlin.collections.ReversedList: void add(int,java.lang.Object)
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException(java.lang.String,java.lang.Throwable)
kotlin.collections.ArrayDeque: boolean removeAll(java.util.Collection)
kotlin.jvm.internal.DoubleCompanionObject: double getNEGATIVE_INFINITY()
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] $values()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
kotlinx.coroutines.TimeoutKt: java.lang.Object withTimeout(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: void update$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: byte maxOf-Kr8caGY(byte,byte)
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(boolean[])
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyOf(boolean[])
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object fold$$forInline(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: void getInvariantSeparatorsPathString$annotations(java.nio.file.Path)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxWithOrNull(java.lang.Object[],java.util.Comparator)
kotlin.text.Charsets: java.nio.charset.Charset UTF32_BE()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int getWorkerCtl()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: void reverse(int[],int,int)
kotlin.collections.AbstractMutableMap: int getSize()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: ChannelFlowTransformLatest(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
kotlin.text.CharDirectionality$Companion$directionalityMap$2: CharDirectionality$Companion$directionalityMap$2()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] sortedArrayDescending-GBYM_sE(byte[])
kotlin.collections.builders.MapBuilder$EntriesItr: int nextHashCode$kotlin_stdlib()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int then$lambda$1$ComparisonsKt__ComparisonsKt(java.util.Comparator,java.util.Comparator,java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: char[] toCharArray(java.util.Collection)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceRight(java.util.List,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])
kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1: BufferedChannelKt$createSegmentFunction$1()
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence ifEmpty(kotlin.sequences.Sequence,kotlin.jvm.functions.Function0)
kotlin.collections.AbstractMap: java.lang.Object get(java.lang.Object)
kotlin.ranges.ClosedRange: java.lang.Comparable getStart()
kotlin.collections.EmptyList: void clear()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.jdk8.RegexExtensionsJDK8Kt: kotlin.text.MatchGroup get(kotlin.text.MatchGroupCollection,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.PropertyReference1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.AbstractMutableList: java.lang.Object set(int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minByOrThrow(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.attribute.FileAttributeView fileAttributesView(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.ranges.LongRange: boolean contains(long)
kotlin.ranges.RangesKt__RangesKt: kotlin.ranges.ClosedFloatingPointRange rangeTo(double,double)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9(kotlin.ranges.IntRange)
kotlin.concurrent.TimersKt$timerTask$1: TimersKt$timerTask$1(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(boolean[],boolean[])
kotlin.collections.ArraysKt___ArraysKt: void shuffle(char[])
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3)
kotlin.ranges.ComparableOpenEndRange: ComparableOpenEndRange(java.lang.Comparable,java.lang.Comparable)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfter$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.Object)
kotlin.ranges.URangesKt___URangesKt: long random(kotlin.ranges.ULongRange,kotlin.random.Random)
kotlin.collections.ArraysKt___ArraysKt: double maxOf(double[],kotlin.jvm.functions.Function1)
kotlin.coroutines.CombinedContext: CombinedContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1: java.lang.Object invoke(java.lang.Object)
kotlin.comparisons.NaturalOrderComparator: int compare(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int getSize()
kotlin.io.path.PathsKt__PathReadWriteKt: void writeText(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.EventLoop: boolean isEmpty()
kotlinx.coroutines.sync.Mutex$DefaultImpls: boolean tryLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,int,java.lang.Object)
kotlin.enums.EnumEntriesKt$enumEntries$1: EnumEntriesKt$enumEntries$1(java.lang.Enum[])
kotlinx.coroutines.sync.SemaphoreSegment: void set(int,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArrayDeque: ArrayDeque(int)
kotlin.text.Regex$Serialized: Regex$Serialized(java.lang.String,int)
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.ranges.IntProgression: boolean isEmpty()
kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResumeWithException(java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRightIndexed-mwnnOCs(long[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.scheduling.CoroutineScheduler: long incrementBlockingTasks()
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.future.FutureKt: kotlinx.coroutines.Deferred asDeferred(java.util.concurrent.CompletionStage)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.SystemPropsKt: java.lang.String systemProp(java.lang.String,java.lang.String)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.ULongArray: boolean isEmpty-impl(long[])
kotlin.random.PlatformRandom$Companion: PlatformRandom$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getIndices-QwZRm1k$annotations(long[])
kotlin.Pair: boolean equals(java.lang.Object)
kotlinx.coroutines.JobKt__JobKt: java.lang.Throwable orCancellation$JobKt__JobKt(java.lang.Throwable,kotlinx.coroutines.Job)
kotlin.text.CharsKt__CharJVMKt: char titlecaseChar(char)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short firstOrNull(short[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEachIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.sync.Semaphore: boolean tryAcquire()
kotlin.jvm.internal.FloatSpreadBuilder: float[] toArray()
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
kotlin.reflect.KClass: boolean isCompanion()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow switchMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow drop(kotlinx.coroutines.flow.Flow,int)
kotlin.sequences.TransformingIndexedSequence: java.util.Iterator iterator()
kotlin.jvm.optionals.OptionalsKt: java.util.Set toSet(java.util.Optional)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long maxOrNull(long[])
kotlinx.coroutines.DelayWithTimeoutDiagnostics$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnTimeout(kotlinx.coroutines.DelayWithTimeoutDiagnostics,long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ProducerCoroutine: kotlinx.coroutines.channels.SendChannel getChannel()
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
kotlin.reflect.KClass$DefaultImpls: void isCompanion$annotations()
kotlin.NumbersKt__FloorDivModKt: int floorDiv(int,byte)
kotlin.jvm.internal.PrimitiveSpreadBuilder: java.lang.Object toArray(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Object collectWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean last(boolean[])
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,double)
kotlin.collections.CharIterator: CharIterator()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropWhile-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KType mutableCollectionType(kotlin.reflect.KType)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo,long)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: FlowKt__TransformKt$runningReduce$1$1(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1: SequencesKt___SequencesKt$minus$1$iterator$1(kotlin.jvm.internal.Ref$BooleanRef,java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1: java.lang.Void invoke(java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.flow.MutableSharedFlow: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BroadcastChannelImpl: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.jvm.internal.Intrinsics: void throwIllegalState()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long reduceRight-s8dVfGU(long[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: java.lang.Object withState(long,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short findLast(short[],kotlin.jvm.functions.Function1)
kotlin.io.FilesKt__FileTreeWalkKt: kotlin.io.FileTreeWalk walk(java.io.File,kotlin.io.FileWalkDirection)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void stopWeakRefCleanerThread()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable maxOf(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexKt: java.lang.Object withLock$$forInline(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
kotlin.jvm.internal.FloatCompanionObject: void getNEGATIVE_INFINITY$annotations()
kotlin.collections.EmptyIterator: void set(java.lang.Void)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFold-zww5nb8(short[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.UShort$Companion: UShort$Companion()
kotlin.random.URandomKt: long nextULong(kotlin.random.Random)
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
kotlin.jvm.internal.PropertyReference: PropertyReference(java.lang.Object)
kotlinx.coroutines.channels.ChannelResult: boolean isClosed-impl(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.AbstractTimeSourceKt: void parkNanos(java.lang.Object,long)
kotlin.UByte: int rem-WZ4Q5Ns(byte,int)
kotlinx.coroutines.channels.ProduceKt$awaitClose$2: void invoke()
kotlin.collections.MapsKt___MapsKt: java.lang.Comparable minOfOrNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CoroutinesInternalError: CoroutinesInternalError(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.CompletionHandlerKt: kotlin.jvm.functions.Function1 getAsHandler(kotlinx.coroutines.CancelHandlerBase)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
kotlinx.coroutines.GlobalScope: GlobalScope()
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.CoroutineExceptionHandler,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function5)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause1 getOnReceiveCatching()
kotlin.TuplesKt: java.util.List toList(kotlin.Pair)
kotlin.collections.ArrayDeque: void clear()
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class,java.lang.String)
kotlin.UShort: void getData$annotations()
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1: java.lang.Object invoke(java.lang.Object)
kotlin.io.encoding.EncodeOutputStream: EncodeOutputStream(java.io.OutputStream,kotlin.io.encoding.Base64)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(byte[],kotlin.jvm.functions.Function2)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int lastIndexOf-uWY9BYg(int[],int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short reduceIndexedOrNull(short[],kotlin.jvm.functions.Function3)
kotlin.ranges.LongProgression: LongProgression(long,long,long)
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object constructor-impl(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(java.lang.Object[])
kotlin.text.StringsKt___StringsKt$windowed$1: java.lang.Object invoke(java.lang.Object)
kotlin.internal.RequireKotlin: int errorCode()
kotlin.ranges.UIntRange: int getStart-pVg5ArA()
kotlin.io.encoding.EncodeOutputStream: void checkOpen()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flattenMerge$default(kotlinx.coroutines.flow.Flow,int,int,java.lang.Object)
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: CallbackFlowBuilder$collectTo$1(kotlinx.coroutines.flow.CallbackFlowBuilder,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: void updateState$kotlinx_coroutines_core(java.lang.String,kotlin.coroutines.Continuation,boolean)
kotlin.sequences.TransformingSequence$iterator$1: void remove()
kotlin.collections.ArrayDeque: boolean retainAll(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: boolean any(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.io.encoding.Base64JVMKt: java.lang.String platformEncodeToString(kotlin.io.encoding.Base64,byte[],int,int)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt$withIndex$4: java.lang.Object invoke()
kotlinx.coroutines.JobSupport: void cancelInternal(java.lang.Throwable)
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry maxWithOrThrow(java.util.Map,java.util.Comparator)
kotlinx.coroutines.flow.FlowKt__CountKt$count$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
kotlin.io.path.PathsKt__PathUtilsKt: boolean exists(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer getOrNull(int[],int)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.ClassReference: java.util.List getTypeParameters()
kotlin.collections.ArraysKt___ArraysKt: double minWithOrThrow(double[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(short[],int)
kotlin.time.Duration: long unaryMinus-UwyO8pc(long)
kotlin.reflect.ParameterizedTypeImpl: java.lang.String getTypeName()
kotlin.jvm.internal.ArrayFloatIterator: float nextFloat()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
kotlin.UByte: byte dec-w2LRezQ(byte)
kotlin.jvm.internal.CharSpreadBuilder: CharSpreadBuilder(int)
kotlin.concurrent.LocksKt: java.lang.Object write(java.util.concurrent.locks.ReentrantReadWriteLock,kotlin.jvm.functions.Function0)
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
kotlin.jvm.internal.MutableLocalVariableReference: java.lang.Object get()
kotlinx.coroutines.debug.internal.DebugProbesImpl: void startWeakRefCleanerThread()
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flatMapConcat(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelCoroutine: void cancel()
kotlin.coroutines.jvm.internal.DebugMetadata: int[] i()
kotlin.collections.ArraysKt___ArraysKt: byte[] onEachIndexed(byte[],kotlin.jvm.functions.Function2)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(double[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.jvm.functions.Function0: java.lang.Object invoke()
kotlin.ULongArray: boolean equals(java.lang.Object)
kotlin.collections.MovingSubList: void move(int,int)
kotlin.random.URandomKt: void checkULongRangeBounds-eb3DHEI(long,long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOrNull(double[])
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.EventLoop currentOrNull$kotlinx_coroutines_core()
kotlin.jvm.internal.FloatCompanionObject: float getMIN_VALUE()
kotlin.internal.UProgressionUtilKt: int getProgressionLastElement-Nkh28Cs(int,int,int)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getLastObservedFrame$kotlinx_coroutines_core()
kotlin.ExceptionsKt__ExceptionsKt: void printStackTrace(java.lang.Throwable,java.io.PrintStream)
kotlinx.coroutines.ThreadContextElementKt: java.lang.Object ensurePresent(java.lang.ThreadLocal,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: java.lang.Object firstOrNull(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
kotlin.io.FilesKt__UtilsKt: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)
kotlinx.coroutines.internal.OnDemandAllocatingPoolKt: java.lang.Void loop(kotlin.jvm.functions.Function0)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: java.lang.Object setValue(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] copyInto-FUQE5sA(byte[],byte[],int,int,int)
kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int maxOrThrow-U(int[])
kotlin.collections.SlidingWindowKt: java.util.Iterator windowedIterator(java.util.Iterator,int,int,boolean,boolean)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMapMerge(kotlinx.coroutines.flow.Flow,int,kotlin.jvm.functions.Function2)
kotlin.time.Duration$Companion: long milliseconds-UwyO8pc(int)
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearchBy(java.util.List,java.lang.Comparable,int,int,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte component4-GBYM_sE(byte[])
kotlin.collections.ArraysKt___ArraysKt: float minOf(double[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringNumberConversionsKt: StringsKt__StringNumberConversionsKt()
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,int,int)
kotlin.collections.ArraysKt___ArraysKt: byte random(byte[])
kotlin.collections.builders.MapBuilder$EntriesItr: kotlin.collections.builders.MapBuilder$EntryRef next()
kotlinx.coroutines.internal.LimitedDispatcher: void dispatchInternal(java.lang.Runnable,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: kotlin.ranges.IntRange getIndices(java.lang.CharSequence)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
kotlin.ExceptionsKt: ExceptionsKt()
kotlin.text.RegexKt: kotlin.ranges.IntRange access$range(java.util.regex.MatchResult)
kotlinx.coroutines.selects.SelectClause2Impl: kotlin.jvm.functions.Function3 getOnCancellationConstructor()
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.Result: boolean equals-impl0(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyOf(short[])
kotlin.text.StringsKt__StringsJVMKt: java.lang.String concatToString(char[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int count-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.io.FilesKt__FileTreeWalkKt: kotlin.io.FileTreeWalk walkTopDown(java.io.File)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode find(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: float random(float[],kotlin.random.Random)
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.lang.String getState()
kotlin.text.StringsKt__IndentKt: StringsKt__IndentKt()
kotlinx.coroutines.CancellableContinuation: boolean isCompleted()
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
kotlin.text.DelimitedRangesSequence$iterator$1: void setNextItem(kotlin.ranges.IntRange)
kotlin.text.Regex: java.lang.String replaceFirst(java.lang.CharSequence,java.lang.String)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
kotlin.reflect.KClass: java.lang.Object getObjectInstance()
kotlin.io.FilesKt__FileTreeWalkKt: FilesKt__FileTreeWalkKt()
kotlinx.coroutines.ChildContinuation: ChildContinuation(kotlinx.coroutines.CancellableContinuationImpl)
kotlinx.coroutines.scheduling.LimitingDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: double maxOrThrow(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment findSegmentBufferEnd(long,kotlinx.coroutines.channels.ChannelSegment,long)
kotlin.time.DurationKt: long durationOfNanosNormalized(long)
kotlin.Triple: int hashCode()
kotlinx.coroutines.internal.ThreadLocalKey: java.lang.String toString()
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.Object getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(boolean[],kotlin.jvm.functions.Function1)
kotlin.io.FilesKt__FileReadWriteKt: void forEachLine(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$sorted$1: java.util.Iterator iterator()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWith-l8EHGbQ(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.UIntArray: void clear()
kotlinx.coroutines.Job: kotlinx.coroutines.Job getParent()
kotlin.collections.ArrayDeque: void add(int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow,int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: void CoroutineStackFrame$annotations()
kotlinx.coroutines.scheduling.Task: Task()
androidx.work.ArrayCreatingInputMerger: ArrayCreatingInputMerger()
kotlin.text.StringsKt__StringsJVMKt: int nativeLastIndexOf(java.lang.String,char,int)
kotlin.time.Duration$Companion: long seconds-UwyO8pc(long)
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectImplementation: void onTimeout(long,kotlin.jvm.functions.Function1)
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState: java.io.File step()
kotlinx.coroutines.selects.SelectImplementation: void cleanup(kotlinx.coroutines.selects.SelectImplementation$ClauseData)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
kotlin.text.CharDirectionality$Companion: CharDirectionality$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineUnsafe$FlowKt__ZipKt(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1: java.util.Iterator invoke(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(short[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KMutableProperty1$Setter getSetter()
kotlin.collections.builders.MapBuilder: boolean putEntry(java.util.Map$Entry)
kotlin.collections.AbstractMap$values$1: AbstractMap$values$1(kotlin.collections.AbstractMap)
kotlinx.coroutines.flow.CallbackFlowBuilder: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: int minOf(int,int[])
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int getSize()
kotlin.sequences.SequencesKt___SequencesKt: boolean any(kotlin.sequences.Sequence)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Object recoverAndThrow(java.lang.Throwable,kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: java.util.List mapIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.LimitingDispatcher: int getTaskMode()
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection[])
kotlinx.coroutines.CompletableDeferred$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.CompletableDeferred,kotlin.coroutines.CoroutineContext$Key)
kotlin.text.StringsKt__StringsJVMKt: char[] toCharArray(java.lang.String,int,int)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,short)
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
kotlin.text.MatcherMatchResult: kotlin.text.MatchGroupCollection getGroups()
kotlin.text.MatchNamedGroupCollection: kotlin.text.MatchGroup get(java.lang.String)
kotlinx.coroutines.channels.ChannelCoroutine: void invokeOnClose(kotlin.jvm.functions.Function1)
kotlinx.coroutines.DisposeOnCancel: java.lang.String toString()
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
kotlinx.coroutines.flow.FlowKt__LimitKt: java.lang.Object collectWhile$$forInline(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void dumpCoroutinesSynchronized(java.io.PrintStream)
kotlin.reflect.KParameter$Kind: KParameter$Kind(java.lang.String,int)
kotlin.reflect.WildcardTypeImpl: java.lang.String getTypeName()
kotlin.properties.ReadWriteProperty: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object getResult()
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName valueOf(java.lang.String)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getINTERRUPTED_SEND$p()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(float[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.text.Regex: Regex(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
kotlin.random.KotlinRandom: float nextFloat()
kotlin.jvm.internal.DoubleSpreadBuilder: void add(double)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String,int)
kotlin.reflect.ParameterizedTypeImpl: ParameterizedTypeImpl(java.lang.Class,java.lang.reflect.Type,java.util.List)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$sendOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ClassReference: kotlin.reflect.KVisibility getVisibility()
kotlin.TypeAliasesKt: void ArithmeticException$annotations()
kotlin.collections.MapsKt__MapsKt: java.util.Map filterNotTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StartedWhileSubscribed: long access$getReplayExpiration$p(kotlinx.coroutines.flow.StartedWhileSubscribed)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte maxWithOrThrow-U(byte[],java.util.Comparator)
kotlin.sequences.SequencesKt___SequencesKt$minus$3: SequencesKt___SequencesKt$minus$3(java.lang.Iterable,kotlin.sequences.Sequence)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: double averageOfByte(java.lang.Byte[])
kotlin.time.Duration$Companion: long nanoseconds-UwyO8pc(long)
kotlin.ranges.URangesKt___URangesKt: kotlin.ULong randomOrNull(kotlin.ranges.ULongRange,kotlin.random.Random)
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOrNull(float[])
kotlinx.coroutines.channels.BufferedChannel: void completeCancel(long)
kotlin.collections.ArraysKt__ArraysJVMKt: ArraysKt__ArraysJVMKt()
kotlinx.coroutines.TimeoutCoroutine: java.lang.String nameString$kotlinx_coroutines_core()
kotlin.collections.AbstractList$IteratorImpl: AbstractList$IteratorImpl(kotlin.collections.AbstractList)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence padStart$default(java.lang.CharSequence,int,char,int,java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
kotlin.ranges.ClosedFloatingPointRange: boolean isEmpty()
kotlin.enums.EnumEntriesSerializationProxy$Companion: EnumEntriesSerializationProxy$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ranges.ClosedDoubleRange: boolean lessThanOrEquals(double,double)
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(char[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.DefaultExecutor: java.lang.Thread createThreadSync()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long markFrozen()
kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfInt(int[],kotlin.jvm.functions.Function1)
kotlin.sequences.USequencesKt___USequencesKt: int sumOfUByte(kotlin.sequences.Sequence)
kotlinx.coroutines.sync.MutexImpl: java.lang.String toString()
kotlin.math.MathKt__MathJVMKt: double sin(double)
kotlin.collections.ArraysKt___ArraysKt: void reverse(short[])
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBefore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
kotlin.sequences.FlatteningSequence$iterator$1: java.lang.Object next()
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double[] onEachIndexed(double[],kotlin.jvm.functions.Function2)
kotlin.collections.builders.ListBuilder: java.util.List build()
kotlin.jvm.internal.TypeIntrinsics: java.util.Map$Entry asMutableMapEntry(java.lang.Object,java.lang.String)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: FlowKt__ErrorsKt$catchImpl$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.internal.Ref$ObjectRef)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none-QwZRm1k(long[])
kotlin.collections.EmptyMap: java.lang.Object readResolve()
kotlin.collections.MapsKt___MapsKt: boolean any(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
kotlin.collections.ArraysKt___ArraysKt: int count(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1: StringsKt___StringsKt$asIterable$$inlined$Iterable$1(java.lang.CharSequence)
kotlin.UInt$Companion: UInt$Companion()
kotlinx.coroutines.flow.SafeFlow: java.lang.Object collectSafely(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
kotlin.UByteArray: boolean contains-7apg3OU(byte)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel withIndex$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlin.random.KotlinRandom: long nextLong()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.StackTraceRecoveryKt: int firstFrameIndex(java.lang.StackTraceElement[],java.lang.String)
kotlin.StandardKt__StandardKt: java.lang.Object let(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.future.FutureKt: java.util.concurrent.CompletableFuture future(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
kotlin.io.encoding.Base64: byte[] charsToBytesImpl$kotlin_stdlib(java.lang.CharSequence,int,int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(byte[],java.lang.Iterable)
kotlin.CharCodeKt: int getCode(char)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String toUpperCase(java.lang.String)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator compareBy(kotlin.jvm.functions.Function1)
kotlin.text.CharsKt__CharKt: char digitToChar(int,int)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfterLast(java.lang.String,char,java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxOfWithOrNull(kotlin.sequences.Sequence,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.Character find(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte reduceIndexed-EOyYB1Y(byte[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: double first(double[])
kotlinx.coroutines.SchedulerTaskKt: kotlinx.coroutines.scheduling.TaskContext getTaskContext(kotlinx.coroutines.scheduling.Task)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort--nroSd4(long[],int,int)
kotlinx.coroutines.scheduling.UnlimitedIoScheduler: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.LazyDeferredCoroutine: void onStart()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],short[])
kotlin.text.MatchGroup: java.lang.String component1()
kotlinx.coroutines.channels.ChannelResult: boolean isSuccess-impl(java.lang.Object)
kotlinx.coroutines.JobSupport$onAwaitInternal$2: JobSupport$onAwaitInternal$2()
kotlin.enums.EnumEntriesList: int indexOf(java.lang.Enum)
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: ForceStopRunnable$BroadcastReceiver()
kotlin.collections.AbstractMap$toString$1: AbstractMap$toString$1(kotlin.collections.AbstractMap)
kotlin.io.path.DirectoryEntriesReader: java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
kotlin.jvm.internal.PropertyReference2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.DefaultExecutorKt: kotlinx.coroutines.Delay initializeDefaultDelay()
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long minus-UwyO8pc(long,kotlin.time.ComparableTimeMark)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.util.List creationStackTrace()
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2: java.lang.Object invoke()
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1: java.lang.Throwable invoke(java.lang.Throwable)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(long[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: boolean contains(java.lang.Object)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfInt(byte[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2(boolean)
kotlin.collections.builders.MapBuilder: MapBuilder()
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: RestrictedSuspendLambda(int)
kotlin.io.path.PathsKt__PathUtilsKt: PathsKt__PathUtilsKt()
kotlin.concurrent.TimersKt: java.util.TimerTask timerTask(kotlin.jvm.functions.Function1)
kotlin.time.Duration: int getSecondsComponent-impl(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2: java.lang.Object invoke()
kotlinx.coroutines.ThreadContextElementKt: java.lang.Object isPresent(java.lang.ThreadLocal,kotlin.coroutines.Continuation)
kotlin.coroutines.jvm.internal.CoroutineStackFrame: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: ChannelFlow$collect$2(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.internal.ChannelFlow,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder$EntryRef: java.lang.Object getKey()
kotlinx.coroutines.flow.internal.FlowExceptions_commonKt: int checkIndexOverflow(int)
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArrayAsCollection: boolean isVarargs()
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(char[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMapIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2)
kotlin.NumbersKt__NumbersKt: byte takeLowestOneBit(byte)
kotlin.collections.AbstractSet$Companion: AbstractSet$Companion()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.io.FilesKt__UtilsKt: java.io.File relativeToOrNull(java.io.File,java.io.File)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigDecimal toBigDecimalOrNull(java.lang.String)
kotlin.internal.RequireKotlin: java.lang.String version()
kotlin.jvm.internal.LocalVariableReferencesKt: java.lang.Void access$notSupportedError()
kotlin.time.Duration$Companion: long getDays-UwyO8pc(double)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow cancellable(kotlinx.coroutines.flow.Flow)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
kotlin.WasExperimental: java.lang.Class[] markerClass()
kotlin.ULong: long floorDiv-7apg3OU(long,byte)
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext getContext()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minByOrThrow(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.ranges.LongRange$Companion: LongRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int lastIndexOf(java.lang.Object)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: ConflatedBroadcastChannel(kotlinx.coroutines.channels.BroadcastChannelImpl)
kotlinx.coroutines.CancellableContinuationImpl: CancellableContinuationImpl(kotlin.coroutines.Continuation,int)
kotlin.UnsignedKt: int uintRemainder-J1ME1BU(int,int)
kotlinx.coroutines.DispatchedTaskKt: void dispatch(kotlinx.coroutines.DispatchedTask,int)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.channels.ChannelSegment createSegment(long,kotlinx.coroutines.channels.ChannelSegment)
kotlin.reflect.TypesJVMKt$typeToString$unwrap$1: java.lang.Class invoke(java.lang.Class)
kotlin.jvm.internal.ArrayByteIterator: byte nextByte()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minWithOrNull(double[],java.util.Comparator)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(short,byte)
kotlin.collections.EmptyMap: int getSize()
kotlin.coroutines.jvm.internal.CompletedContinuation: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(long[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.text.DelimitedRangesSequence$iterator$1: void remove()
kotlin.sequences.SequencesKt___SequencesKt: long sumOfULong(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object invoke(kotlin.Unit,kotlin.coroutines.Continuation)
kotlinx.coroutines.AwaitKt: java.lang.Object joinAll(java.util.Collection,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Short toShortOrNull(java.lang.String)
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.OnTimeoutKt: void onTimeout-8Mi8wO0(kotlinx.coroutines.selects.SelectBuilder,long,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] plus(byte[],byte)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int indexOf(java.lang.Object)
kotlin.ranges.UIntProgression: int getFirst-pVg5ArA()
kotlin.text.StringsKt__StringsKt: java.lang.String trim(java.lang.String,char[])
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
kotlin.math.MathKt__MathJVMKt: float abs(float)
kotlinx.coroutines.JobSupport$onAwaitInternal$2: java.lang.Object invoke(kotlinx.coroutines.JobSupport,java.lang.Object,java.lang.Object)
kotlin.collections.AbstractMap: java.lang.String access$toString(kotlin.collections.AbstractMap,java.util.Map$Entry)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sorted-QwZRm1k(long[])
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getSEALED$p()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean reduceRightIndexedOrNull(boolean[],kotlin.jvm.functions.Function3)
kotlin.time.Duration: int compareTo(java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.util.Map mutableMapOf()
kotlin.jvm.internal.ClassReference: void isAbstract$annotations()
kotlinx.coroutines.scheduling.WorkQueue: long trySteal(int,kotlin.jvm.internal.Ref$ObjectRef)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1: java.lang.Object invoke()
kotlin.time.TimeSource$Monotonic$ValueTimeMark: int compareTo(kotlin.time.ComparableTimeMark)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double find(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelSegment: java.lang.Object retrieveElement$kotlinx_coroutines_core(int)
kotlin.collections.MapsKt___MapsKt: java.util.Collection flatMapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.random.Random: byte[] nextBytes(byte[])
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,float)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flattenMerge(kotlinx.coroutines.flow.Flow,int)
kotlin.collections.ArraysKt___ArraysKt: int count(float[],kotlin.jvm.functions.Function1)
kotlin.text.Regex: boolean containsMatchIn(java.lang.CharSequence)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
kotlin.time.DurationKt: long toDuration(double,kotlin.time.DurationUnit)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(char[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(short[],short)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUByte(kotlin.UByte[])
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KProperty$Getter getGetter()
kotlinx.coroutines.flow.StartedLazily$command$1$1: java.lang.Object emit(int,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(boolean[],kotlin.ranges.IntRange)
kotlin.jvm.internal.TypeReference$asString$args$1: java.lang.Object invoke(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.String filterNot(java.lang.String,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.SendChannel: kotlinx.coroutines.selects.SelectClause2 getOnSend()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigInteger toBigInteger(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer randomOrNull(int[],kotlin.random.Random)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short randomOrNull(short[],kotlin.random.Random)
kotlin.jvm.JvmClassMappingKt: void getRuntimeClassOfKClassInstance$annotations(kotlin.reflect.KClass)
kotlin.collections.ArraysKt___ArraysKt: boolean any(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.lang.Object[] dumpCoroutinesInfoAsJsonAndReferences()
kotlin.UShort: short inc-Mh2AYeg(short)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: FlowKt__ZipKt$combine$5$2(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.ThreadPoolDispatcherKt__ThreadPoolDispatcherKt: kotlinx.coroutines.ExecutorCoroutineDispatcher newFixedThreadPoolContext(int,java.lang.String)
kotlin.io.FilesKt__FilePathComponentsKt: java.lang.String getRootName(java.io.File)
kotlin.collections.builders.SerializedMap: void readExternal(java.io.ObjectInput)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: ExecutorCoroutineDispatcher$Key$1()
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection covariant(kotlin.reflect.KType)
kotlin.collections.AbstractList$Companion: AbstractList$Companion()
kotlinx.coroutines.sync.MutexImpl: kotlinx.coroutines.selects.SelectClause2 getOnLock()
kotlin.reflect.WildcardTypeImpl: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.LazyActorCoroutine: boolean close(java.lang.Throwable)
kotlin.reflect.KType: kotlin.reflect.KClassifier getClassifier()
kotlin.io.ByteStreamsKt: byte[] readBytes(java.io.InputStream,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectImplementation: void update$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.Pair: kotlin.Pair copy$default(kotlin.Pair,java.lang.Object,java.lang.Object,int,java.lang.Object)
kotlinx.coroutines.JobSupport: void promoteSingleToNodeList(kotlinx.coroutines.JobNode)
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ArrayCharIterator: ArrayCharIterator(char[])
kotlin.text.CharsKt__CharJVMKt: boolean isDigit(char)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onStart(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.LazyActorCoroutine: void onStart()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(int[],java.lang.Iterable)
kotlin.Result: java.lang.Object unbox-impl()
kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.lang.String toString()
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableCollection(java.lang.Object)
kotlinx.coroutines.channels.BroadcastChannelImpl: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlin.collections.AbstractList: int hashCode()
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberConflated: boolean cancelImpl(java.lang.Throwable)
kotlin.io.TextStreamsKt: java.lang.String readText$default(java.net.URL,java.nio.charset.Charset,int,java.lang.Object)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map fold(kotlin.collections.Grouping,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWithTo-H21X9dk(byte[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(short[],kotlin.jvm.functions.Function1)
kotlin.UInt: long floorDiv-VKZWuLQ(int,long)
kotlin.UIntArray: boolean add-WZ4Q5Ns(int)
kotlin.text.Regex$findAll$1: Regex$findAll$1(kotlin.text.Regex,java.lang.CharSequence,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(double[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.time.Duration: double div-LRDsOJo(long,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMapIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.ChildJob$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.ChildJob,kotlinx.coroutines.Job)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.Path copyToRecursively(java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,boolean,boolean)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.lang.Object[] copyToArrayImpl(java.util.Collection)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry minWithOrNull(java.util.Map,java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: java.lang.Object invoke(int,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int lastIndexOf-xj2QHRw(short)
kotlinx.coroutines.UndispatchedCoroutine: void afterResume(java.lang.Object)
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: java.lang.String invoke(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlin.ranges.LongProgression: int hashCode()
kotlin.collections.CollectionsKt___CollectionsKt: boolean none(java.lang.Iterable)
kotlinx.coroutines.internal.LimitedDispatcher: java.lang.Runnable access$obtainTaskOrDeallocateWorker(kotlinx.coroutines.internal.LimitedDispatcher)
kotlin.jvm.internal.Ref$IntRef: Ref$IntRef()
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2: SequencesKt___SequencesKt$filterIndexed$2()
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: java.lang.Object initSelectResult()
kotlinx.coroutines.NonCancellable: boolean cancel(java.lang.Throwable)
kotlin.io.FilesKt__FilePathComponentsKt: int getRootLength$FilesKt__FilePathComponentsKt(java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable maxOrNull(java.lang.Iterable)
kotlinx.coroutines.InvokeOnCancel: InvokeOnCancel(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow runningFold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull()
kotlinx.coroutines.internal.MainDispatcherFactory: java.lang.String hintOnError()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow,int)
kotlin.UInt: int floorDiv-7apg3OU(int,byte)
kotlinx.coroutines.channels.ChannelResult$Closed: ChannelResult$Closed(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2: FlowKt__ReduceKt$first$$inlined$collectWhile$2(kotlin.jvm.functions.Function2,kotlin.jvm.internal.Ref$ObjectRef)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List drop-r7IrZao(long[],int)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBeforeLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
kotlin.sequences.DropWhileSequence$iterator$1: java.util.Iterator getIterator()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: java.lang.Object get(int)
kotlinx.coroutines.android.HandlerDispatcherKt: java.lang.Object access$awaitFrameSlowPath(kotlin.coroutines.Continuation)
kotlin.collections.jdk8.CollectionsJDK8Kt: boolean remove(java.util.Map,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(long[],java.util.Comparator)
kotlin.text.StringsKt___StringsKt$withIndex$1: java.lang.Object invoke()
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberBuffered: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Throwable)
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.time.DurationKt: void getSeconds$annotations(double)
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWith-5NtCtWE(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.collections.AbstractList: AbstractList()
kotlinx.coroutines.JobCancellationException: int hashCode()
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.StringBuilder)
kotlin.collections.EmptyList: boolean remove(java.lang.Object)
kotlin.PreconditionsKt__PreconditionsKt: PreconditionsKt__PreconditionsKt()
kotlin.UShort: int div-7apg3OU(short,byte)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.String[])
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlin.ranges.CharProgression$Companion: kotlin.ranges.CharProgression fromClosedRange(char,char,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: ChannelsKt__DeprecatedKt$lastIndexOf$1(kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(char[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobKt: void ensureActive(kotlinx.coroutines.Job)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(boolean[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.time.TestTimeSource: long read()
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(byte[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Boolean maxWith(boolean[],java.util.Comparator)
kotlin.UIntArray: boolean isEmpty()
kotlinx.coroutines.selects.SelectOldKt: java.lang.Object selectUnbiasedOld(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: double averageOfDouble(kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double getOrNull(double[],int)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder clear(java.lang.StringBuilder)
kotlin.ranges.RangesKt___RangesKt: java.lang.Long toLongExactOrNull(float)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object last(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.ranges.IntRange: java.lang.Comparable getEndExclusive()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIsInstanceTo(java.lang.Object[],java.util.Collection)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(int[],int,int,int,int,java.lang.Object)
kotlin.ranges.RangesKt__RangesKt: kotlin.ranges.ClosedFloatingPointRange rangeTo(float,float)
kotlin.collections.ArraysKt___ArraysKt: void reverse(float[])
kotlin.text.MatchResult$Destructured: java.lang.String component7()
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1: FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(byte[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: long first-QwZRm1k(long[])
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: short component1(short[])
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int indexOf(float)
kotlin.LateinitKt: boolean isInitialized(kotlin.reflect.KProperty0)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-4UcCI2c(byte[],int,int)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory: java.lang.String hintOnError()
kotlinx.coroutines.Incomplete: kotlinx.coroutines.NodeList getList()
kotlin.time.LongSaturatedMathKt: long saturatingFiniteDiff(long,long)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
kotlin.collections.ArraysKt___ArraysKt$withIndex$8: ArraysKt___ArraysKt$withIndex$8(boolean[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(short[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int getLastIndex-rL5Bavg(short[])
kotlin.coroutines.ContinuationKt: void resumeWithException(kotlin.coroutines.Continuation,java.lang.Throwable)
kotlin.sequences.IndexingSequence: java.util.Iterator iterator()
kotlinx.coroutines.DebugKt: void resetCoroutineId()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.BufferedWriter bufferedWriter(java.nio.file.Path,java.nio.charset.Charset,int,java.nio.file.OpenOption[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object first(java.lang.Iterable)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set build(java.util.Set)
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.IntRange,byte)
kotlinx.coroutines.JobSupport: boolean isCancelled()
kotlin.collections.CollectionsKt__CollectionsKt: java.lang.Object ifEmpty(java.util.Collection,kotlin.jvm.functions.Function0)
kotlinx.coroutines.channels.BroadcastCoroutine: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getLastIndex-QwZRm1k$annotations(long[])
kotlinx.coroutines.channels.BufferedChannel$onSend$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(double[],double,int,int,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: java.lang.Boolean invoke(java.lang.Object)
kotlinx.coroutines.AbstractTimeSourceKt: kotlinx.coroutines.AbstractTimeSource getTimeSource()
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(short[],kotlin.ranges.IntRange)
kotlin.jvm.internal.TypeReference$Companion: TypeReference$Companion()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(int[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence padStart(java.lang.CharSequence,int,char)
kotlin.ranges.URangesKt___URangesKt: kotlin.ULong randomOrNull(kotlin.ranges.ULongRange)
kotlin.collections.builders.ListBuilder: boolean add(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.util.Collection)
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.sync.SemaphoreImpl: void acquire(java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object component2(java.lang.Object[])
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.StateFlowImpl: boolean tryEmit(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$minus$3: java.util.Iterator iterator()
kotlin.collections.MapsKt__MapsJVMKt: java.util.Properties toProperties(java.util.Map)
kotlinx.coroutines.NonDisposableHandle: NonDisposableHandle()
kotlin.collections.FloatIterator: java.lang.Float next()
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: SequencesKt___SequencesKt$zipWithNext$2(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.time.Duration$Companion: long getHours-UwyO8pc(double)
kotlinx.coroutines.Empty: java.lang.String toString()
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation)
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection contravariant(kotlin.reflect.KType)
kotlin.sequences.SequencesKt__SequencesKt$flatten$1: java.util.Iterator invoke(kotlin.sequences.Sequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort maxWithOrNull-eOHTfZs(short[],java.util.Comparator)
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.ShortIterator iterator(short[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong singleOrNull-QwZRm1k(long[])
kotlin.sequences.DropSequence: kotlin.sequences.Sequence drop(int)
kotlin.text.Regex: kotlin.sequences.Sequence splitToSequence$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)
kotlin.ranges.ULongProgression: boolean isEmpty()
kotlin.reflect.TypeVariableImpl: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: long reduceRight(long[],kotlin.jvm.functions.Function2)
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer lastOrNull(kotlin.ranges.IntProgression)
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KProperty2$Getter getGetter()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] plus(int[],int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.text.DelimitedRangesSequence$iterator$1: java.lang.Object next()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short component1-rL5Bavg(short[])
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1: java.lang.Boolean invoke(java.lang.Throwable)
kotlin.collections.builders.MapBuilder: boolean containsEntry$kotlin_stdlib(java.util.Map$Entry)
kotlin.io.encoding.Base64JVMKt: int platformEncodeIntoByteArray(kotlin.io.encoding.Base64,byte[],byte[],int,int,int)
kotlin.io.FilesKt__FileTreeWalkKt: kotlin.io.FileTreeWalk walkBottomUp(java.io.File)
kotlin.collections.CollectionsKt___CollectionsKt: double sumOfDouble(java.lang.Iterable)
kotlin.ranges.IntProgression: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double average(short[])
kotlin.random.URandomKt: byte[] nextUBytes-EVgfTAA(kotlin.random.Random,byte[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow zip(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.ranges.IntProgressionIterator: boolean hasNext()
kotlin.io.path.DirectoryEntriesReader: java.util.List readEntries(kotlin.io.path.PathNode)
kotlinx.coroutines.selects.SelectClause2Impl: java.lang.Object getClauseObject()
kotlin.NumbersKt__FloorDivModKt: double mod(double,double)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: java.lang.Object next()
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collect(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.OnTimeout$selectClause$1: void invoke(kotlinx.coroutines.selects.OnTimeout,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(byte,byte)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence runningFoldIndexed(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.Path copyToRecursively$default(java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,boolean,kotlin.jvm.functions.Function3,int,java.lang.Object)
kotlin.collections.EmptyList: int hashCode()
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
kotlin.UNumbersKt: byte rotateRight-LxnNnR4(byte,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent(android.view.accessibility.AccessibilityNodeInfo,int)
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: java.lang.Object invoke(java.lang.Object)
kotlin.math.MathKt__MathJVMKt: void getSign$annotations(float)
kotlin.UInt: long times-VKZWuLQ(int,long)
kotlin.collections.ArraysKt___ArraysKt: boolean none(boolean[])
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.reflect.KClass$DefaultImpls: void getTypeParameters$annotations()
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$1: java.lang.Throwable invoke(java.lang.Throwable)
kotlin.Result: java.lang.String toString-impl(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$2: BufferedChannel$onReceiveCatching$2()
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.ULong: long minus-WZ4Q5Ns(long,int)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sortedDescending(kotlin.sequences.Sequence)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable maxOrNull(kotlin.sequences.Sequence)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceRightIndexedOrNull(java.util.List,kotlin.jvm.functions.Function3)
kotlinx.coroutines.EventLoopImplBase: void resetAll()
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.future.CompletableFutureCoroutine: java.lang.Object apply(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.FloatCompanionObject: FloatCompanionObject()
kotlinx.coroutines.selects.WhileSelectKt: java.lang.Object whileSelect$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.properties.ObservableProperty: ObservableProperty(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1: DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1()
kotlin.ranges.CharRange: java.lang.Character getEndInclusive()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(float[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
kotlin.jvm.internal.MutablePropertyReference: MutablePropertyReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.time.TimeSource$Monotonic: long markNow-z9LOYto()
kotlinx.coroutines.DisposableHandle: void dispose()
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removePrefix(java.lang.CharSequence,java.lang.CharSequence)
kotlinx.coroutines.channels.BufferedChannel: boolean isClosedForSend0(long)
kotlin.collections.ArraysKt___ArraysKt: int sumBy(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.AwaitKt$joinAll$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.reflect.KMutableProperty0: kotlin.reflect.KMutableProperty0$Setter getSetter()
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope MainScope()
kotlin.collections.AbstractIterator: java.lang.Object next()
kotlinx.coroutines.channels.BufferedChannel: void onClosedSendOnNoWaiterSuspend(java.lang.Object,kotlinx.coroutines.CancellableContinuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] asUByteArray(byte[])
kotlin.ranges.OpenEndFloatRange: boolean isEmpty()
kotlin.text.StringsKt__StringsJVMKt: byte[] toByteArray(java.lang.String,java.nio.charset.Charset)
kotlinx.coroutines.scheduling.DefaultIoScheduler: DefaultIoScheduler()
kotlin.ranges.RangesKt___RangesKt: byte coerceAtMost(byte,byte)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: kotlinx.coroutines.debug.internal.StackTraceFrame getCreationStackBottom$kotlinx_coroutines_core()
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.lang.String hierarchyToString$kotlinx_coroutines_core(kotlinx.coroutines.Job)
kotlin.NumbersKt__NumbersJVMKt: long rotateLeft(long,int)
kotlinx.coroutines.internal.SystemPropsKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
kotlin.collections.builders.SetBuilder: SetBuilder(kotlin.collections.builders.MapBuilder)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$1: ExceptionsConstructorKt$createConstructor$1$1(java.lang.reflect.Constructor)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection,kotlin.reflect.KTypeProjection)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.ClassReference$Companion: ClassReference$Companion()
kotlinx.coroutines.CoroutineContextKt: boolean hasCopyableElements(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(double[],java.lang.Iterable)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long unbox-impl()
kotlinx.coroutines.sync.MutexImpl: int tryLockImpl(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: void moveSegmentBufferEndToSpecifiedOrLast(long,kotlinx.coroutines.channels.ChannelSegment)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong lastOrNull-QwZRm1k(long[])
kotlinx.coroutines.channels.ChannelCoroutine: boolean isClosedForReceive()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Double minOrNull(java.lang.Iterable)
kotlinx.coroutines.debug.AgentPremain: void installSignalHandler$lambda$1(sun.misc.Signal)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsJvmKt: java.math.BigDecimal sumOfBigDecimal(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
kotlinx.coroutines.JobKt__JobKt: void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: float reduceRight(float[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ArrayIterator: ArrayIterator(java.lang.Object[])
kotlin.ranges.IntProgression: kotlin.collections.IntIterator iterator()
kotlin.time.Duration: long div-UwyO8pc(long,int)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$3: ExceptionsConstructorKt$createConstructor$1$3(java.lang.reflect.Constructor)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: int count(double[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(boolean[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sum-GBYM_sE(byte[])
kotlinx.coroutines.channels.BufferedChannelKt: long access$constructEBCompletedAndPauseFlag(long,boolean)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Double maxOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysUtilJVM: java.util.List asList(java.lang.Object[])
kotlinx.coroutines.internal.SegmentOrClosed: kotlinx.coroutines.internal.SegmentOrClosed box-impl(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Object first(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlinx.coroutines.flow.Flow distinctUntilChangedBy$FlowKt__DistinctKt(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object count(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: boolean matches(java.lang.CharSequence,kotlin.text.Regex)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel flatMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
kotlin.ranges.ClosedDoubleRange: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.Channel$DefaultImpls: boolean offer(kotlinx.coroutines.channels.Channel,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcherKt: java.lang.Object awaitFrame(kotlin.coroutines.Continuation)
kotlin.random.RandomKt: kotlin.random.Random Random(long)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: java.lang.Object access$emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectImplementation: void invoke(kotlinx.coroutines.selects.SelectClause1,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.ClassReference: java.util.Collection getNestedClasses()
kotlinx.coroutines.debug.internal.AgentInstallationType: boolean isInstalledStatically$kotlinx_coroutines_core()
kotlinx.coroutines.internal.AtomicOp: java.lang.Object prepare(java.lang.Object)
kotlin.coroutines.jvm.internal.DebugMetadataKt: java.lang.String[] getSpilledVariableFieldMapping(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
kotlin.text.StringsKt___StringsKt: char random(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(float[],kotlin.jvm.functions.Function1)
kotlin.random.AbstractPlatformRandom: AbstractPlatformRandom()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelKt: java.lang.Object onFailure-WpGqRn0(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.util.Collection,java.lang.Object[])
kotlin.StandardKt__StandardKt: java.lang.Object with(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.CompletableJob$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.CompletableJob,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: int last(int[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: StringsKt___StringsKt()
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(int[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(char[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMutableList: int size()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int indexOf(java.lang.Object)
kotlin.random.KotlinRandom: double nextDouble()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void idleReset(int)
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: SlidingWindowKt$windowedSequence$$inlined$Sequence$1(kotlin.sequences.Sequence,int,int,boolean,boolean)
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaClass(kotlin.reflect.KClass)
kotlin.text.Regex$Companion: kotlin.text.Regex fromLiteral(java.lang.String)
kotlinx.coroutines.Deferred$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.Deferred,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.LockFreeTaskQueue: boolean addLast(java.lang.Object)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator compareBy(java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringBuilderKt: StringsKt__StringBuilderKt()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path div(java.nio.file.Path,java.nio.file.Path)
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: ProduceKt$awaitClose$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: ThreadContextKt$updateState$1()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: ChannelsKt__DeprecatedKt$count$1(kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlin.sequences.TransformingIndexedSequence$iterator$1: java.lang.Object next()
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CancelHandler component2()
kotlinx.coroutines.CancelFutureOnCancel: CancelFutureOnCancel(java.util.concurrent.Future)
kotlin.UByteArray: byte[] constructor-impl(int)
kotlin.jvm.internal.FunInterfaceConstructorReference: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
kotlin.random.Random: long nextLong()
kotlin.text.MatcherMatchResult$groups$1: kotlin.text.MatchGroup get(int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: UArraysKt___UArraysJvmKt()
kotlinx.coroutines.internal.FastServiceLoader: java.util.List load(java.lang.Class,java.lang.ClassLoader)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.UByteArray: boolean addAll(java.util.Collection)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
kotlin.io.path.PathsKt__PathUtilsKt: void visitFileTree(java.nio.file.Path,java.nio.file.FileVisitor,int,boolean)
kotlin.collections.AbstractMutableList: int getSize()
kotlin.collections.CollectionsKt___CollectionsKt: boolean any(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.String removeRange(java.lang.String,kotlin.ranges.IntRange)
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: SharedFlowImpl$Emitter(kotlinx.coroutines.flow.SharedFlowImpl,long,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(short[])
kotlin.collections.CollectionsKt__CollectionsKt: java.util.Collection orEmpty(java.util.Collection)
kotlin.jvm.internal.ArrayIntIterator: boolean hasNext()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] sortedArray--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(float[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(int[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow flowOf(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List reversed-GBYM_sE(byte[])
kotlinx.coroutines.Delay$DefaultImpls: java.lang.Object delay(kotlinx.coroutines.Delay,long,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(int[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: java.lang.Object findSegmentAndMoveForward$atomicfu$array(java.lang.Object,java.util.concurrent.atomic.AtomicReferenceArray,int,long,kotlinx.coroutines.internal.Segment,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt: java.lang.Object collect(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2(byte[])
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1: java.lang.Object invoke()
kotlin.collections.MapsKt__MapsJVMKt: int mapCapacity(int)
kotlinx.coroutines.internal.SegmentOrClosed: int hashCode-impl(java.lang.Object)
kotlin.time.AdjustedTimeMark: boolean hasNotPassedNow()
kotlin.text.MatchGroup: java.lang.String getValue()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(float[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
kotlinx.coroutines.internal.SegmentOrClosed: int hashCode()
kotlin.time.DurationUnitKt__DurationUnitKt: java.lang.String shortName(kotlin.time.DurationUnit)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none-rL5Bavg(short[])
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: boolean none(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float maxWith(float[],java.util.Comparator)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] copyInto--B0-L2c(long[],long[],int,int,int)
kotlin.jvm.internal.TypeIntrinsics: java.util.Map$Entry asMutableMapEntry(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Set toSet(kotlin.sequences.Sequence)
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
kotlin.ranges.UIntProgression: UIntProgression(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterNotNull(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyInto(double[],double[],int,int,int)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntRange until-J1ME1BU(int,int)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence dropLast(java.lang.CharSequence,int)
kotlinx.coroutines.flow.FlowKt: java.lang.Object single(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-ctEhBpI(int[],int[])
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
kotlin.collections.builders.MapBuilder: int getHashSize()
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(byte[],byte[])
kotlin.text.StringsKt__StringsJVMKt: int compareTo(java.lang.String,java.lang.String,boolean)
kotlinx.coroutines.CompletableDeferred$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.CompletableDeferred,kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
kotlin.io.FilesKt__FilePathComponentsKt: boolean isRooted(java.io.File)
kotlin.collections.ArraysKt___ArraysKt: int[] sliceArray(int[],kotlin.ranges.IntRange)
kotlin.sequences.ConstrainedOnceSequence: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte getOrNull(byte[],int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] copyOf-PpDY95g(byte[],int)
kotlin.sequences.FlatteningSequence: FlatteningSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],short[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.ranges.URangesKt___URangesKt: int random(kotlin.ranges.UIntRange)
kotlin.io.path.DirectoryEntriesReader: boolean getFollowLinks()
kotlin.collections.ArraysKt___ArraysKt: short random(short[],kotlin.random.Random)
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.util.Set getKeys()
kotlin.text.Regex$Companion: int ensureUnicodeCase(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long minWithOrThrow-U(long[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(float[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: byte maxByOrThrow(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode findPrevNonRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,kotlin.text.Regex,int)
kotlin.reflect.WildcardTypeImpl: kotlin.reflect.WildcardTypeImpl access$getSTAR$cp()
kotlin.collections.builders.MapBuilder$Itr: void setLastIndex$kotlin_stdlib(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getIndices--ajY-9A$annotations(int[])
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind[] values()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7(int[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(double[],kotlin.jvm.functions.Function1)
kotlin.UNINITIALIZED_VALUE: UNINITIALIZED_VALUE()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.util.Collection,java.lang.Iterable)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: void deleteRecursively(java.nio.file.Path)
androidx.appcompat.widget.SearchView: int getMaxWidth()
kotlinx.coroutines.internal.ClassValueCtorCache$cache$1: kotlin.jvm.functions.Function1 computeValue(java.lang.Class)
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfInt(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.ChildContinuation: void invoke(java.lang.Throwable)
kotlinx.coroutines.DefaultExecutor: void shutdown()
kotlin.KotlinNothingValueException: KotlinNothingValueException(java.lang.Throwable)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] plus-CFIt9YE(int[],java.util.Collection)
kotlin.SubclassOptInRequired: java.lang.Class markerClass()
kotlin.NumbersKt__FloorDivModKt: int floorDiv(byte,short)
kotlin.Pair: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: boolean any(double[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__IterablesKt: java.lang.Integer collectionSizeOrNull(java.lang.Iterable)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8(boolean[])
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] sortedArray-rL5Bavg(short[])
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object acquire(kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.MutexImpl: java.lang.Object lockSuspend(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong[] toTypedArray-QwZRm1k(long[])
kotlin.collections.AbstractList$Companion: void checkBoundsIndexes$kotlin_stdlib(int,int,int)
kotlin.collections.GroupingKt__GroupingJVMKt: java.util.Map eachCount(kotlin.collections.Grouping)
kotlinx.coroutines.selects.SelectOldKt: void access$resumeUndispatched(kotlinx.coroutines.CancellableContinuation,java.lang.Object)
kotlin.text.UStringsKt: java.lang.String toString-olVBNx4(short,int)
kotlin.PropertyReferenceDelegatesKt: java.lang.Object getValue(kotlin.reflect.KProperty1,java.lang.Object,kotlin.reflect.KProperty)
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(short[])
kotlinx.coroutines.intrinsics.UndispatchedKt: void startDirect(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.String slice(java.lang.String,java.lang.Iterable)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2: FlowKt__TransformKt$filterIsInstance$$inlined$filter$2(kotlinx.coroutines.flow.Flow,kotlin.reflect.KClass)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFold-A8wKCXQ(long[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(byte[],java.util.Collection)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
kotlin.Metadata: int[] mv()
kotlin.UByteArray: byte[] constructor-impl(byte[])
kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean close(java.lang.Throwable)
kotlin.collections.MapsKt__MapsKt: MapsKt__MapsKt()
kotlin.collections.builders.MapBuilder: int addKey$kotlin_stdlib(java.lang.Object)
kotlin.PreconditionsKt__AssertionsJVMKt: PreconditionsKt__AssertionsJVMKt()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.AbstractCoroutine: java.lang.String cancellationExceptionMessage()
kotlin.collections.AbstractMap$Companion: int entryHashCode$kotlin_stdlib(java.util.Map$Entry)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(float[],kotlin.random.Random)
kotlin.collections.builders.ListBuilder$Itr: void add(java.lang.Object)
kotlin.time.ComparableTimeMark: boolean equals(java.lang.Object)
kotlinx.coroutines.JobCancellationException: boolean equals(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int indexOf-7apg3OU(byte)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int)
kotlin.ranges.URangesKt___URangesKt: kotlin.UInt lastOrNull(kotlin.ranges.UIntProgression)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.SafeCollectorKt: void getEmitFun$annotations()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character minBy(char[],kotlin.jvm.functions.Function1)
kotlin.io.LineReader: void trimStringBuilder()
kotlin.ranges.LongRange: kotlin.ranges.LongRange access$getEMPTY$cp()
kotlinx.coroutines.InvokeOnCancel: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(java.lang.Object[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] plus(java.lang.Object[],java.lang.Object[])
kotlin.io.encoding.DecodeInputStream: int getByteBufferLength()
kotlinx.coroutines.CancelFutureOnCompletion: void invoke(java.lang.Throwable)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntRange until-5PvTz6A(short,short)
kotlin.text.CharsKt__CharJVMKt: boolean isJavaIdentifierPart(char)
kotlin.io.FilesKt__FileReadWriteKt: java.io.FileInputStream inputStream(java.io.File)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
kotlin.collections.EmptyMap: java.lang.Void remove(java.lang.Object)
kotlin.ULongArray: kotlin.ULongArray box-impl(long[])
kotlinx.coroutines.internal.DispatchedContinuation: boolean resumeCancelled$kotlinx_coroutines_core(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.util.List zip(java.lang.CharSequence,java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object getNext()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5(long[])
kotlin.collections.builders.MapBuilder: boolean removeValue$kotlin_stdlib(java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String formatNullable(java.lang.String,java.util.Locale,java.lang.Object[])
kotlin.UShort: int hashCode-impl(short)
kotlin.collections.AbstractMap$toString$1: java.lang.CharSequence invoke(java.util.Map$Entry)
kotlinx.coroutines.BlockingCoroutine: BlockingCoroutine(kotlin.coroutines.CoroutineContext,java.lang.Thread,kotlinx.coroutines.EventLoop)
kotlin.text.StringsKt__StringsKt: java.lang.String padEnd$default(java.lang.String,int,char,int,java.lang.Object)
kotlin.collections.RingBuffer: java.lang.Object get(int)
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void afterTask(int)
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_NEW$p()
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String[] n()
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
kotlin.text.StringsKt__StringBuilderJVMKt: void toCharArray$default(java.lang.StringBuilder,char[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
kotlin.ReplaceWith: java.lang.String expression()
kotlin.jvm.JvmClassMappingKt: java.lang.Class getRuntimeClassOfKClassInstance(kotlin.reflect.KClass)
kotlin.UByte: boolean equals-impl(byte,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(long[])
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: double minOf(double,double)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel map$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.JobKt: java.lang.Object cancelAndJoin(kotlinx.coroutines.Job,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character elementAtOrNull(char[],int)
kotlin.io.path.PathTreeWalkKt: boolean createsCycle(kotlin.io.path.PathNode)
kotlin.RequiresOptIn$Level: RequiresOptIn$Level(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object findLast(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(long[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.text.StringsKt___StringsKt: float maxOf(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.StateFlowSlot createSlot()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
kotlin.io.path.FileVisitorBuilderImpl: void onVisitFile(kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(double[],int)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short maxWithOrNull(short[],java.util.Comparator)
kotlin.collections.builders.SetBuilder: java.util.Set build()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLastWhile-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1(kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Object[])
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.AwaitKt$joinAll$3: AwaitKt$joinAll$3(kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.OpenEndRange,byte)
kotlin.text.StringsKt___StringsKt: java.util.Map associateWithTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: float component1(float[])
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1: java.lang.Object invoke(java.lang.Object)
kotlin.KotlinVersion: java.lang.String toString()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
kotlin.random.XorWowRandom: int nextBits(int)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger and(java.math.BigInteger,java.math.BigInteger)
kotlin.jvm.internal.TypeIntrinsics: java.util.ListIterator castToListIterator(java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.selects.SelectClause1Impl: java.lang.Object getClauseObject()
kotlin.concurrent.TimersKt: java.util.Timer fixedRateTimer$default(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long singleOrNull(long[],kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.attribute.FileTime getLastModifiedTime(java.nio.file.Path,java.nio.file.LinkOption[])
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: void invoke(java.lang.Throwable)
kotlin.random.Random: double nextDouble(double,double)
kotlinx.coroutines.channels.BufferedChannel: int updateCellSendSlow(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Float min(kotlin.sequences.Sequence)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.sync.Semaphore Semaphore(int,int)
kotlin.ranges.LongProgression: boolean equals(java.lang.Object)
kotlin.jvm.internal.Intrinsics: void checkFieldIsNotNull(java.lang.Object,java.lang.String)
kotlinx.coroutines.debug.AgentPremain: void installSignalHandler()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
kotlin.ranges.ClosedFloatRange: ClosedFloatRange(float,float)
kotlin.math.MathKt__MathJVMKt: double getSign(double)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(byte[],int,int,java.nio.charset.Charset)
kotlin.UIntArray$Iterator: boolean hasNext()
kotlinx.coroutines.time.TimeKt: void onTimeout(kotlinx.coroutines.selects.SelectBuilder,java.time.Duration,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexImpl$onLock$2: java.lang.Object invoke(kotlinx.coroutines.sync.MutexImpl,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: boolean contains(java.lang.Object)
kotlin.text.Regex$Serialized: java.lang.Object readResolve()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(long[])
kotlin.UIntArray: void getStorage$annotations()
kotlin.text.StringsKt__StringsKt: boolean contentEqualsIgnoreCaseImpl(java.lang.CharSequence,java.lang.CharSequence)
kotlin.reflect.KClass: java.lang.String getSimpleName()
kotlin.time.DurationKt: void getMinutes$annotations(int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel drop$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path appendLines(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean isTerminated()
kotlinx.coroutines.YieldContext$Key: YieldContext$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.io.ByteStreamsKt: java.io.ByteArrayInputStream inputStream(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: void update$atomicfu(java.util.concurrent.atomic.AtomicLongFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(float[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence padEnd(java.lang.CharSequence,int,char)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse--nroSd4(long[],int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(float[])
kotlin.jvm.optionals.OptionalsKt: kotlin.sequences.Sequence asSequence(java.util.Optional)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(byte[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceRightIndexedOrNull(java.lang.Object[],kotlin.jvm.functions.Function3)
kotlin.collections.builders.ListBuilder$Itr: boolean hasNext()
kotlin.ranges.OpenEndDoubleRange: java.lang.Double getEndExclusive()
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int,long,long,java.lang.Object)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long max(long[])
kotlin.text.MatchResult$Destructured: java.lang.String component1()
kotlin.time.AbstractLongTimeSource: kotlin.time.DurationUnit getUnit()
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(short[])
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher blocking(int)
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexed$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState: FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState(kotlin.io.FileTreeWalk$FileTreeWalkIterator,java.io.File)
kotlin.ResultKt: java.lang.Object getOrElse(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.text.CharCategory$Companion: CharCategory$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(byte[],byte)
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.InvokeOnCancelling: InvokeOnCancelling(kotlin.jvm.functions.Function1)
kotlin.sequences.USequencesKt___USequencesKt: USequencesKt___USequencesKt()
kotlin.reflect.KMutableProperty: kotlin.reflect.KMutableProperty$Setter getSetter()
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: LockFreeLinkedListNode$makeCondAddOp$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0)
kotlin.jvm.internal.ClassReference: void getVisibility$annotations()
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State valueOf(java.lang.String)
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch$default(java.util.List,java.lang.Object,java.util.Comparator,int,int,int,java.lang.Object)
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableMapEntry(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ArrayIntIterator: ArrayIntIterator(int[])
kotlinx.coroutines.flow.SharedFlowImpl: boolean access$tryEmitLocked(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object)
kotlin.jvm.internal.AdaptedFunctionReference: java.lang.String toString()
kotlin.text.StringsKt___StringsKt: java.util.List runningFold(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BufferedChannel$onReceive$2: java.lang.Object invoke(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(long[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: java.lang.Character get(int)
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion: JDK8PlatformImplementations$ReflectSdkVersion()
kotlin.collections.AbstractCollection: java.lang.Object[] toArray()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
kotlin.text.StringsKt: StringsKt()
kotlinx.coroutines.flow.internal.ChannelFlowKt: kotlinx.coroutines.flow.FlowCollector withUndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
kotlin.sequences.SequencesKt__SequencesJVMKt: kotlin.sequences.Sequence asSequence(java.util.Enumeration)
kotlin.comparisons.NaturalOrderComparator: int compare(java.lang.Comparable,java.lang.Comparable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte component3-GBYM_sE(byte[])
kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0)
kotlinx.coroutines.scheduling.DefaultIoScheduler: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.collections.RingBuffer: void add(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateWith(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.enums.EnumEntriesList: int indexOf(java.lang.Object)
kotlin.Metadata: java.lang.String[] d1()
kotlin.jvm.internal.ClassReference$Companion: java.lang.String getClassQualifiedName(java.lang.Class)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence replaceRange(java.lang.CharSequence,kotlin.ranges.IntRange,java.lang.CharSequence)
kotlin.UShortArray: java.lang.String toString()
kotlinx.coroutines.scheduling.CoroutineScheduler: void shutdown(long)
kotlin.Metadata: int xi()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.collections.EmptySet: java.lang.String toString()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(byte[])
kotlin.jvm.internal.TypeParameterReference$Companion: java.lang.String toString(kotlin.reflect.KTypeParameter)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator thenDescending(java.util.Comparator,java.util.Comparator)
kotlin.math.MathKt__MathJVMKt: void getAbsoluteValue$annotations(long)
kotlin.collections.builders.MapBuilder: java.lang.Object[] access$allocateValuesArray(kotlin.collections.builders.MapBuilder)
kotlin.io.FileTreeWalk: kotlin.io.FileWalkDirection access$getDirection$p(kotlin.io.FileTreeWalk)
kotlinx.coroutines.sync.MutexImpl: java.lang.Object onLockProcessResult(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: UArraysKt___UArraysJvmKt$asList$1(int[])
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression downTo-5PvTz6A(short,short)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int minOrThrow-U(int[])
kotlin.collections.builders.MapBuilder: boolean putRehash(int)
kotlinx.coroutines.channels.BufferedChannel: boolean tryResumeSender(java.lang.Object,kotlinx.coroutines.channels.ChannelSegment,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List runningFold(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List buildListInternal(int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2)
kotlin.io.FilesKt__UtilsKt: boolean copyRecursively$default(java.io.File,java.io.File,boolean,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Short boxShort(short)
kotlin.ranges.UIntRange: boolean contains(java.lang.Comparable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.time.DurationKt: long durationOfMillis(long)
kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.ULongArrayKt: long[] ULongArray(int,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilder: java.lang.Object[] access$getKeysArray$p(kotlin.collections.builders.MapBuilder)
kotlin.text.CharsKt: CharsKt()
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: HandlerContext$scheduleResumeAfterDelay$1(kotlinx.coroutines.android.HandlerContext,java.lang.Runnable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
kotlin.text.UStringsKt: byte toUByte(java.lang.String)
kotlin.jvm.JvmName: java.lang.String name()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow consumeAsFlow(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.CompletedContinuation: java.lang.Object component4()
kotlin.time.DurationKt: void getMinutes$annotations(double)
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: void dispose()
kotlin.collections.ArraysKt___ArraysKt: double minOf(long[],kotlin.jvm.functions.Function1)
kotlin.collections.LongIterator: void remove()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(byte[],byte,int,int,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: ChannelsKt__DeprecatedKt$firstOrNull$1(kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Object maxWith(kotlin.sequences.Sequence,java.util.Comparator)
kotlinx.coroutines.internal.DispatchedContinuation: void resumeWith(java.lang.Object)
kotlin.collections.builders.MapBuilder: boolean putAllEntries(java.util.Collection)
kotlin.io.FilesKt__UtilsKt$copyRecursively$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.KotlinVersionCurrentValue: kotlin.KotlinVersion get()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String substring(java.lang.String,int)
kotlin.jvm.internal.PropertyReference0: kotlin.reflect.KCallable computeReflected()
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.ULongRange until-eb3DHEI(long,long)
kotlin.collections.ArraysKt___ArraysKt: byte first(byte[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2: FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2(kotlinx.coroutines.flow.FlowCollector)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceRightOrNull(java.util.List,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt___StringsKt: java.lang.Character randomOrNull(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character reduceRightIndexedOrNull(char[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: ArraysKt___ArraysJvmKt$asList$5(float[])
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: short get-Mh2AYeg(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character randomOrNull(char[])
kotlin.ULong: double toDouble-impl(long)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
kotlin.collections.RingBuffer: java.lang.Object[] access$getBuffer$p(kotlin.collections.RingBuffer)
kotlin.reflect.KProperty0: kotlin.reflect.KProperty0$Getter getGetter()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: boolean contains(char)
kotlin.text.StringsKt__StringsKt: java.lang.Object ifEmpty(java.lang.CharSequence,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(int[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.AbstractTimeSourceKt: java.lang.Runnable wrapTask(java.lang.Runnable)
kotlinx.coroutines.JobSupport: void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable)
kotlin.reflect.TypesJVMKt$typeToString$unwrap$1: TypesJVMKt$typeToString$unwrap$1()
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyOfRange(float[],int,int)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.reflect.KClass$DefaultImpls: void isData$annotations()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
kotlin.time.Duration: long toLongNanoseconds-impl(long)
kotlin.collections.builders.MapBuilderEntries: boolean containsEntry(java.util.Map$Entry)
kotlin.collections.MapsKt___MapsKt: java.lang.Comparable minOf(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Double max(java.lang.Iterable)
kotlinx.coroutines.flow.internal.ChannelFlowKt: kotlinx.coroutines.flow.internal.ChannelFlow asChannelFlow(kotlinx.coroutines.flow.Flow)
kotlin.collections.ArraysKt___ArraysKt: short first(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: float maxOrThrow(java.lang.Float[])
kotlin.time.LongSaturatedMathKt: long saturatingAddInHalves-pTJri5U(long,long)
kotlin.sequences.TransformingSequence: java.util.Iterator iterator()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object)
kotlin.jvm.functions.Function5: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: boolean isHidden(java.nio.file.Path)
kotlinx.coroutines.DispatchedTask: DispatchedTask(int)
kotlin.text.Regex$Serialized$Companion: Regex$Serialized$Companion()
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(char[])
kotlinx.coroutines.internal.ThreadLocalElement: ThreadLocalElement(java.lang.Object,java.lang.ThreadLocal)
kotlin.sequences.DropSequence: kotlin.sequences.Sequence take(int)
kotlin.text.Regex: java.util.regex.Pattern access$getNativePattern$p(kotlin.text.Regex)
kotlin.collections.TypeAliasesKt: void HashMap$annotations()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator compareByDescending(kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int reduceRightIndexed-D40WMg8(int[],kotlin.jvm.functions.Function3)
kotlin.io.FilePathComponents: boolean equals(java.lang.Object)
kotlin.properties.NotNullVar: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.Job launchSharing$FlowKt__ShareKt(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.MutableSharedFlow,kotlinx.coroutines.flow.SharingStarted,java.lang.Object)
kotlin.reflect.KClass: boolean isFinal()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
kotlin.NotImplementedError: NotImplementedError(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.NumbersKt__FloorDivModKt: byte mod(int,byte)
kotlinx.coroutines.flow.internal.ChannelFlowMerge: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.collections.ArraysKt___ArraysKt$withIndex$3: java.util.Iterator invoke()
kotlin.ULongArray$Iterator: boolean hasNext()
kotlin.collections.EmptyList: boolean add(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUInt(int[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.TimeoutKt: kotlinx.coroutines.TimeoutCancellationException TimeoutCancellationException(long,kotlinx.coroutines.Delay,kotlinx.coroutines.Job)
kotlin.UIntArray: kotlin.UIntArray box-impl(int[])
kotlinx.coroutines.TimeoutKt: java.lang.Object withTimeoutOrNull(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.jvm.internal.Intrinsics: void checkHasClass(java.lang.String,java.lang.String)
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.Pair: Pair(java.lang.Object,java.lang.Object)
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4: StreamsKt$asSequence$$inlined$Sequence$4(java.util.stream.DoubleStream)
kotlin.StandardKt: StandardKt()
kotlin.time.DurationKt: long getMinutes(double)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character reduceIndexedOrNull(char[],kotlin.jvm.functions.Function3)
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.util.List asList-QwZRm1k(long[])
kotlin.jvm.internal.ClassReference: boolean isAbstract()
kotlin.collections.builders.ListBuilderKt: boolean subarrayContentEquals(java.lang.Object[],int,int,java.util.List)
kotlin.collections.AbstractMutableMap: java.util.Set entrySet()
kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls: boolean offer(kotlinx.coroutines.channels.BroadcastChannel,java.lang.Object)
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(double[],kotlin.jvm.functions.Function3)
kotlin.ranges.RangesKt__RangesKt: RangesKt__RangesKt()
kotlinx.coroutines.future.ContinuationHandler: ContinuationHandler(kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: java.lang.String trimEnd(java.lang.String,char[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWithOrNull-myNOsp4(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArrayAsCollection: boolean containsAll(java.util.Collection)
kotlin.collections.builders.MapBuilder$EntryRef: java.lang.Object setValue(java.lang.Object)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
kotlinx.coroutines.flow.FlowKt__MergeKt: void getDEFAULT_CONCURRENCY_PROPERTY_NAME$annotations()
kotlin.UNumbersKt: int takeHighestOneBit-WZ4Q5Ns(int)
kotlin.ranges.OpenEndDoubleRange: boolean contains(double)
kotlin.collections.EmptyIterator: void set(java.lang.Object)
kotlin.reflect.KTypeProjection: KTypeProjection(kotlin.reflect.KVariance,kotlin.reflect.KType)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: FlowKt__ZipKt$combineTransform$6$2(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__IndentKt$prependIndent$1: java.lang.String invoke(java.lang.String)
kotlin.text.StringsKt___StringsKt: java.util.List toList(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt$withIndex$5: java.lang.Object invoke()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(int,long)
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] values()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.DeferredCoroutine: java.lang.Object getCompleted()
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: java.lang.Object access$hasNextOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator,kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation)
kotlin.UShort: int div-WZ4Q5Ns(short,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow publishOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.StateFlowKt: java.lang.Object updateAndGet(kotlinx.coroutines.flow.MutableStateFlow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: StringsKt__StringsKt()
kotlinx.coroutines.channels.ChannelCoroutine: boolean cancel(java.lang.Throwable)
androidx.work.impl.workers.CombineContinuationsWorker: CombineContinuationsWorker(android.content.Context,androidx.work.WorkerParameters)
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer firstOrNull(kotlin.ranges.IntProgression)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIsInstance(java.lang.Object[])
kotlin.InitializedLazyImpl: InitializedLazyImpl(java.lang.Object)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invokeVararg(java.lang.Object[])
kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.StateFlowSlot: StateFlowSlot()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.ULong minBy-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.time.DurationJvmKt: boolean getDurationAssertionsEnabled()
kotlinx.coroutines.debug.internal.DebugProbesImpl: void access$probeCoroutineCompleted(kotlinx.coroutines.debug.internal.DebugProbesImpl,kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $values()
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.UShortArray: java.lang.Object[] toArray(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyInto(char[],char[],int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(java.lang.Object[])
kotlin.ranges.CharRange: CharRange(char,char)
kotlin.collections.GroupingKt__GroupingKt: GroupingKt__GroupingKt()
kotlin.time.DurationUnit: DurationUnit(java.lang.String,int,java.util.concurrent.TimeUnit)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int lastIndexOf(java.lang.Object)
kotlin.collections.MapsKt___MapsKt: java.lang.Object minOfWith(java.util.Map,java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo,boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object maxBy(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
kotlin.time.Duration: long div-UwyO8pc(long,double)
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.coroutines.CoroutineContext$Element: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Float maxOrNull(java.lang.Iterable)
kotlin.sequences.SequencesKt___SequencesKt: double sumOfDouble(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.android.HandlerContext: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
kotlin.time.Duration$Companion: long getHours-UwyO8pc(int)
kotlin.jvm.functions.FunctionN: java.lang.Object invoke(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong singleOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.Dispatchers: void getMain$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object component4(java.lang.Object[])
kotlin.time.Duration: boolean isInNanos-impl(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(byte[],java.lang.Iterable)
kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred(kotlinx.coroutines.Job)
kotlin.annotation.Target: kotlin.annotation.AnnotationTarget[] allowedTargets()
kotlin.math.MathKt__MathJVMKt: float atan(float)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int indexOf(java.lang.Object)
kotlin.comparisons.ReversedComparator: java.util.Comparator getComparator()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
kotlin.jvm.internal.TypeIntrinsics: boolean isFunctionOfArity(java.lang.Object,int)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object tryReceive-PtdJZtk()
kotlinx.coroutines.JobSupport: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean lastOrNull(boolean[])
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KType platformType(kotlin.reflect.KType,kotlin.reflect.KType)
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: java.lang.Object poll(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.Unconfined: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1: FlowKt__DistinctKt$defaultAreEquivalent$1()
kotlinx.coroutines.CancellableContinuationImpl: void resume(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelSegment: void storeElement$kotlinx_coroutines_core(int,java.lang.Object)
kotlin.StandardKt__SynchronizedKt: java.lang.Object synchronized(java.lang.Object,kotlin.jvm.functions.Function0)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp makeCondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(int[],java.util.Collection)
kotlin.text.Regex: java.util.Set getOptions()
kotlin.jvm.internal.ShortSpreadBuilder: ShortSpreadBuilder(int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable access$recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer randomOrNull(int[])
kotlin.collections.ArraysKt___ArraysKt: int count(int[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
kotlin.DeprecationLevel: DeprecationLevel(java.lang.String,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.random.AbstractPlatformRandom: int nextInt(int)
kotlin.collections.ArraysKt___ArraysKt: int count(int[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequenceScope: java.lang.Object yieldAll(java.util.Iterator,kotlin.coroutines.Continuation)
kotlin.text.Regex$splitToSequence$1: Regex$splitToSequence$1(kotlin.text.Regex,java.lang.CharSequence,int,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsJVMKt: java.util.regex.Pattern toPattern$default(java.lang.String,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short minWithOrNull(short[],java.util.Comparator)
kotlinx.coroutines.selects.SelectOldKt: void access$resumeUndispatchedWithException(kotlinx.coroutines.CancellableContinuation,java.lang.Throwable)
kotlin.text.CharsKt__CharJVMKt: boolean isISOControl(char)
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.sync.SemaphoreSegment createSegment(long,kotlinx.coroutines.sync.SemaphoreSegment)
kotlin.TypeAliasesKt: void RuntimeException$annotations()
kotlin.UIntArray: boolean removeAll(java.util.Collection)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: ArraysKt___ArraysJvmKt$asList$6(double[])
kotlin.math.MathKt__MathJVMKt: double ln1p(double)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: java.lang.String systemProp(java.lang.String,java.lang.String)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke()
kotlinx.coroutines.channels.ChannelSegment: ChannelSegment(long,kotlinx.coroutines.channels.ChannelSegment,kotlinx.coroutines.channels.BufferedChannel,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(boolean[])
kotlin.collections.EmptyMap: java.util.Set keySet()
kotlin.text.Regex$splitToSequence$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.UnbiasedSelectImplementation: UnbiasedSelectImplementation(kotlin.coroutines.CoroutineContext)
kotlin.sequences.DropSequence: java.util.Iterator iterator()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.URangesKt___URangesKt: kotlin.ULong firstOrNull(kotlin.ranges.ULongProgression)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOrNull(java.lang.Comparable[])
kotlin.io.encoding.Base64Kt: byte[] access$getBase64EncodeMap$p()
kotlin.reflect.KProperty: kotlin.reflect.KProperty$Getter getGetter()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilderValues: boolean add(java.lang.Object)
kotlin.TypeAliasesKt: void IndexOutOfBoundsException$annotations()
kotlin.ranges.LongProgression: boolean isEmpty()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareBy$lambda$0$ComparisonsKt__ComparisonsKt(kotlin.jvm.functions.Function1[],java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow scan(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.io.encoding.Base64: void checkDestinationBounds(int,int,int)
kotlin.ranges.UIntRange: UIntRange(int,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float reduceRightOrNull(float[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: float maxOf(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.DebugStringsKt: java.lang.String toDebugString(kotlin.coroutines.Continuation)
kotlin.text.Regex$Companion: java.lang.String escape(java.lang.String)
kotlin.text.StringsKt__StringsJVMKt: byte[] encodeToByteArray(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int lastIndexOf-7apg3OU(byte)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-2fe2U9s$default(int[],int,int,int,int,java.lang.Object)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1: java.lang.Object[] invoke()
kotlin.collections.MapsKt___MapsKt: java.util.List toList(java.util.Map)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyOf(int[],int)
kotlin.text.MatcherMatchResult$groupValues$1: int lastIndexOf(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle-s5X_as8(short[],kotlin.random.Random)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task trySteal(int)
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(byte[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.text.TypeAliasesKt: void CharacterCodingException$annotations()
kotlinx.coroutines.CopyableThrowable: java.lang.Throwable createCopy()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.CancellableContinuationImpl: void detachChildIfNonResuable()
kotlin.collections.ArraysKt___ArraysKt: short reduceRight(short[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.EventLoop: EventLoop()
kotlin.time.Duration$Companion: Duration$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ULongArray: java.lang.String toString-impl(long[])
kotlin.ranges.ClosedFloatingPointRange$DefaultImpls: boolean contains(kotlin.ranges.ClosedFloatingPointRange,java.lang.Comparable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-EtDCXyQ$default(short[],short,int,int,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(short[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.PropertyReference2Impl: PropertyReference2Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence windowed$default(kotlin.sequences.Sequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.LongRange,java.lang.Long)
kotlin.io.ByteStreamsKt$iterator$1: void setNextByte(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(short[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task pollCpu()
kotlin.Metadata: java.lang.String[] d2()
kotlin.collections.ArraysKt___ArraysKt: float first(float[])
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt__MapsKt: void minusAssign(java.util.Map,java.lang.Object[])
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,char,int,boolean)
kotlin.ranges.RangesKt___RangesKt: java.lang.Long firstOrNull(kotlin.ranges.LongProgression)
kotlin.jvm.internal.MutablePropertyReference0Impl: java.lang.Object get()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
kotlin.CharCodeKt: char Char(int)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfterLast$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(long[],int,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: FlowKt__ZipKt$combine$$inlined$unsafeFlow$2(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.CharSequence)
kotlinx.coroutines.channels.ChannelSegment: kotlinx.coroutines.channels.BufferedChannel getChannel()
kotlin.collections.AbstractCollection: int size()
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality valueOf(java.lang.String)
kotlinx.coroutines.channels.ActorCoroutine: boolean handleJobException(java.lang.Throwable)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UByte maxWith-XMRcp5o(byte[],java.util.Comparator)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(long[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-JGPC0-M(short[],java.lang.Iterable)
kotlin.jvm.internal.ArrayDoubleIterator: double nextDouble()
kotlin.jvm.JvmClassMappingKt: java.lang.Class getDeclaringJavaClass(java.lang.Enum)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: boolean contains(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] copyInto-sIZ3KeM(int[],int[],int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1: UArraysKt___UArraysKt$withIndex$1(int[])
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.math.MathKt__MathJVMKt: float ceil(float)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.collections.ArraysKt___ArraysKt: char[] sortedArray(char[])
kotlin.collections.CollectionsKt___CollectionsKt: long sumOfLong(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(float[])
kotlin.ranges.URangesKt___URangesKt: kotlin.ULong lastOrNull(kotlin.ranges.ULongProgression)
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfter(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.RunnableKt$Runnable$1: void run()
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Iterable)
kotlinx.coroutines.selects.OnTimeout$selectClause$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyOf(long[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.StateFlow asStateFlow(kotlinx.coroutines.flow.MutableStateFlow)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow)
kotlin.UByte: int minus-xj2QHRw(byte,short)
kotlin.jvm.internal.DoubleCompanionObject: DoubleCompanionObject()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.Character lastOrNull(java.lang.CharSequence)
kotlin.UShort: kotlin.UShort box-impl(short)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(char[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEachIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2)
kotlin.text.CharCategory: boolean contains(char)
kotlin.text.StringsKt___StringsKt: double maxOf(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
kotlinx.coroutines.JobSupport$Finishing: JobSupport$Finishing(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable)
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: int count(float[])
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: java.lang.Void noImpl()
kotlin.collections.EmptyList: boolean equals(java.lang.Object)
kotlin.jvm.functions.Function18: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Long toLongOrNull(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: boolean bufferOrRendezvousSend(long)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],boolean[])
kotlin.jvm.internal.Intrinsics: void checkReturnedValueIsNotNull(java.lang.Object,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler: CoroutineScheduler(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1: ExceptionsConstructorKt$createConstructor$nullResult$1()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List mapIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2)
kotlin.internal.ProgressionUtilKt: long mod(long,long)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: int systemProp(java.lang.String,int,int,int)
kotlin.jvm.internal.CallableReference: boolean isFinal()
kotlinx.coroutines.JobImpl: boolean complete()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
kotlin.time.Duration: boolean isFinite-impl(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4: java.util.Iterator invoke()
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveCatching()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
kotlinx.coroutines.flow.internal.ChannelFlowMerge: java.lang.String additionalToStringProps()
kotlin.comparisons.NaturalOrderComparator: java.util.Comparator reversed()
kotlin.math.MathKt__MathJVMKt: float tanh(float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt maxByOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: short[] sortedArray(short[])
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int lastIndexOf(byte)
kotlin.UNumbersKt: int countLeadingZeroBits-xj2QHRw(short)
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer reduceRightOrNull(int[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object firstNotNullOf(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: java.lang.Object next(kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilderEntries: boolean containsAll(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(long[],kotlin.jvm.functions.Function1)
kotlin.ranges.ULongProgressionIterator: ULongProgressionIterator(long,long,long)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence distinctBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.Intrinsics: void needClassReification(java.lang.String)
kotlin.math.MathKt__MathJVMKt: double tan(double)
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.FloatIterator iterator(float[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: short reduceRight-xzaTVY8(short[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float reduceIndexedOrNull(float[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.CompletableJob$DefaultImpls: void cancel(kotlinx.coroutines.CompletableJob)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object getValue()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(short[])
kotlin.time.Duration$Companion: long getSeconds-UwyO8pc(int)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator nullsLast(java.util.Comparator)
kotlin.time.DurationKt: long getDays(double)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlin.io.ByteStreamsKt$iterator$1: void setNextPrepared(boolean)
kotlinx.coroutines.internal.DiagnosticCoroutineContextException: java.lang.Throwable fillInStackTrace()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long getOrElse-Xw8i6dc(long[],int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(java.lang.Object[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: boolean none(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(short[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause0,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong minWithOrNull-zrEWJaI(long[],java.util.Comparator)
kotlinx.coroutines.sync.SemaphoreSegment: java.lang.String toString()
kotlin.text.StringsKt___StringsKt: double sumByDouble(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt___MapsKt: java.util.List mapNotNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: float reduceIndexed(float[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int indexOf(java.lang.Object)
kotlin.ranges.URangesKt___URangesKt: byte coerceIn-b33U2AM(byte,byte,byte)
kotlin.math.MathKt__MathJVMKt: float log10(float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-2fe2U9s$default(int[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: void onClosedSelectOnReceive(kotlinx.coroutines.selects.SelectInstance)
kotlin.text.FlagEnum: int getMask()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlin.random.Random$Default: boolean nextBoolean()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List take-nggk6HY(short[],int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.text.CharsKt__CharJVMKt: boolean isLetter(char)
kotlin.collections.IndexingIterator: java.lang.Object next()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BroadcastChannelKt: kotlinx.coroutines.internal.Symbol access$getNO_ELEMENT$p()
kotlin.collections.AbstractMutableCollection: AbstractMutableCollection()
kotlinx.coroutines.channels.ChannelSegment: int getNumberOfSlots()
kotlin.collections.builders.ListBuilder: java.lang.Object removeAtInternal(int)
kotlinx.coroutines.JobSupport$SelectOnJoinCompletionHandler: void invoke(java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(float[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$sorted$1: SequencesKt___SequencesKt$sorted$1(kotlin.sequences.Sequence)
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.String)
kotlin.UByte: long toLong-impl(byte)
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: SequencesKt___SequencesKt$runningReduceIndexed$1(kotlin.sequences.Sequence,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel flatMap$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.MapsKt___MapsJvmKt: MapsKt___MapsJvmKt()
kotlin.collections.builders.MapBuilder$EntryRef: int hashCode()
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$4: ExceptionsConstructorKt$createConstructor$1$4(java.lang.reflect.Constructor)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: void access$decrementSize(kotlinx.coroutines.debug.internal.ConcurrentWeakMap)
kotlinx.coroutines.internal.InlineList: java.lang.Object constructor-impl(java.lang.Object)
kotlin.concurrent.TimersKt$timerTask$1: void run()
kotlinx.coroutines.channels.ChannelCoroutine: ChannelCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel,boolean,boolean)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: byte maxOf(byte,byte)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldIndexed-3iWJZGE(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Boolean minBy(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport$Finishing: void setCompleting(boolean)
kotlinx.coroutines.internal.SegmentOrClosed: void getSegment$annotations()
kotlinx.coroutines.YieldContext$Key: YieldContext$Key()
kotlinx.coroutines.internal.MainDispatchersKt: boolean isMissing(kotlinx.coroutines.MainCoroutineDispatcher)
kotlin.jvm.internal.AdaptedFunctionReference: AdaptedFunctionReference(int,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(boolean[])
kotlin.text.CharDirectionality: CharDirectionality(java.lang.String,int,int)
kotlinx.coroutines.internal.InlineList: int hashCode()
kotlin.system.TimingKt: long measureTimeMillis(kotlin.jvm.functions.Function0)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt elementAtOrNull-qFRl0hI(int[],int)
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlin.collections.UArraySortingKt: void quickSort-Aa5vz7o(short[],int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.time.Duration$Companion: long microseconds-UwyO8pc(double)
kotlinx.coroutines.selects.SelectImplementation: void access$reregisterClause(kotlinx.coroutines.selects.SelectImplementation,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(short[],java.util.Comparator)
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$1: void invoke(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.time.Duration: double getInSeconds-impl(long)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.math.MathKt__MathJVMKt: float cosh(float)
kotlin.text.StringsKt___StringsKt: char elementAtOrElse(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)
kotlin.ranges.OpenEndFloatRange: int hashCode()
kotlin.NumbersKt__FloorDivModKt: int mod(short,int)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double min(double[])
kotlin.collections.CollectionsKt__MutableCollectionsKt: java.util.Collection convertToListIfNotCollection(java.lang.Iterable)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int lastIndexOf(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int count-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KProperty0$Getter getGetter()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence scanIndexed(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.JobSupport: java.lang.Object joinSuspend(kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlin.io.path.PathsKt__PathReadWriteKt: byte[] readBytes(java.nio.file.Path)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object emit(kotlin.coroutines.Continuation,java.lang.Object)
kotlin.io.FileTreeWalk: kotlin.io.FileTreeWalk onEnter(kotlin.jvm.functions.Function1)
kotlin.UInt: long rem-VKZWuLQ(int,long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double reduceRightIndexedOrNull(double[],kotlin.jvm.functions.Function3)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilderEntries: boolean retainAll(java.util.Collection)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.ranges.ComparableRange: ComparableRange(java.lang.Comparable,java.lang.Comparable)
kotlinx.coroutines.flow.SharedFlowSlot: SharedFlowSlot()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte minWith(byte[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] plus(java.lang.Object[],java.util.Collection)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence asSequence(java.util.Iterator)
kotlin.coroutines.SafeContinuation: void resumeWith(java.lang.Object)
kotlin.io.FilesKt__FileReadWriteKt: java.util.List readLines(java.io.File,java.nio.charset.Charset)
kotlinx.coroutines.LazyStandaloneCoroutine: LazyStandaloneCoroutine(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1: void run()
kotlin.collections.ReversedList: int getSize()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong find-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LimitedDispatcher$Worker: LimitedDispatcher$Worker(kotlinx.coroutines.internal.LimitedDispatcher,java.lang.Runnable)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: java.lang.Object emit(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.ULong: short toShort-impl(long)
kotlinx.coroutines.flow.internal.FlowCoroutine: FlowCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.KotlinVersion: int compareTo(java.lang.Object)
kotlin.io.path.PathTreeWalk: java.nio.file.LinkOption[] access$getLinkOptions(kotlin.io.path.PathTreeWalk)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: ChannelsKt__DeprecatedKt$single$1(kotlin.coroutines.Continuation)
kotlin.UByte: long div-VKZWuLQ(byte,long)
kotlinx.coroutines.AbstractTimeSource: AbstractTimeSource()
kotlin.collections.MapsKt___MapsKt: int count(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfLong(java.lang.Iterable)
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator naturalOrder()
kotlin.collections.ArraysKt___ArraysKt: byte last(byte[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(byte[])
kotlin.collections.ArraysKt___ArraysKt: int maxByOrThrow(int[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType typeOf(kotlin.reflect.KClassifier)
kotlin.collections.EmptyMap: java.lang.Void get(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8: java.util.Iterator iterator()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValuesBy(java.lang.Object,java.lang.Object,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.time.TimeMark$DefaultImpls: kotlin.time.TimeMark minus-LRDsOJo(kotlin.time.TimeMark,long)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int lastIndexOf(float)
kotlinx.coroutines.debug.internal.DebugProbesImpl: DebugProbesImpl()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(char[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceFirstCharWithChar(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.ranges.URangesKt___URangesKt: long coerceAtMost-eb3DHEI(long,long)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMap: java.util.Set getEntries()
kotlin.collections.ArraysKt___ArraysJvmKt: float[] plus(float[],float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLastWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractList: int indexOf(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.String takeLastWhile(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMutableCollection: int size()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-ZRhS8yI(long[],kotlin.ranges.IntRange)
kotlinx.coroutines.DelayKt: java.lang.Object delay(long,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String uppercase(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong lastOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.text.Regex: java.lang.String replace(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.CharProgression downTo(char,char)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull()
kotlin.jvm.internal.ByteSpreadBuilder: int getSize(byte[])
kotlin.jvm.internal.ClassReference: void isData$annotations()
kotlin.time.Duration: long times-UwyO8pc(long,int)
kotlinx.coroutines.debug.AgentPremain$DebugProbesTransformer: byte[] transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])
kotlin.time.TimeSource$Monotonic$ValueTimeMark: TimeSource$Monotonic$ValueTimeMark(long)
kotlin.collections.ArraysKt___ArraysKt: short maxOrThrow(short[])
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.StackTraceElement getStackTraceElement()
kotlinx.coroutines.EventLoop: void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object elementAtOrElse(java.lang.Object[],int,kotlin.jvm.functions.Function1)
kotlin.ranges.URangesKt___URangesKt: int last(kotlin.ranges.UIntProgression)
kotlin.time.AbstractDoubleTimeSource: kotlin.time.ComparableTimeMark markNow()
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1: java.util.Iterator invoke()
kotlin.jvm.internal.Intrinsics: void throwUninitializedProperty(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toMutableSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt: void cancelChildren(kotlinx.coroutines.Job,java.lang.Throwable)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2: int compare(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: void disposeOnCompletion(kotlinx.coroutines.DisposableHandle)
kotlin.collections.DoubleIterator: java.lang.Double next()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object invoke-WpGqRn0(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object removeFirstOrNull()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long component2-QwZRm1k(long[])
kotlin.io.ConsoleKt: void print(double)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object lastOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder: int hash(java.lang.Object)
kotlin.coroutines.SafeContinuation: java.lang.Object getOrThrow()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object)
kotlinx.coroutines.EventLoop_commonKt: long delayNanosToMillis(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(short[],short,int,int,int,java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: java.lang.Object get(int)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void resumeWith(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long minWith(long[],java.util.Comparator)
kotlin.collections.builders.MapBuilderKeys: void clear()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow concatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(byte[],java.lang.Iterable)
kotlinx.coroutines.RunnableKt$Runnable$1: RunnableKt$Runnable$1(kotlin.jvm.functions.Function0)
kotlin.sequences.SequencesKt__SequenceBuilderKt: kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.Dispatchers: void getDefault$annotations()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow observeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short maxWith(short[],java.util.Comparator)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
kotlin.collections.IntIterator: IntIterator()
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancellableContinuationImpl: void loop$atomicfu(java.util.concurrent.atomic.AtomicIntegerFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.text.UStringsKt: short toUShort(java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__ErrorsKt: kotlinx.coroutines.flow.Flow retry(kotlinx.coroutines.flow.Flow,long,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CancellableContinuationImpl: void multipleHandlersError(java.lang.Object,java.lang.Object)
kotlinx.coroutines.sync.MutexImpl: java.lang.Object access$lockSuspend(kotlinx.coroutines.sync.MutexImpl,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: ChannelsKt__DeprecatedKt$filter$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Iterable withIndex(java.lang.Iterable)
kotlin.jvm.internal.ClassReference: java.lang.Class getJClass()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable maxOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: boolean contains(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scan-zi1B2BA(int[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.time.Duration: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.TypeAliasesKt: void ArrayList$annotations()
kotlinx.coroutines.AwaitKt: java.lang.Object awaitAll(kotlinx.coroutines.Deferred[],kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double maxBy(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel drop$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)
kotlin.ULong: long minus-VKZWuLQ(long,long)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: int compareTo-impl(long,kotlin.time.ComparableTimeMark)
kotlin.jvm.internal.Intrinsics: void needClassReification()
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection[] values()
kotlin.io.encoding.Base64$Default: kotlin.io.encoding.Base64 getUrlSafe()
kotlinx.coroutines.ExecutorCoroutineDispatcher: void close()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.util.List asList--ajY-9A(int[])
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode nextIfRemoved()
kotlinx.coroutines.future.FutureKt: java.util.concurrent.CompletableFuture asCompletableFuture(kotlinx.coroutines.Job)
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.InputStream inputStream(java.nio.file.Path,java.nio.file.OpenOption[])
kotlinx.coroutines.future.FutureKt$asDeferred$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.Delay: java.lang.Object delay(long,kotlin.coroutines.Continuation)
kotlin.sequences.TakeWhileSequence$iterator$1: boolean hasNext()
kotlin.ResultKt: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(long[],long,int,int,int,java.lang.Object)
kotlin.UShortArrayKt: short[] ushortArrayOf-rL5Bavg(short[])
kotlin.time.DurationKt: long access$durationOfMillis(long)
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlin.ranges.URangesKt___URangesKt: short coerceAtMost-5PvTz6A(short,short)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int getLastIndex-GBYM_sE(byte[])
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
kotlin.ranges.RangesKt__RangesKt: void checkStepIsPositive(boolean,java.lang.Number)
kotlinx.coroutines.selects.TrySelectDetailedResult: TrySelectDetailedResult(java.lang.String,int)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException,int,java.lang.Object)
kotlin.text.CharsKt__CharKt: boolean equals$default(char,char,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double minOf(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-F7u83W8(long[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.ranges.IntRange$Companion: IntRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.coroutines.CoroutineContext$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.sync.SemaphoreImpl: boolean tryResumeNextFromQueue()
kotlin.collections.EmptyList: void add(int,java.lang.Void)
kotlinx.coroutines.intrinsics.UndispatchedKt: java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable minOrThrow(kotlin.sequences.Sequence)
kotlin.sequences.SequenceBuilderIterator: kotlin.coroutines.CoroutineContext getContext()
kotlin.collections.builders.ListBuilder: int lastIndexOf(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(java.util.Iterator)
kotlin.reflect.KClass: kotlin.reflect.KVisibility getVisibility()
kotlin.text.StringsKt___StringsKt: char minOrThrow(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort[] toTypedArray-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(double[])
kotlinx.coroutines.CompletionHandlerKt: kotlin.jvm.functions.Function1 getAsHandler(kotlinx.coroutines.CompletionHandlerBase)
kotlin.Pair: java.lang.Object getFirst()
kotlin.text.StringsKt__StringsKt: boolean contains(java.lang.CharSequence,char,boolean)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(double[],int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object random(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(float[])
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CompletableJob$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.CompletableJob,kotlinx.coroutines.Job)
kotlin.sequences.GeneratorSequence: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: void forEach(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()
kotlin.TuplesKt: java.util.List toList(kotlin.Triple)
kotlin.Triple: boolean equals(java.lang.Object)
kotlin.ULong: long constructor-impl(long)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(boolean[],boolean[])
kotlin.collections.builders.MapBuilder$EntryRef: MapBuilder$EntryRef(kotlin.collections.builders.MapBuilder,int)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-EtDCXyQ$default(short[],short,int,int,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWith-5NtCtWE(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(android.view.accessibility.AccessibilityNodeInfo,int,int)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment closeLinkedList()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-kdPth3s(byte[],byte[])
kotlin.collections.MapWithDefault: java.util.Map getMap()
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.DoubleIterator iterator(double[])
kotlin.text.StringsKt__StringsKt: java.lang.String trimEnd(java.lang.String,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BroadcastChannelImpl: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Throwable)
kotlin.text.StringsKt___StringsKt: java.lang.String dropWhile(java.lang.String,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelFlowKt: kotlinx.coroutines.flow.FlowCollector access$withUndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: ChannelsKt__DeprecatedKt$lastOrNull$1(kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.String getPathString(java.nio.file.Path)
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.MutexImpl$onLock$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger times(java.math.BigInteger,java.math.BigInteger)
kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1: SequencesKt___SequencesKt$minus$2$iterator$1(java.lang.Object[])
kotlin.math.MathKt__MathJVMKt: float IEEErem(float,float)
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2: java.util.Iterator invoke(kotlin.sequences.Sequence)
kotlin.ranges.OpenEndDoubleRange: boolean isEmpty()
kotlin.sequences.FlatteningSequence$iterator$1: void setItemIterator(java.util.Iterator)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object firstOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.reflect.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Comparable max(java.lang.Iterable)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.util.List asList-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: boolean isNotBlank(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: FlowKt__DelayKt$sample$2$1$1(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.ranges.URangesKt___URangesKt: kotlin.UInt firstOrNull(kotlin.ranges.UIntProgression)
kotlin.sequences.DropSequence$iterator$1: int getLeft()
kotlin.collections.UArraySortingKt: int partition-4UcCI2c(byte[],int,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.io.ByteStreamsKt: byte[] readBytes(java.io.InputStream)
kotlin.collections.ArraysKt___ArraysKt: int maxWithOrThrow(int[],java.util.Comparator)
kotlinx.coroutines.sync.MutexImpl: boolean tryLock(java.lang.Object)
kotlin.io.FileTreeWalk$WalkState: FileTreeWalk$WalkState(java.io.File)
kotlinx.coroutines.flow.internal.FlowExceptions_commonKt: void checkOwnership(kotlinx.coroutines.flow.internal.AbortFlowException,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.DispatchersKt: kotlinx.coroutines.CoroutineDispatcher getIO(kotlinx.coroutines.Dispatchers)
kotlinx.coroutines.internal.Segment: boolean decPointers$kotlinx_coroutines_core()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharedFlow shareIn$default(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,int,int,java.lang.Object)
kotlinx.coroutines.stream.StreamFlow: StreamFlow(java.util.stream.Stream)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findTask(boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.UShort: int floorDiv-WZ4Q5Ns(short,int)
kotlin.reflect.KClass$DefaultImpls: void isValue$annotations()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String concatToString$default(char[],int,int,int,java.lang.Object)
kotlin.ranges.ClosedFloatRange: boolean contains(java.lang.Comparable)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: FlowKt__MigrationKt$delayFlow$1(long,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.AbstractFlow: AbstractFlow()
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches$default(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean,int,java.lang.Object)
kotlinx.coroutines.AbstractTimeSourceKt: void unregisterTimeLoopThread()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.text.RegexKt$fromInt$1$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.sync.Semaphore Semaphore$default(int,int,int,java.lang.Object)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowOf(java.lang.Object)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int component2--ajY-9A(int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-uLth9ew(long[])
kotlinx.coroutines.internal.LockFreeLinkedListKt: void getUNDECIDED$annotations()
kotlin.time.DurationKt: long getMilliseconds(int)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Float maxOrNull(kotlin.sequences.Sequence)
kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)
kotlin.sequences.GeneratorSequence$iterator$1: int getNextState()
kotlinx.coroutines.DispatchedCoroutine: void afterResume(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: boolean tryResume()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(long[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-K6DWlUc$default(long[],long,int,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(long[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.Channel$Factory: int getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core()
kotlin.ranges.ULongRange: long getEndExclusive-s-VKNKU()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow transformLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.io.path.DirectoryEntriesReader: DirectoryEntriesReader(boolean)
kotlinx.coroutines.CancellableContinuation$DefaultImpls: boolean cancel$default(kotlinx.coroutines.CancellableContinuation,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow emptyFlow()
kotlin.sequences.TakeWhileSequence: TakeWhileSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long random-QwZRm1k(long[])
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List buildList(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.Empty: kotlinx.coroutines.NodeList getList()
kotlinx.coroutines.JobSupport: void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(float[])
kotlin.collections.MapsKt__MapsKt: java.util.Map mapKeysTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: FlowKt__DelayKt$timeoutInternal$1$1$1(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte elementAtOrNull(byte[],int)
kotlin.time.ComparableTimeMark: int compareTo(kotlin.time.ComparableTimeMark)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1: FlowKt__MigrationKt$onErrorReturn$1()
kotlin.math.MathKt__MathJVMKt: float atanh(float)
kotlin.NumbersKt__NumbersJVMKt: int takeLowestOneBit(int)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: int addFailReason(long)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
kotlinx.coroutines.flow.LintKt: java.lang.Object toList(kotlinx.coroutines.flow.SharedFlow,java.util.List,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: double maxOrThrow(kotlin.sequences.Sequence)
kotlinx.coroutines.flow.LintKt$retry$1: LintKt$retry$1(kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: java.lang.String dropLastWhile(java.lang.String,kotlin.jvm.functions.Function1)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
kotlinx.coroutines.flow.LintKt$retry$1: java.lang.Object invoke(java.lang.Throwable,kotlin.coroutines.Continuation)
kotlin.collections.MapsKt__MapWithDefaultKt: MapsKt__MapWithDefaultKt()
kotlinx.coroutines.channels.BroadcastChannelImpl: java.lang.String toString()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object updateCellReceive(kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean any(int[],kotlin.jvm.functions.Function1)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
kotlin.jvm.internal.CharCompanionObject: void getSIZE_BYTES$annotations()
kotlin.KotlinVersion: int getPatch()
kotlin.UByte: int hashCode-impl(byte)
kotlin.time.DurationKt: long getDays(int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: boolean contains(int)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path writeLines(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset,java.nio.file.OpenOption[])
kotlin.ULong: long minus-xj2QHRw(long,short)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.Channel get_channel()
kotlin.collections.CollectionsKt__ReversedViewsKt: CollectionsKt__ReversedViewsKt()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxByOrThrow(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(double[])
kotlin.sequences.FilteringSequence: FilteringSequence(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,java.util.Map)
kotlin.io.path.PathsKt__PathReadWriteKt: PathsKt__PathReadWriteKt()
kotlin.collections.unsigned.UArraysKt___UArraysKt: double maxOf-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferOverflow: BufferOverflow(java.lang.String,int)
kotlin.LazyKt__LazyJVMKt: LazyKt__LazyJVMKt()
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence dropLastWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.CharSpreadBuilder: void add(char)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow scanFold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: float random(float[])
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: long random(long[])
kotlin.ranges.URangesKt___URangesKt: long random(kotlin.ranges.ULongRange)
kotlinx.coroutines.selects.SelectBuilder$DefaultImpls: void onTimeout(kotlinx.coroutines.selects.SelectBuilder,long,kotlin.jvm.functions.Function1)
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object component4(java.util.List)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(long[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt___StringsKt: java.lang.Comparable maxOf(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CompletableDeferredImpl: boolean complete(java.lang.Object)
kotlin.coroutines.CoroutineContext$plus$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.ranges.CharProgression: CharProgression(char,char,int)
kotlin.jvm.internal.TypeReference: void getPlatformTypeUpperBound$kotlin_stdlib$annotations()
kotlin.collections.ArraysKt___ArraysKt: boolean component2(boolean[])
kotlin.collections.ArraysKt___ArraysKt: float last(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectClause0Impl: SelectClause0Impl(java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence chunked(kotlin.sequences.Sequence,int,kotlin.jvm.functions.Function1)
kotlin.UInt: int dec-pVg5ArA(int)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobSupport: boolean cancelCoroutine(java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: float minOf-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: MissingMainCoroutineDispatcher(java.lang.Throwable,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String getState()
kotlinx.coroutines.CoroutineScopeKt: boolean isActive(kotlinx.coroutines.CoroutineScope)
kotlinx.coroutines.internal.Symbol: java.lang.Object unbox(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(short[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(float[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ActorCoroutine: void onCancelling(java.lang.Throwable)
kotlin.coroutines.CombinedContext: java.lang.Object writeReplace()
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelSegment: java.lang.Object getAndSetState$kotlinx_coroutines_core(int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float minOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.reflect.KAnnotatedElement: java.util.List getAnnotations()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object poll()
kotlin.collections.MapsKt__MapsKt: java.lang.Object getOrElse(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0)
kotlin.ULongArray$Iterator: void remove()
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.SemaphoreKt: int access$getMAX_SPIN_CYCLES$p()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: boolean toBoolean(java.lang.String)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String lowercase(java.lang.String)
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
kotlin.sequences.SequencesKt___SequencesKt: long sumOfLong(kotlin.sequences.Sequence)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.ULongProgression downTo-eb3DHEI(long,long)
kotlinx.coroutines.internal.ThreadLocalKey: int hashCode()
kotlin.math.MathKt__MathJVMKt: void getUlp$annotations(double)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
kotlin.UByteKt: byte toUByte(short)
kotlinx.coroutines.DefaultExecutor: java.lang.Thread getThread()
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexedNotNull(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function7)
kotlin.io.FilesKt__FileReadWriteKt: java.io.OutputStreamWriter writer$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object)
kotlin.text.StringsKt__RegexExtensionsKt: kotlin.text.Regex toRegex(java.lang.String,java.util.Set)
kotlin.time.DurationKt: long access$durationOf(long,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Double minOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task add$default(kotlinx.coroutines.scheduling.WorkQueue,kotlinx.coroutines.scheduling.Task,boolean,int,java.lang.Object)
kotlin.text.Regex: kotlin.text.MatchResult find$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.NumbersKt__FloorDivModKt: double mod(float,double)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte last-GBYM_sE(byte[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.OpenEndRange,float)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setTextLocale(android.widget.TextView,java.util.Locale)
kotlin.reflect.KProperty$DefaultImpls: void isConst$annotations()
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow buffer$default(kotlinx.coroutines.flow.Flow,int,int,java.lang.Object)
kotlinx.coroutines.android.HandlerContext: int hashCode()
kotlin.ranges.URangesKt___URangesKt: boolean contains-68kG9v0(kotlin.ranges.UIntRange,byte)
kotlinx.coroutines.CancellableContinuationKt: java.lang.Object suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.text.MatcherMatchResult$groupValues$1: int getSize()
kotlin.sequences.GeneratorSequence$iterator$1: boolean hasNext()
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(long[])
kotlin.collections.ArraysKt___ArraysKt: int reduce(int[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short last-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ExceptionsConstructorKt: java.lang.Throwable tryCopyException(java.lang.Throwable)
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1: java.util.Iterator iterator()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence windowed(kotlin.sequences.Sequence,int,int,boolean)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: long maxOf-sambcqE(long,long,long)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
kotlin.time.Duration$Companion: void getSeconds-UwyO8pc$annotations(int)
kotlinx.coroutines.channels.Channel$DefaultImpls: java.lang.Object poll(kotlinx.coroutines.channels.Channel)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] asIntArray--ajY-9A(int[])
kotlinx.coroutines.JobSupport: boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
kotlin.io.FilesKt__UtilsKt: java.lang.String getInvariantSeparatorsPath(java.io.File)
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlin.jvm.functions.Function1 getDynamicAttach()
kotlin.text.StringsKt___StringsKt: java.lang.Character minWithOrNull(java.lang.CharSequence,java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(int[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection filterNotNullTo(java.lang.Iterable,java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(char[],kotlin.jvm.functions.Function1)
kotlin.collections.UCollectionsKt___UCollectionsKt: UCollectionsKt___UCollectionsKt()
kotlin.UnsafeLazyImpl: java.lang.String toString()
kotlin.collections.AbstractList$IteratorImpl: java.lang.Object next()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object processResultSelectSend(java.lang.Object,java.lang.Object)
kotlin.collections.builders.ListBuilder$Itr: boolean hasPrevious()
kotlinx.coroutines.internal.LockFreeLinkedListNode: void addLast(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.lang.String enhanceStackTraceWithThreadDumpAsJson(kotlinx.coroutines.debug.internal.DebugCoroutineInfo)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(char[],char[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(byte[])
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)
kotlinx.coroutines.DefaultExecutor: boolean isThreadPresent$kotlinx_coroutines_core()
kotlin.collections.builders.MapBuilder$Companion: MapBuilder$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
kotlin.text.CharsKt__CharJVMKt: java.lang.String uppercase(char,java.util.Locale)
kotlin.time.MeasureTimeKt: long measureTime(kotlin.time.TimeSource,kotlin.jvm.functions.Function0)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] sortedArray-GBYM_sE(byte[])
kotlin.io.path.DirectoryEntriesReader: java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes)
kotlinx.coroutines.time.TimeKt: kotlinx.coroutines.flow.Flow sample(kotlinx.coroutines.flow.Flow,java.time.Duration)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence take(java.lang.CharSequence,int)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$minus$2: java.util.Iterator iterator()
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void getOnReceiveOrNull$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte randomOrNull-GBYM_sE(byte[])
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.ConcurrentWeakMap access$getCallerInfoCache$p()
kotlin.io.ConsoleKt: java.lang.String readlnOrNull()
kotlinx.coroutines.flow.CancellableFlowImpl: CancellableFlowImpl(kotlinx.coroutines.flow.Flow)
kotlin.collections.ArraysKt___ArraysJvmKt: char[] plus(char[],char)
kotlin.text.StringsKt___StringsKt: int sumOfUInt(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathReadWriteKt: java.lang.String readText$default(java.nio.file.Path,java.nio.charset.Charset,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2: SequencesKt___SequencesKt$flatMapIndexed$2()
kotlin.collections.ArraysKt___ArraysKt: int component1(int[])
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(short[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.reflect.WildcardTypeImpl: java.lang.String toString()
kotlin.jvm.internal.TypeIntrinsics: java.util.ListIterator asMutableListIterator(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean none(char[])
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget[] $values()
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
kotlinx.coroutines.CancellableContinuationImpl: void parentCancelled$kotlinx_coroutines_core(java.lang.Throwable)
kotlin.jvm.internal.TypeReference: int getFlags$kotlin_stdlib()
kotlin.io.TextStreamsKt: long copyTo(java.io.Reader,java.io.Writer,int)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
kotlin.collections.IndexingIterator: void remove()
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,double)
kotlinx.coroutines.internal.ThreadSafeHeap: void swap(int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWithOrNull-5NtCtWE(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: StringsKt__StringsKt$rangesDelimitedBy$2(java.util.List,boolean)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(long[],kotlin.jvm.functions.Function1)
kotlin.time.Duration: long constructor-impl(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte maxOrThrow-U(byte[])
kotlin.random.Random$Default: int nextInt(int)
kotlin.UByte: long minus-VKZWuLQ(byte,long)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAtOrElse(java.util.List,int,kotlin.jvm.functions.Function1)
kotlin.contracts.ContractBuilder: kotlin.contracts.Returns returns(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: float minOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.DispatcherExecutor: DispatcherExecutor(kotlinx.coroutines.CoroutineDispatcher)
kotlin.collections.AbstractCollection: boolean isEmpty()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendOnNoWaiterSuspend(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.DisposableFutureHandle: DisposableFutureHandle(java.util.concurrent.Future)
kotlinx.coroutines.Job: void cancel(java.util.concurrent.CancellationException)
kotlin.io.FilesKt__FileReadWriteKt: java.io.BufferedReader bufferedReader$default(java.io.File,java.nio.charset.Charset,int,int,java.lang.Object)
kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong getCOROUTINE_ID()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceOrNull(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.time.Duration: long minus-LRDsOJo(long,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduceIndexed-z1zDJgo(long[],kotlin.jvm.functions.Function3)
kotlin.io.TextStreamsKt: java.lang.String readText(java.io.Reader)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(boolean[])
kotlin.io.path.PathsKt__PathReadWriteKt: void forEachLine$default(java.nio.file.Path,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(long[],kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator thenBy(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.TypeAliasesKt: void RandomAccess$annotations()
kotlin.time.DurationKt: long getMinutes(int)
kotlin.time.MonotonicTimeSource: long adjustReading-6QKq23U(long,long)
kotlin.coroutines.jvm.internal.RunSuspend: RunSuspend()
kotlin.ULongArray: boolean containsAll-impl(long[],java.util.Collection)
kotlin.math.MathKt__MathJVMKt: void getSign$annotations(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int lastIndexOf-gMuBH34(byte[],byte)
kotlin.UShort: int times-xj2QHRw(short,short)
kotlinx.coroutines.ThreadContextElementKt: kotlinx.coroutines.ThreadContextElement asContextElement(java.lang.ThreadLocal,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)
kotlinx.coroutines.JobSupport$Finishing: void setExceptionsHolder(java.lang.Object)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4: java.nio.file.FileVisitResult invoke(java.nio.file.Path,java.io.IOException)
kotlin.internal.RequireKotlinVersionKind: RequireKotlinVersionKind(java.lang.String,int)
kotlin.reflect.TypeVariableImpl: java.lang.annotation.Annotation[] getDeclaredAnnotations()
kotlin.collections.ArraysKt___ArraysKt: void reverse(int[])
kotlin.collections.ArraysKt___ArraysKt: boolean component4(boolean[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object single(java.lang.Object[])
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder: java.util.Collection values()
kotlin.collections.ArraysKt___ArraysKt: int sumBy(long[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection filterIsInstanceTo(java.lang.Iterable,java.util.Collection)
kotlin.text.Typography: void getRightGuillemet$annotations()
kotlinx.coroutines.AbstractCoroutine: boolean isActive()
kotlin.io.FilePathComponents: java.io.File subPath(int,int)
kotlin.collections.ArraysKt___ArraysKt: char[] sliceArray(char[],java.util.Collection)
kotlinx.coroutines.EventLoop: void decrementUseCount(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getUniqueId(android.view.accessibility.AccessibilityNodeInfo)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: void ensureActive(kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.channels.ChannelCoroutine: boolean isClosedForSend()
kotlin.reflect.ParameterizedTypeImpl: java.lang.reflect.Type getRawType()
kotlin.UByte: long times-VKZWuLQ(byte,long)
kotlin.io.FilesKt__FileReadWriteKt: java.lang.Object useLines(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
kotlinx.coroutines.internal.ResizableAtomicArray: java.lang.Object get(int)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: ConcurrentWeakMap(boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.MutablePropertyReference0: MutablePropertyReference0(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: FlowKt__LimitKt$collectWhile$1(kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: long random(kotlin.ranges.LongRange)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int lastIndexOf(java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object awaitValue(kotlinx.coroutines.flow.SharedFlowSlot,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt: void cancelChildren(kotlinx.coroutines.Job,java.util.concurrent.CancellationException)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sum-QwZRm1k(long[])
kotlin.ULong: long div-VKZWuLQ(long,long)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: FlowKt__DelayKt$timeoutInternal$1(long,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowImpl: long getBufferEndIndex()
kotlinx.coroutines.Job: java.util.concurrent.CancellationException getCancellationException()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object fold-A8wKCXQ(long[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapNotNullTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.ranges.CharRange: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],java.lang.Iterable)
kotlin.jvm.internal.SourceDebugExtension: java.lang.String[] value()
kotlin.UByte: int times-xj2QHRw(byte,short)
kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 access$createConstructor(java.lang.Class)
kotlin.ranges.CharRange$Companion: CharRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.io.path.CopyActionResult: CopyActionResult(java.lang.String,int)
kotlin.text.StringsKt___StringsKt: java.util.List windowed$default(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.DeepRecursiveScopeImpl: kotlin.coroutines.CoroutineContext getContext()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentDeepToStringInline(java.lang.Object[])
kotlin.io.path.FileVisitorBuilderImpl: void checkIsNotBuilt()
kotlin.ranges.LongRange: java.lang.Comparable getStart()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ranges.IntRange getIndices-GBYM_sE(byte[])
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
kotlin.collections.ArraysKt___ArraysKt: double minOf(int[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlin.time.TimedValue: long getDuration-UwyO8pc()
kotlinx.coroutines.internal.OnUndeliveredElementKt: void callUndeliveredElement(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer minWith(int[],java.util.Comparator)
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind valueOf(java.lang.String)
kotlin.sequences.TakeSequence: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt$withIndex$9: java.util.Iterator invoke()
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker()
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: boolean onClosedHasNext()
kotlin.collections.EmptyIterator: java.lang.Object next()
kotlin.text.StringsKt__StringsKt: java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object)
kotlinx.coroutines.channels.ProducerCoroutine: ProducerCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel)
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence)
kotlinx.coroutines.CompletedWithCancellation: kotlinx.coroutines.CompletedWithCancellation copy$default(kotlinx.coroutines.CompletedWithCancellation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt__RangesKt: boolean contains(kotlin.ranges.OpenEndRange,java.lang.Object)
kotlinx.coroutines.internal.DispatchedContinuation: void resumeUndispatchedWith$kotlinx_coroutines_core(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(int[],kotlin.jvm.functions.Function1)
kotlin.sequences.FilteringSequence$iterator$1: void setNextItem(java.lang.Object)
kotlin.jvm.internal.TypeReference: java.lang.String access$asString(kotlin.jvm.internal.TypeReference,kotlin.reflect.KTypeProjection)
kotlin.text.Regex$splitToSequence$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.AgentInstallationType: void setInstalledStatically$kotlinx_coroutines_core(boolean)
kotlin.io.ConsoleKt: void println(java.lang.Object)
kotlin.text.MatchResult$Destructured: java.lang.String component4()
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(boolean[])
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: boolean contains(byte)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator compareByDescending(java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: void getOnSend$annotations()
kotlin.UByteArray: java.lang.Object[] toArray()
kotlin.collections.ArraysKt___ArraysKt: float minWithOrThrow(float[],java.util.Comparator)
kotlinx.coroutines.future.FutureKt: kotlin.Unit setupCancellation$lambda$2(kotlinx.coroutines.Job,java.lang.Object,java.lang.Throwable)
kotlin.time.TimeSource$WithComparableMarks: kotlin.time.ComparableTimeMark markNow()
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: java.lang.Object invoke(java.lang.Object)
kotlin.ranges.ClosedDoubleRange: boolean contains(java.lang.Comparable)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceRange(java.lang.String,int,int,java.lang.CharSequence)
kotlin.text.Regex: boolean matches(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: java.lang.Object emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.Continuation)
kotlin.math.MathKt__MathJVMKt: double pow(double,int)
kotlinx.coroutines.intrinsics.UndispatchedKt: java.lang.Object startUndispatchedOrReturnIgnoreTimeout(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: SafeCollector$collectContextSize$1()
kotlin.collections.LongIterator: LongIterator()
kotlin.ULongArray: long[] unbox-impl()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: void invokeOnClose(kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathHKt: void getE$annotations()
kotlin.collections.CollectionsKt___CollectionsKt: int count(java.util.Collection)
kotlin.ranges.OpenEndDoubleRange: boolean contains(java.lang.Comparable)
kotlin.jvm.internal.ClassReference: void isValue$annotations()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
kotlinx.coroutines.selects.OnTimeoutKt: void onTimeout(kotlinx.coroutines.selects.SelectBuilder,long,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plusElement(java.util.Collection,java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
kotlinx.coroutines.channels.BufferedChannel: void cancel(java.util.concurrent.CancellationException)
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Double,double)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: StartedWhileSubscribed$command$2(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1: FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List createListBuilder(int)
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List mutableListOf()
kotlin.collections.ArrayDeque: java.lang.Object firstOrNull()
kotlinx.coroutines.CopyableThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.CopyableThreadContextElement,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.JobSupport: java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: char first(kotlin.ranges.CharProgression)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path relativeToOrSelf(java.nio.file.Path,java.nio.file.Path)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.String toString()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAtOrNull(java.util.List,int)
kotlin.NumbersKt__FloorDivModKt: int mod(long,int)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task pollWithExclusiveMode(boolean)
kotlin.collections.ArraysKt___ArraysKt: char reduce(char[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFold-zi1B2BA(int[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.io.encoding.Base64: java.lang.String bytesToStringImpl$kotlin_stdlib(byte[])
kotlin.UByte: int floorDiv-WZ4Q5Ns(byte,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(double[],kotlin.jvm.functions.Function1)
kotlin.ranges.IntProgression: int hashCode()
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Throwable tryReleaseClaimedContinuation$kotlinx_coroutines_core(kotlinx.coroutines.CancellableContinuation)
kotlin.TypeCastException: TypeCastException()
kotlinx.coroutines.NonCancellable: boolean start()
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.BufferedReader bufferedReader$default(java.nio.file.Path,java.nio.charset.Charset,int,java.nio.file.OpenOption[],int,java.lang.Object)
kotlin.collections.LongIterator: java.lang.Long next()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(short[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean all-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal inc(java.math.BigDecimal)
kotlin.sequences.SequenceScope: java.lang.Object yieldAll(kotlin.sequences.Sequence,kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: java.lang.Character maxByOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(int[],kotlin.jvm.functions.Function2)
kotlin.NumbersKt__NumbersJVMKt: int rotateLeft(int,int)
kotlinx.coroutines.flow.SharingCommand: SharingCommand(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(int[],kotlin.jvm.functions.Function1)
kotlin.sequences.FilteringSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FilteringSequence)
kotlinx.coroutines.JobSupport: boolean getHandlesException$kotlinx_coroutines_core()
kotlinx.coroutines.internal.DispatchedContinuation: void release$kotlinx_coroutines_core()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOrNull(double[])
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(int,byte)
kotlin.ExceptionsKt__ExceptionsKt: ExceptionsKt__ExceptionsKt()
kotlinx.coroutines.channels.BufferedChannel: void getOnReceive$annotations()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(boolean[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filter-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.ChannelFlowBuilder: java.lang.String toString()
kotlinx.coroutines.DispatchedTaskKt: void runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0)
kotlinx.coroutines.CoroutineId: java.lang.String toString()
kotlinx.coroutines.CancellableContinuationImpl: boolean isCompleted()
kotlinx.coroutines.internal.InlineList: java.lang.String toString-impl(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] reversedArray(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minWithOrThrow(java.lang.Object[],java.util.Comparator)
kotlin.ranges.ULongProgression: long getStep()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.AbstractCoroutine: void onCancelled(java.lang.Throwable,boolean)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,char[],int,boolean,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(short[],short)
kotlin.jvm.internal.IntSpreadBuilder: int[] toArray()
kotlinx.coroutines.internal.Symbol: java.lang.String toString()
kotlin.io.path.PathWalkOption: kotlin.io.path.PathWalkOption valueOf(java.lang.String)
kotlin.io.encoding.EncodeOutputStream: void write(int)
kotlin.UByte: int floorDiv-7apg3OU(byte,byte)
kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)
kotlin.io.FilesKt__UtilsKt: boolean endsWith(java.io.File,java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object elementAtOrNull(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)
kotlin.time.Duration$Companion: long nanoseconds-UwyO8pc(double)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.jvm.internal.MutablePropertyReference0: java.lang.Object getDelegate()
kotlinx.coroutines.DisposeOnCancel: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannelKt: boolean tryResume0$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.internal.InlineList: kotlinx.coroutines.internal.InlineList box-impl(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort reduceOrNull-xzaTVY8(short[],kotlin.jvm.functions.Function2)
kotlin.ranges.CharRange: java.lang.String toString()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.FileVisitResult access$copyToRecursively$error(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,java.nio.file.Path,java.lang.Exception)
kotlin.text.StringsKt___StringsJvmKt: StringsKt___StringsJvmKt()
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: double coerceIn(double,double,double)
kotlin.io.path.PathTreeWalk: boolean isBFS()
kotlinx.coroutines.EventLoopImplBase: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(double[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: void insecureHandleEntry$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path,kotlin.io.path.ExceptionsCollector)
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1: java.lang.Object keyOf(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1: SequencesKt___SequencesJvmKt$filterIsInstance$1(java.lang.Class)
kotlin.collections.builders.MapBuilder$Itr: void remove()
kotlin.UByte: kotlin.ranges.UIntRange rangeUntil-7apg3OU(byte,byte)
kotlin.time.LongSaturatedMathKt: long saturatingOriginsDiff(long,long)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow runningReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.text.StringsKt___StringsKt: char last(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(double[])
kotlinx.coroutines.scheduling.GlobalQueue: GlobalQueue()
kotlin.collections.CollectionsKt__MutableCollectionsKt: void plusAssign(java.util.Collection,java.lang.Object)
kotlin.UByte: int compareTo-WZ4Q5Ns(byte,int)
kotlin.reflect.KType$DefaultImpls: void getArguments$annotations()
kotlinx.coroutines.selects.SelectImplementation: SelectImplementation(kotlin.coroutines.CoroutineContext)
kotlin.UShortArray$Iterator: boolean hasNext()
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(int[],int[])
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long minus-LRDsOJo(long)
kotlinx.coroutines.SchedulerTaskKt: void afterTask(kotlinx.coroutines.scheduling.TaskContext)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectKt: boolean access$tryResume(kotlinx.coroutines.CancellableContinuation,kotlin.jvm.functions.Function1)
kotlin.collections.SetsKt__SetsKt: java.util.Set mutableSetOf(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: double maxByOrThrow(double[],kotlin.jvm.functions.Function1)
kotlin.text.UStringsKt: kotlin.UInt toUIntOrNull(java.lang.String)
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableIterable(java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decodeToString(byte[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMapMerge$default(kotlinx.coroutines.flow.Flow,int,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long reduceRightOrNull(long[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ResizableAtomicArray: int currentLength()
kotlin.text.CharCategory: kotlin.text.CharCategory valueOf(java.lang.String)
kotlin.collections.MapsKt__MapsKt: void minusAssign(java.util.Map,java.lang.Iterable)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.jvm.internal.ClassReference: void getSupertypes$annotations()
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1: java.util.Iterator iterator()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object singleOrNull(java.util.List)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.Object access$yieldFrames(kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl,kotlin.sequences.SequenceScope,kotlin.coroutines.jvm.internal.CoroutineStackFrame,kotlin.coroutines.Continuation)
kotlin.UInt: int or-WZ4Q5Ns(int,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.StateFlow asStateFlow(kotlinx.coroutines.flow.MutableStateFlow)
kotlin.concurrent.TimersKt: java.util.Timer timer$default(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.UByte: int compareTo-VKZWuLQ(byte,long)
kotlin.collections.CharIterator: java.lang.Character next()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4(int[])
kotlin.text.StringsKt__StringsJVMKt: int nativeIndexOf(java.lang.String,java.lang.String,int)
kotlin.text.RegexKt$fromInt$1$1: java.lang.Boolean invoke(java.lang.Enum)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
kotlin.collections.CollectionsKt___CollectionsKt: double sumByDouble(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CompletableDeferredImpl: boolean getOnCancelComplete$kotlinx_coroutines_core()
kotlinx.coroutines.flow.SharedFlowImpl: SharedFlowImpl(int,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object random(java.lang.Object[],kotlin.random.Random)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannelKt: int access$getEXPAND_BUFFER_COMPLETION_WAIT_ITERATIONS$p()
kotlinx.coroutines.flow.FlowKt__LimitKt: java.lang.Object access$emitAbort$FlowKt__LimitKt(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBeforeLast(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger toBigInteger(int)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List emptyList()
kotlin.ranges.RangesKt___RangesKt: short coerceIn(short,short,short)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: int getSize()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Object recoverAndThrow$$forInline(java.lang.Throwable,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.SendChannel: boolean isClosedForSend()
kotlin.ULong: long toLong-impl(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(java.lang.Object[],java.lang.Iterable)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Long toLongOrNull(java.lang.String)
kotlin.collections.MapsKt___MapsKt: java.lang.Object maxOfWithOrNull(java.util.Map,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: boolean contains(java.lang.Object)
kotlinx.coroutines.JobNode: kotlinx.coroutines.NodeList getList()
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.Job Job(kotlinx.coroutines.Job)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: FlowCoroutineKt$scopedFlow$1$1(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo,boolean)
kotlinx.coroutines.internal.InlineList: java.lang.Object plus-FjFbRPM(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.ClassReference: java.util.List getAnnotations()
kotlin.reflect.KClass$DefaultImpls: void isFinal$annotations()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte randomOrNull(byte[])
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: StringsKt__IndentKt$getIndentFunction$2(java.lang.String)
kotlin.jvm.internal.SerializedIr: java.lang.String[] b()
androidx.work.impl.utils.NetworkApi24: void registerDefaultNetworkCallbackCompat(android.net.ConnectivityManager,android.net.ConnectivityManager$NetworkCallback)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt findLast-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__CollectionsJVMKt: int checkCountOverflow(int)
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.String toString-impl(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,long)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: float maxOf(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveCatching()
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: BroadcastChannelImpl$registerSelectForSend$2(kotlinx.coroutines.channels.BroadcastChannelImpl,java.lang.Object,kotlinx.coroutines.selects.SelectInstance,kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoopImplBase: boolean isEmpty()
kotlinx.coroutines.channels.BroadcastChannelImpl: java.util.concurrent.locks.ReentrantLock access$getLock$p(kotlinx.coroutines.channels.BroadcastChannelImpl)
kotlin.ranges.ULongRange$Companion: kotlin.ranges.ULongRange getEMPTY()
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow mapLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.Ref$ShortRef: java.lang.String toString()
kotlin.jvm.internal.FunInterfaceConstructorReference: int hashCode()
kotlin.text.StringsKt__StringsKt: java.util.List split(java.lang.CharSequence,kotlin.text.Regex,int)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findLastAnyOf$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: int codePointBefore(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(short[])
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.util.concurrent.atomic.AtomicIntegerFieldUpdater getWorkerCtl$FU()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLast-qFRl0hI(int[],int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function7)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyInto$default(int[],int[],int,int,int,int,java.lang.Object)
kotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(java.lang.Object,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(boolean[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(double[])
kotlin.text.StringsKt__StringNumberConversionsJVMKt: boolean toBooleanNullable(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: byte elementAt-PpDY95g(byte[],int)
kotlin.text.MatcherMatchResult: MatcherMatchResult(java.util.regex.Matcher,java.lang.CharSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRightIndexed-3iWJZGE(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.builders.MapBuilder$Companion: int computeShift(int)
kotlinx.coroutines.channels.BroadcastChannelImpl: java.lang.Object getValueOrNull()
kotlinx.coroutines.flow.DistinctFlowImpl: DistinctFlowImpl(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(boolean[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.flow.internal.SafeCollector: void releaseIntercepted()
kotlin.text.StringsKt___StringsKt: char minWithOrThrow(java.lang.CharSequence,java.util.Comparator)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
com.automation.flipkart.service.UltraFastForegroundService: UltraFastForegroundService()
kotlin.ULong: long times-VKZWuLQ(long,long)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory: MissingMainCoroutineDispatcherFactory()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: int maxOf(int,int,int)
kotlin.UNumbersKt: short rotateLeft-olVBNx4(short,int)
kotlinx.coroutines.future.FutureKt$asCompletableFuture$2: java.lang.Object invoke(java.lang.Object)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path writeLines(java.nio.file.Path,kotlin.sequences.Sequence,java.nio.charset.Charset,java.nio.file.OpenOption[])
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.String getState$kotlinx_coroutines_core()
kotlin.UShort: int plus-WZ4Q5Ns(short,int)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass createKotlinClass(java.lang.Class,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(int[],int,int,int,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] asShortArray-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(byte[])
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(long[])
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
kotlinx.coroutines.flow.SharedFlowImpl: int getReplaySize()
kotlinx.coroutines.flow.ChannelFlowBuilder: ChannelFlowBuilder(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMapLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBeforeLast(java.lang.String,char,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-JQknh5Q(byte[],java.lang.Iterable)
kotlin.jvm.internal.ClassReference$Companion: boolean isInstance(java.lang.Object,java.lang.Class)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
kotlin.time.Duration: long addValuesMixedRanges-UwyO8pc(long,long,long)
kotlin.ranges.OpenEndDoubleRange: boolean lessThanOrEquals(double,double)
kotlin.collections.builders.AbstractMapBuilderEntrySet: boolean contains(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: long random(long[],kotlin.random.Random)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxByOrNull(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.LazyKt__LazyKt: java.lang.Object getValue(kotlin.Lazy,java.lang.Object,kotlin.reflect.KProperty)
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getContext()
kotlinx.coroutines.flow.SubscribedFlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
kotlin.io.path.PathsKt__PathUtilsKt: boolean isExecutable(java.nio.file.Path)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.StackTraceElement getStackTraceElement()
kotlin.collections.ArraysKt___ArraysKt: int sumBy(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.stream.StreamFlow$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: boolean deleteIfExists(java.nio.file.Path)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minOfWith(kotlin.sequences.Sequence,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.jvm.functions.Function7: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean reduceIndexedOrNull(boolean[],kotlin.jvm.functions.Function3)
kotlin.collections.builders.ListBuilder: java.util.ListIterator listIterator()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempDirectory$default(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute[],int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: double component5(double[])
kotlin.jvm.internal.StringCompanionObject: StringCompanionObject()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.CharRange until(char,char)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findCpuTask()
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: UndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceRight(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sortedByDescending(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
androidx.core.os.TraceCompat$Api18Impl: void endSection()
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1: ExceptionsConstructorKt$safeCtor$1(kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathUtilsKt: void forEachDirectoryEntry(java.nio.file.Path,java.lang.String,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-4UcCI2c(byte[],int,int)
kotlin.sequences.SequencesKt___SequencesKt: float maxOrThrow(kotlin.sequences.Sequence)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelResult: java.lang.Object getOrThrow-impl(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(boolean[])
kotlin.time.DurationKt: void getDays$annotations(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse-4UcCI2c(byte[],int,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow scanReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(int[],kotlin.jvm.functions.Function1)
kotlin.io.OnErrorAction: OnErrorAction(java.lang.String,int)
kotlin.coroutines.CombinedContext$writeReplace$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntRange until-Kr8caGY(byte,byte)
kotlin.collections.CollectionsKt__CollectionsKt: void throwIndexOverflow()
kotlin.KotlinVersion: KotlinVersion(int,int,int)
kotlinx.coroutines.flow.SubscribedFlowCollector: SubscribedFlowCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.text.StringsKt___StringsKt$windowedSequence$1: java.lang.String invoke(java.lang.CharSequence)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: void insecureEnterDirectory$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path,kotlin.io.path.ExceptionsCollector)
kotlinx.coroutines.NonCancellable: void getOnJoin$annotations()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection mapTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.UNumbersKt: int countLeadingZeroBits-7apg3OU(byte)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelSegment: void onCancelledRequest(int,boolean)
kotlin.collections.MapsKt__MapsKt: java.util.HashMap hashMapOf()
kotlin.collections.builders.MapBuilder: boolean containsAllEntries$kotlin_stdlib(java.util.Collection)
kotlin.jvm.internal.LongCompanionObject: LongCompanionObject()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWithOrNull-l8EHGbQ(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.Collection asCollection(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int lastIndexOf(java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: SharedFlowImpl$collect$1(kotlinx.coroutines.flow.SharedFlowImpl,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double randomOrNull(double[],kotlin.random.Random)
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot()
kotlin.collections.unsigned.UArraysKt___UArraysKt: float minOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt___StringsKt: int sumOfInt(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong minByOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean any(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.AbstractMap$keys$1$iterator$1: boolean hasNext()
kotlinx.coroutines.Active: Active()
kotlinx.coroutines.sync.MutexKt$withLock$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.SupervisorCoroutine: SupervisorCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlin.time.ComparableTimeMark$DefaultImpls: boolean hasNotPassedNow(kotlin.time.ComparableTimeMark)
kotlinx.coroutines.CoroutineName: boolean equals(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-oBK06Vg(int[],int,int)
kotlin.ranges.RangesKt___RangesKt: int coerceAtMost(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(int[])
kotlin.collections.MapsKt__MapsKt: java.util.LinkedHashMap linkedMapOf()
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(java.lang.Object)
kotlin.UShort: byte toUByte-w2LRezQ(short)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List filterIsInstance(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short reduceOrNull(short[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: EventLoopImplBase$DelayedResumeTask(kotlinx.coroutines.EventLoopImplBase,long,kotlinx.coroutines.CancellableContinuation)
kotlin.random.PlatformRandom$Companion: PlatformRandom$Companion()
kotlin.io.encoding.StreamEncodingKt__Base64IOStreamKt: java.io.InputStream decodingWith(java.io.InputStream,kotlin.io.encoding.Base64)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(float[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.IntRange,short)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] plus(float[],float[])
kotlin.collections.AbstractMap: void clear()
kotlin.jvm.internal.ArrayFloatIterator: boolean hasNext()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable minOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findAnyOf$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
kotlin.collections.MapsKt__MapsKt: boolean isNotEmpty(java.util.Map)
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.InvokeOnCancelling: void invoke(java.lang.Throwable)
kotlin.jvm.internal.ArrayLongIterator: long nextLong()
kotlinx.coroutines.JobKt: void cancel(kotlin.coroutines.CoroutineContext)
kotlin.collections.CollectionsKt___CollectionsKt: void sortByDescending(java.util.List,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: char minByOrThrow(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.Job launchIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-F7u83W8(long[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.UShortKt: short toUShort(int)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence onEachIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlin.text.UStringsKt: kotlin.UInt toUIntOrNull(java.lang.String,int)
kotlin.collections.AbstractIterator: boolean hasNext()
kotlinx.coroutines.sync.MutexImpl$onLock$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.UIntArray: int[] constructor-impl(int[])
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.concurrent.TimersKt: java.util.Timer timer(java.lang.String,boolean)
kotlin.collections.EmptyList: boolean retainAll(java.util.Collection)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: CombineKt$combineInternal$2(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.text.Regex: kotlin.sequences.Sequence findAll(java.lang.CharSequence,int)
kotlinx.coroutines.flow.FlowKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.UIntArray: UIntArray(int[])
kotlinx.coroutines.selects.SelectBuilder: void onTimeout(long,kotlin.jvm.functions.Function1)
kotlinx.coroutines.NonDisposableHandle: java.lang.String toString()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minWithOrThrow(java.lang.Iterable,java.util.Comparator)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-JGPC0-M(short[],java.lang.Iterable)
kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int lastIndexOf(boolean)
kotlinx.coroutines.JobSupport: void parentCancelled(kotlinx.coroutines.ParentJob)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object foldRight(java.util.List,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.StartedLazily$command$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport$SelectOnJoinCompletionHandler: JobSupport$SelectOnJoinCompletionHandler(kotlinx.coroutines.JobSupport,kotlinx.coroutines.selects.SelectInstance)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: byte get-w2LRezQ(int)
kotlin.UShortArray: short get-Mh2AYeg(short[],int)
kotlin.ranges.RangesKt__RangesKt: boolean contains(kotlin.ranges.ClosedRange,java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt: void rangeCheck$CollectionsKt__CollectionsKt(int,int,int)
kotlin.collections.builders.MapBuilder: boolean isReadOnly$kotlin_stdlib()
kotlin.collections.ArraysKt__ArraysKt: boolean contentDeepEquals(java.lang.Object[],java.lang.Object[])
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.String toString(long,int)
kotlin.collections.ArraysKt___ArraysKt: double average(double[])
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow timeoutInternal-HG0u8IE$FlowKt__DelayKt(kotlinx.coroutines.flow.Flow,long)
kotlin.io.path.PathsKt: PathsKt()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
kotlin.io.FilesKt__FileReadWriteKt$readLines$1: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference2: java.lang.Object getDelegate(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: ChannelFlowMerge$collectTo$2$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.internal.SendingCollector,kotlinx.coroutines.sync.Semaphore,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlinx.coroutines.Job)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.AbstractIterator: void remove()
kotlin.io.FilePathComponents: java.io.File getRoot()
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: boolean hasPassedNow()
kotlinx.coroutines.internal.SystemPropsKt: java.lang.String systemProp(java.lang.String)
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause1,kotlin.jvm.functions.Function2)
kotlin.jvm.functions.FunctionN: int getArity()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(int[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] reversedArray-QwZRm1k(long[])
kotlin.OptIn: java.lang.Class[] markerClass()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.jvm.functions.Function17: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.text.CharsKt__CharJVMKt: java.lang.String lowercase(char)
kotlin.jvm.internal.TypeIntrinsics: java.util.Set asMutableSet(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: FlowKt__ReduceKt$first$1(kotlin.coroutines.Continuation)
kotlin.coroutines.CombinedContext$Serialized$Companion: CombinedContext$Serialized$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.RegexKt: kotlin.ranges.IntRange access$range(java.util.regex.MatchResult,int)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.math.BigDecimal sumOfBigDecimal(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-oBK06Vg(int[],int,int)
kotlinx.coroutines.UndispatchedCoroutine: boolean clearThreadContext()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.UnbiasedSelectImplementation: void invoke(kotlinx.coroutines.selects.SelectClause2,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.work.impl.utils.Api28Impl: java.lang.String getProcessName()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: void forEach(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectImplementation: void invoke(java.lang.Throwable)
kotlinx.coroutines.internal.ThreadSafeHeap: void clear()
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String getDispatcher()
kotlin.time.Duration$Companion: long getMilliseconds-UwyO8pc(double)
kotlin.collections.ArraysKt___ArraysKt: int sum(short[])
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.time.TimeMark$DefaultImpls: boolean hasPassedNow(kotlin.time.TimeMark)
kotlinx.coroutines.channels.ChannelSegment: void cleanElement$kotlinx_coroutines_core(int)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse-QwZRm1k(long[])
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: FlowKt__ReduceKt$fold$2(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterNot-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object singleOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.util.concurrent.atomic.AtomicReferenceArray access$getValues$p(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1: StringsKt__StringsKt$rangesDelimitedBy$1(char[],boolean)
kotlinx.coroutines.CancellableContinuation: boolean isActive()
kotlinx.coroutines.CompletableJob$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.CompletableJob,kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set toMutableSet(java.lang.Iterable)
kotlin.jvm.internal.MutablePropertyReference: MutablePropertyReference(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(byte[])
kotlinx.coroutines.CancelFutureOnCancel: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] sortedArrayDescending--ajY-9A(int[])
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: CoroutineScheduler$WorkerState(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(byte[])
kotlin.collections.ArrayDeque: boolean addAll(java.util.Collection)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
kotlin.time.AbstractLongTimeSource$LongTimeMark: long minus-UwyO8pc(kotlin.time.ComparableTimeMark)
kotlin.collections.ArraysKt___ArraysKt: void sortByDescending(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Failed access$getFailed$cp()
androidx.work.impl.background.systemjob.SystemJobService$Api28Impl: android.net.Network getNetwork(android.app.job.JobParameters)
kotlin.reflect.KClass: java.lang.String getQualifiedName()
kotlin.io.FilePathComponents: kotlin.io.FilePathComponents copy(java.io.File,java.util.List)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.CoroutineName: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.future.FutureKt$await$2$1: java.lang.Object invoke(java.lang.Object)
kotlin.sequences.FlatteningSequence$iterator$1: boolean hasNext()
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
kotlin.collections.ArrayDeque: void copyCollectionElements(int,java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.channels.ChannelSegment access$createSegment(long,kotlinx.coroutines.channels.ChannelSegment)
kotlinx.coroutines.JobSupport: void initParentJob(kotlinx.coroutines.Job)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberConflated: BroadcastChannelImpl$SubscriberConflated(kotlinx.coroutines.channels.BroadcastChannelImpl)
kotlin.UInt: int hashCode-impl(int)
kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper: DebugProbesImpl$Installations$kotlinx$VolatileWrapper()
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object processResultAndInvokeBlockRecoveringException(kotlinx.coroutines.selects.SelectImplementation$ClauseData,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)
kotlinx.coroutines.android.HandlerDispatcherKt: void getMain$annotations()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
kotlinx.coroutines.EventLoopImplPlatform: void unpark()
kotlin.collections.ArraysKt___ArraysKt: boolean none(short[],kotlin.jvm.functions.Function1)
kotlin.time.Duration$Companion: void getMinutes-UwyO8pc$annotations(double)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: java.lang.Object startCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLastWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.TypeIntrinsics: java.util.List asMutableList(java.lang.Object,java.lang.String)
kotlinx.coroutines.internal.StackTraceRecoveryKt: boolean elementWiseEquals(java.lang.StackTraceElement,java.lang.StackTraceElement)
kotlin.StandardKt__StandardKt: void repeat(int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlinx.coroutines.Job,java.lang.Throwable)
kotlinx.coroutines.CancelHandler: CancelHandler()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.MutablePropertyReference0Impl: MutablePropertyReference0Impl(java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(double[],int,int,int,java.lang.Object)
kotlin.reflect.KType: boolean isMarkedNullable()
kotlinx.coroutines.ResumeOnCompletion: ResumeOnCompletion(kotlin.coroutines.Continuation)
kotlinx.coroutines.Empty: boolean isActive()
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow conflate(kotlinx.coroutines.flow.StateFlow)
kotlinx.coroutines.internal.DiagnosticCoroutineContextException: DiagnosticCoroutineContextException(kotlin.coroutines.CoroutineContext)
kotlin.ranges.ComparableOpenEndRange: boolean isEmpty()
kotlinx.coroutines.DelayKt$awaitCancellation$1: DelayKt$awaitCancellation$1(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(boolean[])
kotlin.text.StringsKt___StringsKt: java.lang.Character reduceOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function2)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.EmptySet: java.lang.Object readResolve()
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.util.SortedSet toSortedSet(java.lang.Iterable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte firstOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.String commonPrefixWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: boolean isEmpty()
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence takeLast(java.lang.CharSequence,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte minByOrThrow-U(byte[],kotlin.jvm.functions.Function1)
kotlin.random.Random$Default: int nextInt(int,int)
kotlin.ranges.ULongRange: kotlin.ranges.ULongRange access$getEMPTY$cp()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object last(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.Result: boolean equals-impl(java.lang.Object,java.lang.Object)
kotlin.io.FilesKt__UtilsKt$copyRecursively$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.MapWithDefaultImpl: java.lang.Object remove(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImplKt: java.lang.String access$repr(java.lang.String)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(short,long)
kotlinx.coroutines.channels.BufferedChannel$onReceive$1: BufferedChannel$onReceive$1()
kotlinx.coroutines.debug.AgentPremain$DebugProbesTransformer: AgentPremain$DebugProbesTransformer()
kotlin.text.StringsKt__StringsKt: boolean endsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void tryTerminateWorker()
kotlin.ranges.CharProgression: kotlin.collections.CharIterator iterator()
kotlin.ranges.IntProgression: int getStep()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlin.time.AbstractDoubleTimeSource: double read()
kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceIndexedOrNull(java.lang.Iterable,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: void access$onClosedHasNextNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(short[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: int lastIndexOf(kotlin.sequences.Sequence,java.lang.Object)
kotlin.collections.builders.MapBuilder: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(long[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1: SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1(kotlin.sequences.Sequence)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.Job getParent()
kotlin.NumbersKt__FloorDivModKt: byte mod(byte,byte)
kotlinx.coroutines.CancelFutureOnCancel: java.lang.Object invoke(java.lang.Object)
kotlin.ranges.URangesKt___URangesKt: long coerceAtLeast-eb3DHEI(long,long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object randomOrNull(java.lang.Object[],kotlin.random.Random)
kotlinx.coroutines.internal.ConcurrentKt: java.lang.Object withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduce(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.text.MatcherMatchResult$groups$1: boolean isEmpty()
kotlin.collections.MapsKt___MapsKt: double maxOf(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMap: java.util.Map$Entry implFindEntry(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long randomOrNull(long[])
kotlin.ranges.CharRange: kotlin.ranges.CharRange access$getEMPTY$cp()
kotlin.collections.builders.ListBuilder: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short singleOrNull(short[])
kotlin.collections.UCollectionsKt___UCollectionsKt: long[] toULongArray(java.util.Collection)
kotlin.reflect.KMutableProperty2: void set(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: byte[] sliceArray(byte[],java.util.Collection)
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7(double[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object find(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.Object maxOfWithOrNull(java.lang.CharSequence,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.reflect.KClass: java.util.Collection getNestedClasses()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel distinct(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence flatMapIndexedSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
androidx.work.impl.background.systemalarm.RescheduleReceiver: RescheduleReceiver()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt reduceRightIndexedOrNull-D40WMg8(int[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(java.lang.Comparable[],int,int)
kotlinx.coroutines.JobSupport: boolean getOnCancelComplete$kotlinx_coroutines_core()
kotlin.sequences.TransformingIndexedSequence$iterator$1: void remove()
kotlin.collections.ArraysKt___ArraysKt: double maxOf(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.LongIterator iterator(long[])
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])
kotlinx.coroutines.JobKt: boolean cancel(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlin.Result: java.lang.String toString()
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object getCONDITION_FALSE()
kotlinx.coroutines.internal.SynchronizedKt: void SynchronizedObject$annotations()
kotlinx.coroutines.DebugKt: void assert(kotlin.jvm.functions.Function0)
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandlerSafely(kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1: java.lang.Boolean invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(boolean[])
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel withIndex(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext)
kotlin.jvm.internal.IntCompanionObject: void getSIZE_BITS$annotations()
kotlin.time.MeasureTimeKt: kotlin.time.TimedValue measureTimedValue(kotlin.jvm.functions.Function0)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Iterable onEach(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.SetsKt___SetsKt: java.util.Set plus(java.util.Set,kotlin.sequences.Sequence)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.experimental.BitwiseOperationsKt: short or(short,short)
kotlinx.coroutines.InactiveNodeList: java.lang.String toString()
kotlin.time.DurationKt: void getMicroseconds$annotations(long)
kotlinx.coroutines.channels.ActorScope$DefaultImpls: java.lang.Object poll(kotlinx.coroutines.channels.ActorScope)
kotlin.io.encoding.Base64: byte[] access$getMimeLineSeparatorSymbols$cp()
kotlin.collections.ArraysKt___ArraysKt: byte component3(byte[])
kotlin.coroutines.jvm.internal.DebugMetadataKt: void checkDebugMetadataVersion(int,int)
kotlinx.coroutines.internal.FastServiceLoader: java.lang.Object use(java.util.jar.JarFile,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt__MapsKt: void plusAssign(java.util.Map,kotlin.Pair)
kotlin.reflect.KParameter: int getIndex()
kotlin.collections.AbstractCollection: int getSize()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow mapNotNull(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.io.ConsoleKt: void print(float)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
kotlinx.coroutines.channels.BufferedChannel$onSend$2: java.lang.Object invoke(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlin.NumbersKt__FloorDivModKt: int floorDiv(short,short)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: EventLoopImplBase$DelayedTask(long)
kotlin.ranges.ComparableOpenEndRange: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: java.lang.Object get(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLast-r7IrZao(long[],int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List flatMapIndexedIterable(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow retry$default(kotlinx.coroutines.flow.Flow,long,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: long maxOf(long,long[])
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1: SequencesKt___SequencesKt$minus$3$iterator$1(java.util.Collection)
kotlinx.coroutines.DeferredCoroutine: java.lang.Object await$suspendImpl(kotlinx.coroutines.DeferredCoroutine,kotlin.coroutines.Continuation)
kotlin.collections.ArrayAsCollection: boolean retainAll(java.util.Collection)
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyOfRangeInline(char[],int,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.annotation.AnnotationRetention: AnnotationRetention(java.lang.String,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMap-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$withIndex$6: java.lang.Object invoke()
kotlin.text.StringsKt__StringsKt: java.lang.String trimStart(java.lang.String,char[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte randomOrNull(byte[],kotlin.random.Random)
kotlin.io.path.PathsKt__PathUtilsKt: void deleteExisting(java.nio.file.Path)
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object tryTakeValue(kotlinx.coroutines.flow.SharedFlowSlot)
kotlinx.coroutines.channels.BufferedChannel$onSend$1: BufferedChannel$onSend$1()
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long reduceIndexed-z1zDJgo(long[],kotlin.jvm.functions.Function3)
kotlin.ranges.IntProgression$Companion: IntProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.JobKt: kotlinx.coroutines.Job Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short maxWithOrThrow-U(short[],java.util.Comparator)
kotlin.text.StringsKt___StringsKt: java.util.Collection mapTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.io.encoding.DecodeInputStream: int read()
kotlinx.coroutines.stream.StreamFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.jvm.internal.FunctionImpl: void checkArity(int)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(char[],int,int)
kotlin.time.DurationKt: long getNanoseconds(long)
kotlin.PropertyReferenceDelegatesKt: void setValue(kotlin.reflect.KMutableProperty1,java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
kotlinx.coroutines.selects.SelectKt: kotlin.jvm.functions.Function3 access$getDUMMY_PROCESS_RESULT_FUNCTION$p()
kotlinx.coroutines.CoroutineScopeKt: java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.io.ByteStreamsKt: java.io.BufferedOutputStream buffered$default(java.io.OutputStream,int,int,java.lang.Object)
kotlin.io.path.PathWalkOption: kotlin.io.path.PathWalkOption[] values()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object fold-yXmHNn8(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Throwable access$getReceiveException(kotlinx.coroutines.channels.BufferedChannel)
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 access$getOnLeave$p(kotlin.io.FileTreeWalk)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.enums.EnumEntriesList: boolean contains(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumes$1: java.lang.Object invoke(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
kotlin.text.Regex: java.lang.String getPattern()
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List orEmpty(java.util.List)
kotlinx.coroutines.flow.MutableSharedFlow: boolean tryEmit(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object first(java.lang.Object[])
kotlin.collections.MapsKt___MapsJvmKt: java.util.Map$Entry maxBy(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(byte[],kotlin.ranges.IntRange)
kotlinx.coroutines.DisposeOnCompletion: void invoke(java.lang.Throwable)
kotlinx.coroutines.selects.SelectInstance: kotlin.coroutines.CoroutineContext getContext()
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toSet(kotlinx.coroutines.flow.Flow,java.util.Set,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.SendingCollector: SendingCollector(kotlinx.coroutines.channels.SendChannel)
kotlin.collections.CollectionsKt___CollectionsKt: boolean any(java.lang.Iterable)
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1: SelectBuilderImpl$getResult$1(kotlinx.coroutines.selects.SelectBuilderImpl,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.future.FutureKt$asCompletableFuture$1: FutureKt$asCompletableFuture$1(java.util.concurrent.CompletableFuture,kotlinx.coroutines.Deferred)
kotlin.collections.ArraysKt___ArraysKt: float minOrThrow(float[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sum--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: java.lang.Object get(int)
kotlin.time.Duration$Companion: long getMilliseconds-UwyO8pc(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-K6DWlUc(long[],long,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: boolean trySetNext(kotlinx.coroutines.internal.ConcurrentLinkedListNode)
kotlin.ranges.ClosedDoubleRange: java.lang.Double getEndInclusive()
kotlinx.coroutines.channels.BufferedChannel: boolean hasElements$kotlinx_coroutines_core()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.MutexImpl: boolean isLocked()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(boolean[])
kotlinx.coroutines.AbstractTimeSource: void unpark(java.lang.Thread)
kotlin.jvm.internal.AdaptedFunctionReference: kotlin.reflect.KDeclarationContainer getOwner()
kotlin.internal.RequireKotlin: kotlin.internal.RequireKotlinVersionKind versionKind()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
kotlin.ExceptionsKt__ExceptionsKt: java.lang.String stackTraceToString(java.lang.Throwable)
kotlin.ranges.UIntRange: int hashCode()
kotlinx.coroutines.flow.internal.StackFrameContinuation: java.lang.StackTraceElement getStackTraceElement()
kotlin.random.RandomKt: void checkRangeBounds(int,int)
kotlin.UShortArray: int getSize()
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: char reduceRight(char[],kotlin.jvm.functions.Function2)
kotlin.collections.builders.MapBuilder: java.lang.Object remove(java.lang.Object)
kotlin.io.FilesKt__FileReadWriteKt: void writeText(java.io.File,java.lang.String,java.nio.charset.Charset)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
kotlin.UByteArray: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(char[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1: CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1(java.lang.Iterable)
kotlin.collections.IndexingIterable: IndexingIterable(kotlin.jvm.functions.Function0)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: short minOf(short,short,short)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path div(java.nio.file.Path,java.lang.String)
kotlin.jvm.internal.PrimitiveSpreadBuilder: PrimitiveSpreadBuilder(int)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.Job: boolean isCancelled()
kotlinx.coroutines.selects.UnbiasedSelectImplementation: void invoke(kotlinx.coroutines.selects.SelectClause0,kotlin.jvm.functions.Function1)
kotlin.TypeAliasesKt: void NumberFormatException$annotations()
kotlin.ULongArray: boolean addAll(java.util.Collection)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
kotlin.collections.ArrayDeque: int incremented(int)
kotlin.NotImplementedError: NotImplementedError(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.reflect.KCallable$DefaultImpls: void isFinal$annotations()
kotlin.collections.builders.ListBuilderKt: boolean access$subarrayContentEquals(java.lang.Object[],int,int,java.util.List)
kotlin.ranges.CharRange$Companion: kotlin.ranges.CharRange getEMPTY()
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(double[],kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry minByOrThrow(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: ChannelsKt__DeprecatedKt$distinct$1(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(double[],kotlin.jvm.functions.Function1)
kotlin.time.DurationKt: int skipWhile(java.lang.String,int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.OnDemandAllocatingPool: void loop$atomicfu(java.util.concurrent.atomic.AtomicIntegerFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.collections.AbstractList$Companion: void checkElementIndex$kotlin_stdlib(int,int)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: int hashCode()
kotlin.io.path.PathRelativizer: java.nio.file.Path tryRelativeTo(java.nio.file.Path,java.nio.file.Path)
kotlinx.coroutines.scheduling.TaskImpl: TaskImpl(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext)
kotlin.collections.AbstractMap: java.lang.String toString(java.util.Map$Entry)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
kotlin.sequences.DropSequence$iterator$1: void remove()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Throwable getSendException()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1: void invoke(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(java.lang.Object[])
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: FlowKt__DelayKt$sample$2$1$2(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte minByOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-rL5Bavg(short[])
kotlinx.coroutines.channels.BufferedChannel: void isClosedForReceive$annotations()
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.StringBuffer)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
kotlin.coroutines.jvm.internal.DebugMetadata: int v()
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: boolean hasNotPassedNow()
kotlin.reflect.KClass: boolean isSealed()
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand[] $values()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(float[],kotlin.jvm.functions.Function1)
kotlin.UShort: int compareTo-VKZWuLQ(short,long)
kotlin.random.URandomKt: byte[] nextUBytes-Wvrt4B4(kotlin.random.Random,byte[],int,int)
kotlin.ThrowsKt: void Throws$annotations()
kotlin.jvm.internal.Ref$DoubleRef: Ref$DoubleRef()
kotlinx.coroutines.selects.SelectBuilder$DefaultImpls: void invoke(kotlinx.coroutines.selects.SelectBuilder,kotlinx.coroutines.selects.SelectClause2,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-ZjwqOic(int[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.io.encoding.Base64: int decodeIntoByteArray(byte[],byte[],int,int,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArrayAsCollection: void clear()
kotlinx.coroutines.internal.OnDemandAllocatingPool: int tryForbidNewElements()
kotlin.time.AbstractDoubleTimeSource: kotlin.time.DurationUnit getUnit()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.time.DurationKt: long toDuration(long,kotlin.time.DurationUnit)
kotlin.UShortArrayKt: short[] UShortArray(int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask: void run()
kotlinx.coroutines.flow.CallbackFlowBuilder: CallbackFlowBuilder(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass createKotlinClass(java.lang.Class,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: boolean contains-xj2QHRw(short)
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,int)
kotlin.reflect.TypesJVMKt: java.lang.String access$typeToString(java.lang.reflect.Type)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable minOf(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(java.lang.Object[])
kotlin.math.MathKt__MathJVMKt: double IEEErem(double,double)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int component3--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt: int count(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ThreadSafeHeapNode: int getIndex()
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(short[],int,int)
kotlin.random.URandomKt: long nextULong-jmpaW-c(kotlin.random.Random,long,long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduce(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.selects.SelectClause: kotlin.jvm.functions.Function3 getRegFunc()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(float[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: float minOf(boolean[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float minOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CoroutineName: int hashCode()
kotlin.jvm.internal.Ref$LongRef: java.lang.String toString()
kotlin.UByte: long floorDiv-VKZWuLQ(byte,long)
kotlinx.coroutines.DispatchedTaskKt: void getMODE_CANCELLABLE$annotations()
kotlinx.coroutines.channels.TickerChannelsKt: java.lang.Object access$fixedPeriodTicker(long,long,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.TaskContext: int getTaskMode()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterNot(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.PropertyReference: int hashCode()
kotlinx.coroutines.CancellableContinuationImpl: void callSegmentOnCancellation(kotlinx.coroutines.internal.Segment,java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(char[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.internal.jdk7.JDK7PlatformImplementations: java.util.List getSuppressed(java.lang.Throwable)
kotlin.math.MathKt__MathHKt: MathKt__MathHKt()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelKt: java.lang.Object onSuccess-WpGqRn0(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention[] $values()
kotlin.jvm.functions.Function8: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.sequences.USequencesKt___USequencesKt: long sumOfULong(kotlin.sequences.Sequence)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean isEmpty()
kotlin.reflect.KClass: java.util.List getTypeParameters()
kotlin.text.StringsKt___StringsKt: java.util.Collection mapIndexedNotNullTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.time.TimeSource: kotlin.time.TimeMark markNow()
kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection filterNotTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches$default(java.lang.String,int,java.lang.String,int,int,boolean,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
kotlin.io.ConsoleKt: void println(boolean)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: CombineKt$zipImpl$1$1$2$1$emit$1(kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1,kotlin.coroutines.Continuation)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3: java.lang.Object invoke()
kotlinx.coroutines.channels.BufferedChannel: void incCompletedExpandBufferAttempts(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEachIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2)
kotlin.jvm.internal.ClassReference: boolean isFinal()
kotlin.time.TimedValue: boolean equals(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float maxOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.EmptySet: int size()
kotlinx.coroutines.internal.LockFreeLinkedListKt: kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object)
kotlin.io.path.PathTreeWalk: boolean getFollowLinks()
kotlin.collections.MapsKt__MapsKt: void minusAssign(java.util.Map,kotlin.sequences.Sequence)
kotlinx.coroutines.internal.MainDispatchersKt: void getSUPPORT_MISSING$annotations()
kotlin.io.ConsoleKt: void println(short)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: long elementAt-r7IrZao(long[],int)
kotlin.LazyKt__LazyKt: kotlin.Lazy lazyOf(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence flatMap(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StateFlowImpl$collect$1: StateFlowImpl$collect$1(kotlinx.coroutines.flow.StateFlowImpl,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void resumeUndispatchedWithException(kotlinx.coroutines.CoroutineDispatcher,java.lang.Throwable)
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: void resumeWith(java.lang.Object)
kotlin.text.StringsKt__StringsKt: boolean contentEqualsImpl(java.lang.CharSequence,java.lang.CharSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] sliceArray-ojwP5H8(short[],java.util.Collection)
kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1: java.lang.Boolean invoke(java.lang.Object)
kotlin.UnsignedKt: long ulongRemainder-eb3DHEI(long,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long minByOrThrow-U(long[],kotlin.jvm.functions.Function1)
kotlin.io.TextStreamsKt: byte[] readBytes(java.net.URL)
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$withIndex$7: java.util.Iterator invoke()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(java.lang.Object[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character minByOrNull(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.AbstractCoroutine: void getContext$annotations()
kotlin.collections.CollectionsKt___CollectionsKt: long sumOfLong(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.UInt: int rem-xj2QHRw(int,short)
kotlin.jvm.internal.TypeReference: TypeReference(kotlin.reflect.KClassifier,java.util.List,boolean)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow switchMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobSupport$AwaitContinuation: JobSupport$AwaitContinuation(kotlin.coroutines.Continuation,kotlinx.coroutines.JobSupport)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(int[],kotlin.jvm.functions.Function1)
kotlin.text.CharDirectionality$Companion$directionalityMap$2: java.lang.Object invoke()
kotlin.jvm.internal.TypeParameterReference: java.lang.String getName()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(long[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause2,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.String getInvariantSeparatorsPath(java.nio.file.Path)
kotlin.SafePublicationLazyImpl$Companion: SafePublicationLazyImpl$Companion()
kotlinx.coroutines.flow.internal.StackFrameContinuation: void resumeWith(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Iterable)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceRightIndexed(java.util.List,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt: java.lang.Object toSet$default(kotlinx.coroutines.flow.Flow,java.util.Set,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection flatMapIterableTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlin.text.Regex$Serialized: java.lang.String getPattern()
kotlin.collections.AbstractMap: AbstractMap()
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long first-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.text.MatchGroup: boolean equals(java.lang.Object)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.util.List,kotlin.jvm.functions.Function1)
kotlin.time.DurationKt: long getNanoseconds(double)
kotlin.collections.MapsKt___MapsKt: java.util.Collection mapNotNullTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(int[],int,int,int,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(short)
kotlin.math.MathKt__MathJVMKt: double ceil(double)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable minOf(java.lang.Comparable,java.lang.Comparable[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)
kotlinx.coroutines.channels.BufferedChannel: void cancelSuspendedReceiveRequests(kotlinx.coroutines.channels.ChannelSegment,long)
kotlinx.coroutines.DefaultExecutor: void run()
kotlinx.coroutines.debug.internal.DebugProbesImpl$startWeakRefCleanerThread$1: java.lang.Object invoke()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: IntrinsicsKt__IntrinsicsJvmKt()
kotlin.collections.EmptyList: boolean removeAll(java.util.Collection)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOf-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-ciTST-8(short[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.DoubleCompanionObject: void getMIN_VALUE$annotations()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
kotlin.jvm.internal.Reflection: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object last(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
kotlin.jvm.internal.DoubleCompanionObject: double getNaN()
kotlin.ranges.IntRange: IntRange(int,int)
kotlin.collections.ArraysKt___ArraysKt: boolean[] onEachIndexed(boolean[],kotlin.jvm.functions.Function2)
kotlin.collections.MapWithDefaultImpl: MapWithDefaultImpl(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.MutableMapWithDefaultImpl: java.lang.String toString()
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: java.util.concurrent.Executor getExecutor()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(char[])
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: kotlin.coroutines.CoroutineContext getContext()
kotlinx.coroutines.Job: boolean isActive()
kotlinx.coroutines.channels.ConflatedBufferedChannel: boolean shouldSendSuspend$kotlinx_coroutines_core()
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1(kotlin.coroutines.CoroutineContext,kotlin.DeepRecursiveScopeImpl,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.ranges.IntProgressionIterator: int nextInt()
kotlin.UIntArray: boolean contains-WZ4Q5Ns(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object access$waitUntilSelected(kotlinx.coroutines.selects.SelectImplementation,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(short[])
kotlin.jvm.internal.Lambda: Lambda(int)
kotlinx.coroutines.EventLoop_commonKt: long delayToNanos(long)
kotlinx.coroutines.flow.SubscribedSharedFlow: java.util.List getReplayCache()
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1: SequencesKt__SequencesKt$generateSequence$1(kotlin.jvm.functions.Function0)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void setIndex(int)
kotlin.sequences.SequencesKt___SequencesKt$minus$1: SequencesKt___SequencesKt$minus$1(kotlin.sequences.Sequence,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object singleOrNull(kotlin.sequences.Sequence)
kotlin.jvm.internal.ClassReference: boolean isData()
kotlinx.coroutines.flow.internal.SafeCollector: void checkContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.CompletableJob$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.CompletableJob,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,int)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(int[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KType typeOf(kotlin.reflect.KClassifier,java.util.List,boolean)
kotlin.text.StringsKt__AppendableKt: java.lang.Appendable append(java.lang.Appendable,java.lang.CharSequence[])
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: DownstreamExceptionContext(java.lang.Throwable,kotlin.coroutines.CoroutineContext)
kotlin.io.ByteStreamsKt$iterator$1: void prepareNext()
kotlinx.coroutines.channels.ChannelResult: java.lang.String toString-impl(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-GBYM_sE(byte[])
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler,int)
kotlin.ranges.URangesKt___URangesKt: short coerceIn-VKSA0NQ(short,short,short)
kotlin.collections.ArraysKt___ArraysKt: char[] toCharArray(java.lang.Character[])
kotlin.ULong: boolean equals(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.annotation.AnnotationTarget: AnnotationTarget(java.lang.String,int)
kotlin.collections.ArraysKt__ArraysKt: java.util.List flatten(java.lang.Object[][])
kotlin.text.SystemProperties: SystemProperties()
kotlin.text.CharCategory: int getValue()
kotlin.jvm.internal.PropertyReference1Impl: PropertyReference1Impl(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.ranges.CharProgressionIterator: char nextChar()
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.builders.MapBuilder: void removeHashAt(int)
kotlinx.coroutines.channels.TickerChannelsKt: java.lang.Object access$fixedDelayTicker(long,long,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int nextInt(int)
kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Object collectIndexed(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWith-myNOsp4(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.AbstractCoroutine: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$1: void invoke(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlinx.coroutines.AbstractTimeSource: void registerTimeLoopThread()
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.ULong: int hashCode()
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: int minOf-J1ME1BU(int,int)
com.automation.flipkart.service.BootReceiver: BootReceiver()
kotlin.collections.MapsKt__MapsKt: java.lang.Object get(java.util.Map,java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long wo(long,long)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set setOf(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt__CollectionsKt: CollectionsKt__CollectionsKt()
kotlin.KotlinVersionCurrentValue: KotlinVersionCurrentValue()
kotlin.UInt: java.lang.String toString-impl(int)
kotlin.collections.ArraysKt___ArraysKt: int getOrElse(int[],int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.stream.StreamFlow$collect$1: StreamFlow$collect$1(kotlinx.coroutines.stream.StreamFlow,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationKt: java.lang.Object suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(short[],short,int,int)
kotlin.collections.builders.SerializedMap: void writeExternal(java.io.ObjectOutput)
kotlin.collections.ArrayDeque: ArrayDeque()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow debounce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy: ConstraintProxy$BatteryChargingProxy()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.lang.ref.ReferenceQueue access$getWeakRefQueue$p(kotlinx.coroutines.debug.internal.ConcurrentWeakMap)
kotlin.text.CharsKt__CharJVMKt: boolean isUpperCase(char)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$4: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(int[])
kotlin.text.StringsKt___StringsKt: java.lang.Character firstOrNull(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.io.encoding.Base64Kt: void getBase64UrlDecodeMap$annotations()
kotlin.collections.AbstractSet: AbstractSet()
kotlin.collections.MutableMapWithDefaultImpl: java.lang.Object remove(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(float[])
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith(java.lang.String,java.lang.String,int,boolean)
kotlinx.coroutines.flow.internal.StackFrameContinuation: kotlin.coroutines.CoroutineContext getContext()
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation)
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toList(kotlin.sequences.Sequence)
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ranges.UIntRange$Companion: kotlin.ranges.UIntRange getEMPTY()
kotlinx.coroutines.CoroutineScopeKt: void isActive$annotations(kotlinx.coroutines.CoroutineScope)
kotlin.ranges.LongRange: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object none(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.OpenEndRange,short)
kotlin.ranges.OpenEndRange: boolean contains(java.lang.Comparable)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask: EventLoopImplBase$DelayedRunnableTask(long,java.lang.Runnable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minByOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: ChannelFlowTransformLatest$flowCollect$3$1(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(long[],kotlin.jvm.functions.Function2)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: byte maxOf-b33U2AM(byte,byte,byte)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
kotlin.collections.ArraysKt___ArraysKt: short[] onEach(short[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyOfRangeInline(int[],int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceRightOrNull(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object getOrNull(java.util.List,int)
kotlin.io.ByteStreamsKt: byte[] readBytes$default(java.io.InputStream,int,int,java.lang.Object)
kotlinx.coroutines.internal.ThreadLocalKt: java.lang.ThreadLocal commonThreadLocal(kotlinx.coroutines.internal.Symbol)
kotlinx.coroutines.EventLoop: long delta(boolean)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int addLast(java.lang.Object)
kotlin.UInt: int minus-xj2QHRw(int,short)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(float[],kotlin.jvm.functions.Function1)
kotlin.ULongArray$Iterator: java.lang.Object next()
kotlin.reflect.KClass: java.util.List getSupertypes()
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: void cancel(java.util.concurrent.CancellationException)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sortedDescending(java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfLast-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
kotlin.ULongArray: java.lang.String toString()
kotlinx.coroutines.flow.StartedEagerly: StartedEagerly()
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(char[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$2: java.lang.Object invoke(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: LockFreeTaskQueueCore$Companion()
kotlinx.coroutines.channels.BufferedChannel: void updateSendersCounterIfLower(long)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: FlowKt__TransformKt$map$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setTextSelectable(android.view.accessibility.AccessibilityNodeInfo,boolean)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxWithOrThrow(java.lang.Iterable,java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt$withIndex$7: ArraysKt___ArraysKt$withIndex$7(double[])
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
kotlin.Result$Companion: Result$Companion()
kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1: FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1(kotlin.jvm.functions.Function3)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: int toInt(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UByte minBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduceIndexed-D40WMg8(int[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.ChannelAsFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.FileStore fileStore(java.nio.file.Path)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3: java.util.Iterator iterator()
kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1: ParameterizedTypeImpl$getTypeName$1$1()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] copyOfRange-Aa5vz7o(short[],int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],char[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-kV0jMPg(byte[],byte[])
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getCancellationException()
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow map(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.time.DurationUnitKt__DurationUnitJvmKt: java.util.concurrent.TimeUnit toTimeUnit(kotlin.time.DurationUnit)
kotlin.collections.builders.SerializedCollection: void readExternal(java.io.ObjectInput)
kotlin.text.StringsKt___StringsKt: java.lang.Double maxOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfFirst-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: FlowKt__ShareKt$launchSharing$1$2(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.MutableSharedFlow,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.RingBuffer: RingBuffer(java.lang.Object[],int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sum-rL5Bavg(short[])
kotlin.jvm.internal.AdaptedFunctionReference: int hashCode()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse-rL5Bavg(short[])
kotlin.time.DurationKt: long parseOverLongIsoComponent(java.lang.String)
kotlinx.coroutines.NodeList: java.lang.String getString(java.lang.String)
kotlin.collections.MapsKt__MapsKt: java.util.Map filterKeys(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.io.FileTreeWalk: FileTreeWalk(java.io.File,kotlin.io.FileWalkDirection,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.LongRange,int)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,char[],int,boolean,int)
kotlinx.coroutines.channels.Channel$Factory: Channel$Factory()
kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow: boolean increment(int)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence flatMapIterable(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: double log10(double)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte maxOrNull(byte[])
kotlin.jvm.internal.MutablePropertyReference1Impl: MutablePropertyReference1Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.NumbersKt__NumbersJVMKt: boolean isFinite(double)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
kotlin.collections.ArraysKt___ArraysKt: double minOf(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.ranges.OpenEndFloatRange: java.lang.Float getEndExclusive()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.AdaptedFunctionReference: AdaptedFunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.jvm.internal.PrimitiveSpreadBuilder: int size()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.util.Collection,java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(int[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLastWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUndispatched(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.ranges.ULongRange: boolean contains-VKZWuLQ(long)
kotlin.time.Duration: long toLong-impl(long,kotlin.time.DurationUnit)
kotlin.UShort: int compareTo-WZ4Q5Ns(short,int)
kotlin.jvm.internal.TypeReference: TypeReference(kotlin.reflect.KClassifier,java.util.List,kotlin.reflect.KType,int)
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getReceiveSegment$FU$p()
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(byte[])
kotlin.math.MathKt__MathJVMKt: int getSign(long)
kotlinx.coroutines.debug.internal.DebugProbesImpl$startWeakRefCleanerThread$1: void invoke()
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Object maxBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.ranges.ULongProgressionIterator: long next-s-VKNKU()
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
kotlin.ranges.RangesKt___RangesKt: int first(kotlin.ranges.IntProgression)
kotlin.collections.builders.MapBuilder: int findKey(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlin.time.AbstractLongTimeSource$LongTimeMark: boolean hasPassedNow()
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
kotlin.concurrent.TimersKt: java.util.TimerTask schedule(java.util.Timer,long,long,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.InlineMarker: InlineMarker()
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.StateFlow getSubscriptionCount()
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__MutableCollectionsKt: void minusAssign(java.util.Collection,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(int[])
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
kotlin.ranges.ULongProgression: long getLast-s-VKNKU()
kotlin.sequences.DropWhileSequence: kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.DropWhileSequence)
kotlin.collections.builders.ListBuilder: boolean isEmpty()
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1: FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int lastIndexOf(char)
kotlin.collections.FloatIterator: void remove()
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyOfRangeInline(long[],int,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfULong(long[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLastWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.Iterable withIndex(java.lang.CharSequence)
kotlin.time.Duration$Companion: long getNanoseconds-UwyO8pc(double)
kotlin.io.LinesSequence: java.io.BufferedReader access$getReader$p(kotlin.io.LinesSequence)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(float,java.math.MathContext)
kotlin.sequences.GeneratorSequence$iterator$1: GeneratorSequence$iterator$1(kotlin.sequences.GeneratorSequence)
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.StateFlow)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.time.MeasureTimeKt: long measureTime(kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long reduceRightIndexed-z1zDJgo(long[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt$withIndex$4: java.util.Iterator invoke()
kotlinx.coroutines.flow.internal.AbstractSharedFlow: int access$getNCollectors(kotlinx.coroutines.flow.internal.AbstractSharedFlow)
kotlin.PropertyReferenceDelegatesKt: void setValue(kotlin.reflect.KMutableProperty0,java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: char last(char[],kotlin.jvm.functions.Function1)
kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection contravariant(kotlin.reflect.KType)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: short toShort(java.lang.String)
kotlin.ranges.LongProgression: java.lang.String toString()
kotlinx.coroutines.EventLoop: void incrementUseCount(boolean)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.HashSet toHashSet(java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean maxByOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlin.ranges.ClosedRange: java.lang.Comparable getEndInclusive()
kotlin.jvm.internal.TypeReference$Companion: TypeReference$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.math.MathKt__MathJVMKt: double atan2(double,double)
kotlin.collections.SetsKt__SetsKt: java.util.Set mutableSetOf()
kotlin.collections.builders.MapBuilder: boolean isEmpty()
kotlin.jvm.internal.FunInterfaceConstructorReference: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object processResultSelectReceive(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean all(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.AbstractMap$keys$1: AbstractMap$keys$1(kotlin.collections.AbstractMap)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: void invoke(java.lang.Throwable)
kotlin.jvm.internal.FloatCompanionObject: float getMAX_VALUE()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowCombine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.AbstractMap: java.util.Set entrySet()
kotlin.collections.ArraysKt___ArraysKt$withIndex$8: java.util.Iterator invoke()
kotlinx.coroutines.Incomplete: boolean isActive()
kotlinx.coroutines.channels.BroadcastCoroutine: void onCompleted(java.lang.Object)
kotlin.io.FilesKt__UtilsKt$copyRecursively$2: FilesKt__UtilsKt$copyRecursively$2(kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsKt: float sumOfFloat(java.lang.Iterable)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.text.MatchResult$Destructured: java.lang.String component9()
kotlinx.coroutines.CompletedContinuation: void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable)
kotlin.UByteArray: int getSize()
kotlin.text.CharDirectionality$Companion: kotlin.text.CharDirectionality valueOf(int)
kotlinx.coroutines.JobSupport$Finishing: void addExceptionLocked(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(int[],kotlin.jvm.functions.Function1)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: long maxOf-eb3DHEI(long,long)
kotlin.collections.MutableMapWithDefaultImpl: void putAll(java.util.Map)
kotlin.io.path.ExceptionsCollector: ExceptionsCollector()
kotlin.text.StringsKt__IndentKt: java.lang.String trimIndent(java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence zip(kotlin.sequences.Sequence,kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.io.path.FileVisitorBuilder: void onVisitFile(kotlin.jvm.functions.Function2)
kotlin.coroutines.jvm.internal.DebugMetadata: int[] l()
kotlin.math.MathKt__MathJVMKt: float log(float,float)
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: java.lang.String systemProp(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(short[],kotlin.jvm.functions.Function1)
kotlin.collections.EmptyMap: java.lang.Object get(java.lang.Object)
kotlinx.coroutines.ThreadContextElementKt: java.lang.Object ensurePresent$$forInline(java.lang.ThreadLocal,kotlin.coroutines.Continuation)
kotlin.time.TimeSource$Monotonic: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: java.lang.Object join(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,int,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlinx.coroutines.AbstractCoroutine: void resumeWith(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$onEachIndexed$1: java.lang.Object invoke(int,java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOfNotNull(java.lang.Object[])
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith(java.lang.String,java.lang.String,boolean)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String capitalize(java.lang.String)
kotlinx.coroutines.JobSupport: java.lang.Object onAwaitInternalProcessResFunc(java.lang.Object,java.lang.Object)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext getImmediate()
kotlin.sequences.SequencesKt___SequencesKt: double averageOfLong(kotlin.sequences.Sequence)
kotlin.UShort: UShort(short)
kotlin.ResultKt: java.lang.Object recover(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel requireNoNulls(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(byte[])
kotlin.collections.ArraysKt___ArraysKt: void forEach(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.future.FutureKt: java.util.concurrent.CompletableFuture asCompletableFuture(kotlinx.coroutines.Deferred)
kotlin.coroutines.CombinedContext$Serialized: CombinedContext$Serialized(kotlin.coroutines.CoroutineContext[])
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.Job: kotlin.sequences.Sequence getChildren()
kotlin.collections.AbstractList$ListIteratorImpl: void set(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: kotlin.collections.Grouping groupingBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowImpl: java.util.List getReplayCache()
kotlin.ranges.URangesKt___URangesKt: long coerceIn-JPwROB0(long,kotlin.ranges.ClosedRange)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(int[])
kotlin.collections.ArraysKt___ArraysKt: boolean last(boolean[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.String substring(java.lang.CharSequence,int,int)
kotlin.collections.ArrayAsCollection: int size()
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceOrNull(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.ULong: long rem-WZ4Q5Ns(long,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(long[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(long[],long,int,int)
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorReturn$default(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.Result$Failure: java.lang.String toString()
kotlin.experimental.BitwiseOperationsKt: short and(short,short)
kotlin.ranges.CharProgression: boolean isEmpty()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path copyTo(java.nio.file.Path,java.nio.file.Path,boolean)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long minus-UwyO8pc(kotlin.time.ComparableTimeMark)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(byte[],kotlin.jvm.functions.Function1)
kotlin.UnsignedKt: double ulongToDouble(long)
kotlin.collections.AbstractCollection: void clear()
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.reflect.ParameterizedTypeImpl: boolean equals(java.lang.Object)
kotlin.NumbersKt__FloorDivModKt: short mod(long,short)
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.String)
kotlin.TypeAliasesKt: void IllegalArgumentException$annotations()
kotlin.time.Duration$Companion: long getMicroseconds-UwyO8pc(long)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$$inlined$sortedBy$1: int compare(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.util.Set getEntries()
kotlin.SafePublicationLazyImpl: boolean isInitialized()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int getSize()
kotlin.time.DurationUnitKt__DurationUnitKt: kotlin.time.DurationUnit durationUnitByShortName(java.lang.String)
kotlin.collections.ArrayDeque: int internalIndex(int)
kotlinx.coroutines.scheduling.CoroutineScheduler: void signalCpuWork()
kotlin.NumbersKt__BigIntegersKt: java.math.BigDecimal toBigDecimal$default(java.math.BigInteger,int,java.math.MathContext,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle getParentHandle()
kotlinx.coroutines.selects.SelectClause0Impl: kotlin.jvm.functions.Function3 getRegFunc()
androidx.work.impl.utils.NetworkApi21: android.net.NetworkCapabilities getNetworkCapabilitiesCompat(android.net.ConnectivityManager,android.net.Network)
kotlinx.coroutines.scheduling.LimitingDispatcher: LimitingDispatcher(kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher,int,java.lang.String,int)
kotlinx.coroutines.sync.Mutex$DefaultImpls: void unlock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: void forEachSlotLocked(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object[] growBuffer(java.lang.Object[],int,int)
kotlin.sequences.TransformingSequence$iterator$1: TransformingSequence$iterator$1(kotlin.sequences.TransformingSequence)
kotlinx.coroutines.JobSupport: void onAwaitInternalRegFunc(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: float[] toFloatArray(java.lang.Float[])
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.IntRange,long)
kotlinx.coroutines.flow.internal.SafeCollector: SafeCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
kotlin.comparisons.NaturalOrderComparator: NaturalOrderComparator()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(double[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.reflect.TypesJVMKt: java.lang.reflect.Type access$computeJavaType(kotlin.reflect.KType,boolean)
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: long systemProp(java.lang.String,long,long,long)
kotlinx.coroutines.channels.LazyActorCoroutine: LazyActorCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
kotlin.collections.ArraysKt___ArraysKt: float sumOfFloat(java.lang.Float[])
kotlin.collections.builders.MapBuilder$EntryRef: java.lang.Object getValue()
kotlin.ranges.ClosedFloatingPointRange: boolean lessThanOrEquals(java.lang.Comparable,java.lang.Comparable)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__CountKt: java.lang.Object count(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
kotlin.time.DurationKt: void getMinutes$annotations(long)
kotlin.time.ComparableTimeMark$DefaultImpls: kotlin.time.ComparableTimeMark minus-LRDsOJo(kotlin.time.ComparableTimeMark,long)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(short,int)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
kotlin.UNumbersKt: int takeLowestOneBit-WZ4Q5Ns(int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.channels.ReceiveChannel produceIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRight-zi1B2BA(int[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.coroutines.ContinuationKt: void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterIndexedTo-eNpIKz8(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: double minByOrThrow(double[],kotlin.jvm.functions.Function1)
kotlin.io.encoding.DecodeInputStream: void copyByteBufferInto(byte[],int,int)
kotlin.time.Duration$Companion: long getNanoseconds-UwyO8pc(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],java.lang.Object[])
kotlin.ranges.URangesKt___URangesKt: kotlin.UInt randomOrNull(kotlin.ranges.UIntRange)
kotlinx.coroutines.sync.MutexKt: java.lang.Object withLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlin.collections.MapWithDefaultImpl: java.util.Map getMap()
kotlin.collections.builders.MapBuilderKeys: boolean removeAll(java.util.Collection)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,float)
kotlin.ranges.ClosedFloatRange: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: double random(double[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte minOrNull-GBYM_sE(byte[])
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: int getMaxLines(android.widget.TextView)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte singleOrNull(byte[],kotlin.jvm.functions.Function1)
kotlin.sequences.SubSequence$iterator$1: int getPosition()
kotlin.io.ByteStreamsKt: java.io.BufferedOutputStream buffered(java.io.OutputStream,int)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8(boolean[])
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(kotlin.reflect.KClassifier)
kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlinx.coroutines.Job)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemColumnTitle(java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.collections.ArraysKt___ArraysKt: int indexOf(int[],int)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow onSubscription(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function2)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String padStart(java.lang.String,int,char)
kotlinx.coroutines.internal.ThreadSafeHeap: boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode)
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyOf(byte[],int)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getRESUMING_BY_EB$p()
kotlinx.coroutines.JobSupport: void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle)
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow take(kotlinx.coroutines.flow.Flow,int)
kotlin.collections.CollectionsKt___CollectionsKt: float[] toFloatArray(java.util.Collection)
kotlinx.coroutines.JobSupport: java.lang.Throwable createCauseException(java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.util.Map filterNot(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilderEntries: boolean addAll(java.util.Collection)
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1: UnbiasedSelectBuilderImpl$initSelectResult$1(kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl,kotlin.coroutines.Continuation)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7,kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence emptySequence()
kotlin.collections.ArraysKt___ArraysKt: double reduceIndexed(double[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.internal.Symbol: Symbol(java.lang.String)
kotlin.io.path.PathsKt__PathUtilsKt: boolean isRegularFile(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.NumbersKt__FloorDivModKt: int floorDiv(byte,int)
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.sync.Mutex Mutex(boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] plus(boolean[],java.util.Collection)
kotlin.jvm.internal.MutablePropertyReference1Impl: MutablePropertyReference1Impl(java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.CompletedContinuation: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport$children$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer singleOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.util.SortedSet toSortedSet(kotlin.sequences.Sequence)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Float maxOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.Delay: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(long[])
kotlin.collections.CollectionsKt___CollectionsKt: int indexOf(java.lang.Iterable,java.lang.Object)
kotlin.io.FilePathComponents: java.util.List component2()
kotlin.time.DurationUnitKt__DurationUnitKt: DurationUnitKt__DurationUnitKt()
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.io.TextStreamsKt$readLines$1: void invoke(java.lang.String)
kotlin.collections.SetsKt__SetsKt: java.util.Set setOf(java.lang.Object[])
kotlin.collections.builders.SetBuilder: boolean isEmpty()
kotlinx.coroutines.JobKt: void cancelChildren(kotlinx.coroutines.Job)
kotlin.io.path.ExceptionsCollector: void setPath(java.nio.file.Path)
kotlinx.coroutines.CancellableContinuation: void resume(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.String take(java.lang.String,int)
kotlin.TypeAliasesKt: void ClassCastException$annotations()
kotlin.time.Duration$Companion: long getSeconds-UwyO8pc(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: ComparisonsKt__ComparisonsKt()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$2: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigInteger toBigIntegerOrNull(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(boolean[],int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int component4--ajY-9A(int[])
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.reflect.KProperty1: kotlin.reflect.KProperty1$Getter getGetter()
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1: FlowKt__ReduceKt$first$$inlined$collectWhile$1(kotlin.jvm.internal.Ref$ObjectRef)
kotlin.collections.ArraysKt___ArraysKt: void forEach(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StartedLazily: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMapIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getRESUMING_BY_RCV$p()
kotlin.collections.ArrayAsCollection: boolean contains(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRight-A8wKCXQ(long[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.builders.ListBuilder: java.lang.Object[] access$getArray$p(kotlin.collections.builders.ListBuilder)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyInto(short[],short[],int,int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(java.lang.Object[],java.lang.Object,java.util.Comparator,int,int,int,java.lang.Object)
kotlin.collections.State: kotlin.collections.State[] values()
kotlin.sequences.SequencesKt___SequencesJvmKt: SequencesKt___SequencesJvmKt()
kotlin.math.UMathKt: int min-J1ME1BU(int,int)
kotlin.io.FilesKt__FilePathComponentsKt: java.io.File getRoot(java.io.File)
kotlin.UIntKt: int toUInt(double)
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object poll()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: ChannelsKt__Channels_commonKt$consumeEach$3(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: StartedLazily$command$1$1$emit$1(kotlinx.coroutines.flow.StartedLazily$command$1$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
kotlin.sequences.SequencesKt___SequencesKt: double minOrThrow(kotlin.sequences.Sequence)
kotlinx.coroutines.channels.BroadcastCoroutine: void cancel(java.util.concurrent.CancellationException)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: long maxOf-R03FKyM(long,long[])
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
kotlin.UIntArray: boolean containsAll(java.util.Collection)
kotlin.ranges.CharProgression: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character maxWithOrNull(char[],java.util.Comparator)
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndent(java.lang.String,java.lang.String)
kotlin.internal.UProgressionUtilKt: long getProgressionLastElement-7ftBX0g(long,long,long)
kotlin.sequences.SubSequence: kotlin.sequences.Sequence take(int)
kotlinx.coroutines.channels.TickerChannelsKt: kotlinx.coroutines.channels.ReceiveChannel ticker$default(long,long,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.TickerMode,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int count(byte[],kotlin.jvm.functions.Function1)
kotlin.ranges.ComparableOpenEndRange: boolean contains(java.lang.Comparable)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.selects.SelectInstance: void selectInRegistrationPhase(java.lang.Object)
kotlin.collections.MapsKt___MapsKt: java.lang.Double minOfOrNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: boolean contains-7apg3OU(byte)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.coroutines.jvm.internal.DebugProbesKt: kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper: DebugProbesImpl$Installations$kotlinx$VolatileWrapper(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: java.util.Comparator getCASE_INSENSITIVE_ORDER(kotlin.jvm.internal.StringCompanionObject)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character find(char[],kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: float sinh(float)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object)
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName[] values()
kotlin.jvm.internal.FunctionReference: boolean isExternal()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.StateFlowSlot: kotlin.coroutines.Continuation[] freeLocked(kotlinx.coroutines.flow.StateFlowImpl)
kotlin.KotlinNullPointerException: KotlinNullPointerException(java.lang.String)
kotlinx.coroutines.flow.FlowKt: java.lang.Object count(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.time.Duration: long getInWholeMinutes-impl(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(float[],kotlin.jvm.functions.Function2)
kotlin.math.MathKt__MathJVMKt: int roundToInt(double)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UByte min-GBYM_sE(byte[])
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void park()
kotlinx.coroutines.sync.Semaphore: void release()
kotlinx.coroutines.selects.SelectUnbiasedKt: java.lang.Object selectUnbiased(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(int[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ThreadLocalKt: void CommonThreadLocal$annotations()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path copyTo(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])
kotlinx.coroutines.JobSupport: java.lang.String stateString(java.lang.Object)
kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)
kotlin.random.PlatformRandom: PlatformRandom(java.util.Random)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimEnd(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: java.lang.Object awaitInternal(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ActorCoroutine: ActorCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel,boolean)
kotlinx.coroutines.selects.SelectImplementation: void register$default(kotlinx.coroutines.selects.SelectImplementation,kotlinx.coroutines.selects.SelectImplementation$ClauseData,boolean,int,java.lang.Object)
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.OutputStream outputStream(java.nio.file.Path,java.nio.file.OpenOption[])
kotlin.collections.ArraysKt___ArraysKt: int[] onEachIndexed(int[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: float minOf(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: TickerChannelsKt$ticker$3(kotlinx.coroutines.channels.TickerMode,long,long,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,byte)
kotlin.collections.ArraysKt___ArraysKt: float elementAtOrElse(float[],int,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: int count(java.lang.Iterable)
kotlin.NumbersKt__FloorDivModKt: NumbersKt__FloorDivModKt()
kotlinx.coroutines.internal.ScopeCoroutine: java.lang.StackTraceElement getStackTraceElement()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long)
kotlin.UInt: int shr-pVg5ArA(int,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: ChannelsKt__DeprecatedKt$filterIndexed$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sorted--ajY-9A(int[])
kotlinx.coroutines.internal.ConcurrentLinkedListKt: java.lang.Object findSegmentAndMoveForward$atomicfu(java.lang.Object,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,long,kotlinx.coroutines.internal.Segment,kotlin.jvm.functions.Function2)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object complete(kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler: void decrementBlockingTasks()
kotlin.collections.ArraysKt___ArraysKt: short[] sortedArrayDescending(short[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)
kotlin.collections.EmptyMap: boolean containsValue(java.lang.Object)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadState invoke(kotlinx.coroutines.internal.ThreadState,kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.CoroutineName: java.lang.String component1()
kotlin.math.MathKt__MathJVMKt: float withSign(float,float)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel distinctBy$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1: java.util.Iterator iterator()
kotlin.ranges.URangesKt___URangesKt: int coerceAtMost-J1ME1BU(int,int)
kotlin.time.Duration: int compareTo-LRDsOJo(long)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(char[])
kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.lang.Object doSelect(kotlin.coroutines.Continuation)
kotlin.collections.ArrayDeque: int indexOf(java.lang.Object)
kotlin.UNumbersKt: short rotateRight-olVBNx4(short,int)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object emit$suspendImpl(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: float minOf(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int lastIndexOf-XzdR7RA(short[],short)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler()
kotlin.collections.ArraysKt___ArraysKt: double average(float[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(boolean[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ArrayByteIterator: ArrayByteIterator(byte[])
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: FlowKt__CollectKt$launchIn$1(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.time.DurationUnit: kotlin.time.DurationUnit valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scanIndexed-mwnnOCs(long[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.ChannelResult: boolean isFailure-impl(java.lang.Object)
kotlin.text.StringsKt__StringsKt: kotlin.collections.CharIterator iterator(java.lang.CharSequence)
kotlinx.coroutines.flow.StateFlowImpl: void setValue(java.lang.Object)
kotlin.random.URandomKt: byte[] nextUBytes-Wvrt4B4$default(kotlin.random.Random,byte[],int,int,int,java.lang.Object)
kotlin.io.path.FileVisitorBuilder: void onPostVisitDirectory(kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character min(char[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1: java.lang.Object invoke()
kotlin.collections.builders.ListBuilder: void ensureExtraCapacity(int)
kotlin.ranges.ULongProgressionIterator: ULongProgressionIterator(long,long,long,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.MatchResult$Destructured: MatchResult$Destructured(kotlin.text.MatchResult)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: short elementAtOrElse(short[],int,kotlin.jvm.functions.Function1)
kotlin.DeepRecursiveScopeImpl: void access$setFunction$p(kotlin.DeepRecursiveScopeImpl,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(short[],short[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWithOrNull-LTi4i_s(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence zipWithNext(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List dropLast(java.util.List,int)
kotlin.time.Duration: kotlin.time.DurationUnit getStorageUnit-impl(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minByOrNull(float[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong reduceOrNull-s8dVfGU(long[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobSupport: boolean joinInternal()
kotlin.sequences.EmptySequence: kotlin.sequences.Sequence drop(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(java.lang.Object[],int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(char[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float elementAtOrNull(float[],int)
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.time.Duration: int compareTo-LRDsOJo(long,long)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxOfWith(kotlin.sequences.Sequence,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,byte)
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.InitializedLazyImpl: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(boolean[],kotlin.jvm.functions.Function2)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long minus-6eNON_k(long,long)
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: FlowKt__CountKt$count$3(kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence drop(java.lang.CharSequence,int)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object poll()
kotlin.jvm.internal.ByteSpreadBuilder: ByteSpreadBuilder(int)
kotlin.text.StringsKt___StringsKt: java.lang.String takeWhile(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence windowed$default(kotlin.sequences.Sequence,int,int,boolean,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int single--ajY-9A(int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2: UArraysKt___UArraysKt$withIndex$2(long[])
kotlin.io.FilesKt__UtilsKt: boolean startsWith(java.io.File,java.lang.String)
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame realCaller(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: void remove()
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.UShort: int hashCode()
kotlin.text.Typography: void getLeftGuillemet$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfLast-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt__MapsKt: java.util.HashMap hashMapOf(kotlin.Pair[])
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer toIntExactOrNull(long)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2: FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2(kotlin.jvm.functions.Function2,kotlin.jvm.internal.Ref$ObjectRef)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(byte[],kotlin.jvm.functions.Function1)
kotlin.UByte: int div-WZ4Q5Ns(byte,int)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfterLast$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$2: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.DeferredCoroutine: kotlinx.coroutines.selects.SelectClause1 getOnAwait()
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte singleOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.ULong: long inc-s-VKNKU(long)
kotlinx.coroutines.DelayKt: java.lang.Object delay-VtjQ1oo(long,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long maxWithOrNull(long[],java.util.Comparator)
kotlinx.coroutines.ChildHandle: kotlinx.coroutines.Job getParent()
kotlinx.coroutines.debug.internal.AgentInstallationType: AgentInstallationType()
kotlin.random.URandomKt: byte[] nextUBytes(kotlin.random.Random,int)
kotlin.collections.EmptySet: boolean add(java.lang.Void)
kotlin.sequences.TakeWhileSequence$iterator$1: java.lang.Object next()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapIndexedTo-QqktQ3k(short[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ClassValueCtorCache: ClassValueCtorCache()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(double[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.coroutines.CombinedContext$writeReplace$1: void invoke(kotlin.Unit,kotlin.coroutines.CoroutineContext$Element)
kotlin.collections.ArraysKt___ArraysKt$withIndex$1: java.util.Iterator invoke()
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
kotlin.reflect.KClass$DefaultImpls: void getSealedSubclasses$annotations()
kotlin.UInt: int unbox-impl()
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__CollectionsJVMKt: CollectionsKt__CollectionsJVMKt()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-ctEhBpI(int[],int[])
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
kotlin.text.StringsKt___StringsKt: java.lang.Double minOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobImpl: boolean completeExceptionally(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double reduceRightOrNull(double[],kotlin.jvm.functions.Function2)
kotlin.collections.builders.ListBuilder: void add(int,java.lang.Object)
kotlin.time.Duration: java.lang.Object toComponents-impl(long,kotlin.jvm.functions.Function4)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: void cleanPrev()
kotlin.collections.builders.ListBuilder$Itr: void remove()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(byte,byte)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Throwable getCloseCause()
kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3: java.lang.Void invoke(java.nio.file.Path,java.nio.file.Path,java.lang.Exception)
kotlinx.coroutines.internal.Segment: Segment(long,kotlinx.coroutines.internal.Segment,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short first-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.ClosedFloatRange: java.lang.Comparable getEndInclusive()
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
kotlin.collections.builders.ListBuilderKt: java.lang.Object[] arrayOfUninitializedElements(int)
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(char[])
kotlin.coroutines.SafeContinuation: java.lang.String toString()
kotlinx.coroutines.scheduling.LimitingDispatcher: void dispatch(java.lang.Runnable,boolean)
kotlinx.coroutines.AwaitAll: java.lang.Object await(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineContextKt: java.lang.Object withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: long[] onEachIndexed(long[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: float maxOf(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ThreadSafeHeap: void siftUpFrom(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(float[],int)
kotlin.sequences.SequenceBuilderIterator: java.lang.Throwable exceptionalState()
kotlin.text.StringsKt___StringsKt: float minOf(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWith-LTi4i_s(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path setLastModifiedTime(java.nio.file.Path,java.nio.file.attribute.FileTime)
kotlin.math.MathKt__MathJVMKt: long getAbsoluteValue(long)
kotlin.UShort: short dec-Mh2AYeg(short)
kotlin.text.MatchResult$Destructured: java.lang.String component10()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],java.lang.Object[])
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.UInt: short mod-xj2QHRw(int,short)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(int[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.SetsKt__SetsJVMKt: java.util.TreeSet sortedSetOf(java.lang.Object[])
kotlin.collections.CollectionsKt__IterablesKt: java.util.List flatten(java.lang.Iterable)
kotlin.collections.EmptyList: java.lang.Object remove(int)
kotlin.collections.IntIterator: int nextInt()
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Object minWith(java.lang.Iterable,java.util.Comparator)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(byte[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEachIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2)
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy valueOf(java.lang.String)
kotlin.collections.ArrayDeque: int decremented(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
kotlin.ULongArray: long get-s-VKNKU(long[],int)
kotlin.internal.PlatformImplementationsKt: boolean apiVersionIsAtLeast(int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(char[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.io.FilesKt__FileReadWriteKt: byte[] readBytes(java.io.File)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.sequences.TransformingSequence: TransformingSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.time.DurationKt: void getSeconds$annotations(int)
kotlinx.coroutines.sync.MutexKt$withLock$1: MutexKt$withLock$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel: void access$registerSelectForReceive(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: ChannelsKt__DeprecatedKt$indexOf$1(kotlin.coroutines.Continuation)
kotlin.jvm.internal.DoubleSpreadBuilder: int getSize(java.lang.Object)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence flattenSequenceOfIterable(kotlin.sequences.Sequence)
kotlin.text.StringsKt__StringsJVMKt: boolean contentEquals(java.lang.String,java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.LongSpreadBuilder: int getSize(long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(int[],int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel withIndex$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(double[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort minByOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.random.Random: long nextLong(long)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.AbstractTimeSource: long nanoTime()
kotlinx.coroutines.flow.StateFlowImpl: void getValue$annotations()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper: DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper()
kotlinx.coroutines.CancellableContinuationImpl: void callOnCancellation(kotlin.jvm.functions.Function1,java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1(kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] plus-xo_DsdI(byte[],java.util.Collection)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
kotlin.io.encoding.Base64$Default: byte[] getMimeLineSeparatorSymbols$kotlin_stdlib()
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlinx.coroutines.Job,java.util.concurrent.CancellationException)
kotlinx.coroutines.ParentJob$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.ParentJob,kotlin.coroutines.CoroutineContext$Key)
kotlin.jvm.internal.ArrayFloatIterator: ArrayFloatIterator(float[])
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(char[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.text.RegexKt$fromInt$1$1: RegexKt$fromInt$1$1(int)
kotlin.text.StringsKt__StringsJVMKt: boolean contentEquals(java.lang.CharSequence,java.lang.CharSequence,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(byte[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.PropertyReference0: PropertyReference0(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(byte,int)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(char[])
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long minus-LRDsOJo(long,long)
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
kotlin.collections.EmptyIterator: int nextIndex()
kotlin.ranges.IntProgression$Companion: kotlin.ranges.IntProgression fromClosedRange(int,int,int)
kotlin.collections.MapsKt__MapsKt: boolean isNullOrEmpty(java.util.Map)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigInteger toBigInteger(java.lang.String,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable getReflected()
kotlinx.coroutines.channels.Channel$DefaultImpls: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.time.Duration: long times-UwyO8pc(long,double)
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.InputStreamReader reader$default(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object)
kotlinx.coroutines.EventLoopImplBase: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
kotlin.comparisons.ReversedComparator: int compare(java.lang.Object,java.lang.Object)
kotlin.time.Duration$Companion: void getHours-UwyO8pc$annotations(int)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
kotlin.text.UStringsKt: short toUShort(java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int indexOf(java.lang.Object)
kotlin.text.MatcherMatchResult$groupValues$1: java.lang.Object get(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte reduceOrNull-ELGow60(byte[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: FlowKt__CollectKt$collect$3$emit$1(kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(int[],java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
kotlin.collections.ArraysKt___ArraysKt: short single(short[])
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
kotlinx.coroutines.flow.EmptyFlow: EmptyFlow()
kotlin.collections.CollectionsKt___CollectionsKt: boolean contains(java.lang.Iterable,java.lang.Object)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object success-JP2dKIU(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: int incrementCreatedWorkers()
kotlin.collections.EmptyList: java.lang.Void get(int)
kotlinx.coroutines.JobSupport$Finishing: java.util.List sealLocked(java.lang.Throwable)
kotlin.collections.EmptyIterator: boolean hasPrevious()
kotlin.text.MatcherMatchResult$groups$1$iterator$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(int[],kotlin.jvm.functions.Function1)
kotlin.text.CharsKt__CharJVMKt: kotlin.text.CharCategory getCategory(char)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object reduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: java.lang.String trim(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: float atan2(float,float)
kotlin.collections.AbstractMap$toString$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] plus(int[],int)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.DiagnosticCoroutineContextException: java.lang.String getLocalizedMessage()
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: FlowKt__EmittersKt$transform$1$1(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
kotlin.TypeAliasesKt: void ConcurrentModificationException$annotations()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1)
kotlin.time.Duration: long getInWholeSeconds-impl(long)
kotlin.collections.BooleanIterator: java.lang.Boolean next()
kotlinx.coroutines.ChildHandleNode: ChildHandleNode(kotlinx.coroutines.ChildJob)
kotlinx.coroutines.flow.StartedLazily: StartedLazily()
kotlin.ranges.CharRange: java.lang.Comparable getEndInclusive()
kotlin.math.UMathKt: long max-eb3DHEI(long,long)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.OpenEndRange,byte)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1: ChannelsKt__DeprecatedKt$consumesAll$1(kotlinx.coroutines.channels.ReceiveChannel[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short singleOrNull(short[],kotlin.jvm.functions.Function1)
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor valueOf(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt$withIndex$9: ArraysKt___ArraysKt$withIndex$9(char[])
kotlin.collections.MapsKt___MapsKt: java.util.Map onEach(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float maxOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt__MapsKt: java.util.Map filterTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentDeepToStringNullable(java.lang.Object[])
kotlinx.coroutines.NonCancellable: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1: java.lang.Integer invoke(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel distinctBy$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: BufferedChannel(int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(boolean[])
kotlinx.coroutines.selects.SelectImplementation: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainNothing$CollectionsKt__MutableCollectionsKt(java.util.Collection)
kotlin.collections.MapsKt__MapsJVMKt: java.util.SortedMap toSortedMap(java.util.Map)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow transform(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1: kotlin.Pair invoke(java.lang.Object,java.lang.Object)
kotlin.collections.AbstractList$ListIteratorImpl: boolean hasPrevious()
kotlin.reflect.KCallable: java.lang.Object callBy(java.util.Map)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(double[],kotlin.random.Random)
kotlin.ULongArray: long[] constructor-impl(long[])
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Iterable asMutableIterable(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: ChannelFlow$collectToFun$1(kotlinx.coroutines.flow.internal.ChannelFlow,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Float maxOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobKt__JobKt: java.lang.Object cancelAndJoin(kotlinx.coroutines.Job,kotlin.coroutines.Continuation)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: void getCOROUTINE_SUSPENDED$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfLast-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object firstOrNull(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadSafeHeapNode: void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap)
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4: UArraysKt___UArraysKt$withIndex$4(short[])
kotlinx.coroutines.JobSupport: boolean start()
kotlin.collections.ArraysKt___ArraysKt: double averageOfDouble(java.lang.Double[])
kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection invariant(kotlin.reflect.KType)
kotlin.time.ComparableTimeMark: kotlin.time.ComparableTimeMark plus-LRDsOJo(long)
kotlin.UShort: java.lang.String toString-impl(short)
kotlinx.coroutines.flow.internal.NoOpContinuation: void resumeWith(java.lang.Object)
kotlin.ranges.UIntProgression$Companion: UIntProgression$Companion()
kotlinx.coroutines.internal.LimitedDispatcherKt: void checkParallelism(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long lastOrNull(long[],kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator reversed(java.util.Comparator)
kotlin.text.StringsKt___StringsKt: java.util.Map groupBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(char[])
kotlin.time.Duration$Companion: long getMinutes-UwyO8pc(double)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,short)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float minBy(float[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfFirst-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String formatNullable(kotlin.jvm.internal.StringCompanionObject,java.util.Locale,java.lang.String,java.lang.Object[])
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long plus-LRDsOJo(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(int[],kotlin.jvm.functions.Function1)
androidx.work.impl.background.systemjob.SystemJobService$Api24Impl: java.lang.String[] getTriggeredContentAuthorities(android.app.job.JobParameters)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
kotlin.math.MathKt__MathJVMKt: double log2(double)
kotlin.collections.ArraysKt___ArraysKt: boolean all(double[],kotlin.jvm.functions.Function1)
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceRange(java.lang.String,kotlin.ranges.IntRange,java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOrNull(java.lang.Double[])
kotlinx.coroutines.JobSupport: kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object)
kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)
kotlin.time.Duration: double getInDays-impl(long)
kotlin.jvm.internal.SpreadBuilder: void add(java.lang.Object)
kotlin.text.Regex: kotlin.text.MatchResult find(java.lang.CharSequence,int)
kotlinx.coroutines.EventLoopImplBase: long getNextTime()
kotlin.collections.ArraysKt___ArraysKt: long maxWithOrThrow(long[],java.util.Comparator)
kotlin.text.CharsKt__CharKt: java.lang.String plus(char,java.lang.String)
kotlin.time.DurationKt: long access$millisToNanos(long)
kotlin.math.MathKt__MathHKt: void getPI$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: boolean isEmpty()
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy: ConstraintProxy$NetworkStateProxy()
kotlin.jvm.internal.TypeParameterReference: int hashCode()
kotlinx.coroutines.internal.InlineList: java.lang.Object constructor-impl$default(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: java.lang.Object tryResumeWithException(java.lang.Throwable)
kotlin.time.TimedValue: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: void shuffle(long[])
kotlin.time.Duration: long toLongMilliseconds-impl(long)
kotlinx.coroutines.future.FutureKt: java.lang.Object await(java.util.concurrent.CompletionStage,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: kotlinx.coroutines.internal.ConcurrentLinkedListNode close(kotlinx.coroutines.internal.ConcurrentLinkedListNode)
kotlinx.coroutines.channels.BufferedChannelKt: long constructEBCompletedAndPauseFlag(long,boolean)
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$2: BufferedChannel$onReceiveOrNull$2()
kotlin.CompareToKt: int compareTo(java.lang.Comparable,java.lang.Object)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: kotlinx.coroutines.internal.Symbol access$getCLOSED$p()
kotlin.random.KotlinRandom: kotlin.random.Random getImpl()
kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState: java.io.File step()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object any(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.sequences.TakeWhileSequence: java.util.Iterator iterator()
kotlinx.coroutines.CancellableContinuation: void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte getOrNull-PpDY95g(byte[],int)
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceIn(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)
kotlin.collections.CollectionsKt__ReversedViewsKt: int access$reversePositionIndex(java.util.List,int)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.AbstractFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.DefaultScheduler: java.lang.String toString()
kotlin.time.DurationKt: long nanosToMillis(long)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean)
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.EmptyMap: boolean isEmpty()
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: FlowKt__EmittersKt$invokeSafely$1(kotlin.coroutines.Continuation)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
kotlin.collections.SetsKt___SetsKt: SetsKt___SetsKt()
kotlin.reflect.TypesJVMKt: void getJavaType$annotations(kotlin.reflect.KType)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(short[],int,int)
kotlin.jvm.internal.DoubleCompanionObject: void getNaN$annotations()
kotlin.io.FilesKt__FileReadWriteKt: void appendText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: java.lang.Object invoke(java.lang.Object)
kotlin.concurrent.TimersKt: java.util.Timer timer(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannelKt: long getSendersCounter(long)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(java.lang.Object[])
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.util.concurrent.Executor getExecutor()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch(java.util.List,int,int,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,kotlin.text.Regex,int,int,java.lang.Object)
kotlinx.coroutines.SupervisorKt: java.lang.Object supervisorScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.EmptyIterator: void add(java.lang.Object)
kotlinx.coroutines.ThreadContextElement: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.CopyableThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.CopyableThreadContextElement,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.scheduling.TaskContextImpl: TaskContextImpl(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(short[],kotlin.jvm.functions.Function3)
kotlin.reflect.KFunction$DefaultImpls: void isOperator$annotations()
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind valueOf(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt maxOrNull--ajY-9A(int[])
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(byte[],java.nio.charset.Charset)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object elementAt(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)
kotlin.collections.IndexedValue: boolean equals(java.lang.Object)
kotlin.io.path.FileVisitorBuilderImpl: FileVisitorBuilderImpl()
kotlinx.coroutines.internal.ConcurrentLinkedListKt: java.lang.Object findSegmentInternal(kotlinx.coroutines.internal.Segment,long,kotlin.jvm.functions.Function2)
kotlin.collections.MapWithDefaultImpl: int getSize()
kotlin.collections.ArraysKt___ArraysJvmKt: char[] plus(char[],java.util.Collection)
kotlin.text.StringsKt___StringsKt: void forEach(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer reduceOrNull(int[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.ComparableRange: java.lang.Comparable getStart()
kotlin.io.encoding.StreamEncodingKt__Base64IOStreamKt: StreamEncodingKt__Base64IOStreamKt()
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0)
kotlinx.coroutines.DispatchedCoroutine: boolean tryResume()
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set buildSetInternal(int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
kotlin.collections.EmptyList: java.util.ListIterator listIterator()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ranges.ULongRange: boolean contains(java.lang.Comparable)
kotlin.sequences.TakeSequence$iterator$1: java.util.Iterator getIterator()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(float[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object lastOrNull(kotlin.sequences.Sequence)
kotlin.coroutines.CombinedContext$writeReplace$1: CombinedContext$writeReplace$1(kotlin.coroutines.CoroutineContext[],kotlin.jvm.internal.Ref$IntRef)
kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState: FileTreeWalk$FileTreeWalkIterator$SingleFileState(kotlin.io.FileTreeWalk$FileTreeWalkIterator,java.io.File)
kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()
kotlin.io.TextStreamsKt: java.io.BufferedReader buffered(java.io.Reader,int)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
kotlin.Result$Companion: java.lang.Object success(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1: SequencesKt___SequencesKt$flatMapIndexed$1()
kotlin.SynchronizedLazyImpl: java.lang.Object getValue()
kotlin.text.DelimitedRangesSequence$iterator$1: int getNextState()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int indexOf-VKZWuLQ(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(int[],java.lang.Iterable)
kotlinx.coroutines.CoroutineDispatcher$Key: CoroutineDispatcher$Key()
kotlin.UByteArray: void set-VurrAj0(byte[],int,byte)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void restore$kotlinx_coroutines_core()
kotlinx.coroutines.selects.SelectInstance: void disposeOnCompletion(kotlinx.coroutines.DisposableHandle)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] copyOf-GBYM_sE(byte[])
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double maxOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectClause2Impl: kotlin.jvm.functions.Function3 getRegFunc()
kotlin.text.StringsKt__StringsKt: java.lang.String orEmpty(java.lang.String)
kotlin.ULong: java.lang.String toString-impl(long)
kotlin.collections.EmptyList: boolean addAll(int,java.util.Collection)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object fold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.time.Duration: java.lang.Object toComponents-impl(long,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BufferedChannel: void sendImplOnNoWaiter(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,kotlinx.coroutines.Waiter,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1: java.lang.Object invoke(java.lang.Object)
kotlin.io.LineReader: void updateCharset(java.nio.charset.Charset)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(double[])
kotlin.text.Regex$Companion: int access$ensureUnicodeCase(kotlin.text.Regex$Companion,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte reduceRightOrNull(byte[],kotlin.jvm.functions.Function2)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: java.lang.Object catchImpl(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
kotlin.math.MathKt__MathJVMKt: void getUlp$annotations(float)
kotlin.reflect.KFunction: boolean isExternal()
kotlinx.coroutines.JobKt__JobKt: boolean isActive(kotlin.coroutines.CoroutineContext)
kotlin.concurrent.LocksKt: java.lang.Object read(java.util.concurrent.locks.ReentrantReadWriteLock,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(java.lang.Object[],java.lang.Object,int,int)
kotlin.text.CharsKt__CharJVMKt: boolean isLowerCase(char)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collectLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key: ExecutorCoroutineDispatcher$Key()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelSegment: boolean casState$kotlinx_coroutines_core(int,java.lang.Object,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateWithTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.SetsKt__SetsKt: java.util.Set buildSet(kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
kotlin.collections.ArraysKt___ArraysKt: double[] sliceArray(double[],java.util.Collection)
kotlin.text.StringsKt__StringsJVMKt: boolean isBlank(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: byte component2(byte[])
kotlin.collections.ArrayDeque: java.lang.Object removeAt(int)
kotlin.math.MathKt__MathJVMKt: double nextDown(double)
kotlin.collections.ArraysKt___ArraysKt: double maxOrThrow(double[])
kotlin.NumbersKt__NumbersKt: NumbersKt__NumbersKt()
kotlin.collections.ArraysKt___ArraysKt: boolean[] sliceArray(boolean[],kotlin.ranges.IntRange)
kotlin.collections.ArraysKt___ArraysKt: int reduceRightIndexed(int[],kotlin.jvm.functions.Function3)
kotlin.sequences.SequencesKt___SequencesKt$zip$1: kotlin.Pair invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(short[],kotlin.jvm.functions.Function1)
kotlin.random.XorWowRandom$Companion: XorWowRandom$Companion()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-4UcCI2c$default(byte[],int,int,int,java.lang.Object)
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult visitFileFailed(java.nio.file.Path,java.io.IOException)
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toList(kotlinx.coroutines.flow.Flow,java.util.List,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(float[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowKt: kotlinx.coroutines.flow.MutableSharedFlow MutableSharedFlow(int,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.lang.Iterable,kotlin.jvm.functions.Function1,boolean)
kotlin.time.AbstractDoubleTimeSource: AbstractDoubleTimeSource(kotlin.time.DurationUnit)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOf-uWY9BYg(int[],int)
kotlinx.coroutines.AbstractTimeSourceKt: long nanoTime()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMutableList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow cancellable(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: FlowKt__CollectKt$collectIndexed$2$emit$1(kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$resume$2: MutexImpl$CancellableContinuationWithOwner$resume$2(kotlinx.coroutines.sync.MutexImpl,kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path toPath(java.net.URI)
kotlin.UNumbersKt: int countLeadingZeroBits-WZ4Q5Ns(int)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(java.lang.Double[])
kotlin.time.Duration$Companion: long getMinutes-UwyO8pc(int)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,short)
kotlinx.coroutines.channels.ChannelSegment: void setElementLazy(int,java.lang.Object)
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1: MutexImpl$onSelectCancellationUnlockConstructor$1(kotlinx.coroutines.sync.MutexImpl)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: LockFreeLinkedListNode$CondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.reflect.ParameterizedTypeImpl: int hashCode()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filterNot(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.Job getParent()
kotlin.text.StringsKt___StringsKt: kotlin.collections.Grouping groupingBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.util.Set toSet(java.lang.CharSequence)
kotlin.collections.ArrayDeque: java.lang.Object[] toArray(java.lang.Object[])
kotlin.collections.MapWithDefaultImpl: java.util.Set keySet()
kotlinx.coroutines.sync.SemaphoreImpl: int decPermits()
kotlin.collections.builders.MapBuilder: int removeKey$kotlin_stdlib(java.lang.Object)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] access$getSlots(kotlinx.coroutines.flow.internal.AbstractSharedFlow)
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.channels.BufferedChannel: boolean shouldSendSuspend$kotlinx_coroutines_core()
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(float[])
kotlin.io.path.PathsKt__PathUtilsKt: long fileSize(java.nio.file.Path)
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.collections.ShortIterator: void remove()
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.collections.ArraysKt___ArraysKt$withIndex$3: ArraysKt___ArraysKt$withIndex$3(short[])
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.selects.SelectImplementation: kotlinx.coroutines.selects.SelectImplementation$ClauseData findClause(java.lang.Object)
kotlin.time.Duration: int toInt-impl(long,kotlin.time.DurationUnit)
kotlinx.coroutines.selects.SelectBuilderImpl: kotlinx.coroutines.CancellableContinuationImpl access$getCont$p(kotlinx.coroutines.selects.SelectBuilderImpl)
kotlin.collections.ArraysKt___ArraysKt: float maxOf(byte[],kotlin.jvm.functions.Function1)
kotlin.ranges.URangesKt___URangesKt: boolean contains-biwQdVI(kotlin.ranges.UIntRange,kotlin.UInt)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object maxWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)
kotlinx.coroutines.ResumeUndispatchedRunnable: void run()
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1: CollectionsKt__CollectionsKt$binarySearchBy$1(kotlin.jvm.functions.Function1,java.lang.Comparable)
kotlin.PreconditionsKt__PreconditionsKt: void require(boolean)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Double maxOrNull(kotlin.sequences.Sequence)
kotlin.collections.builders.MapBuilderValues: boolean retainAll(java.util.Collection)
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: FlowKt__ReduceKt$singleOrNull$1(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: byte last(byte[],kotlin.jvm.functions.Function1)
kotlin.reflect.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],byte[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.StateFlowSlot: kotlin.coroutines.Continuation[] freeLocked(java.lang.Object)
kotlin.text.MatchGroup: kotlin.ranges.IntRange getRange()
kotlin.collections.EmptyList: EmptyList()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: void update$atomicfu(java.util.concurrent.atomic.AtomicIntegerFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.text.StringsKt__RegexExtensionsJVMKt: StringsKt__RegexExtensionsJVMKt()
kotlin.time.DurationKt: void getHours$annotations(int)
kotlinx.coroutines.Empty: Empty(boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyOfRangeInline(float[],int,int)
kotlinx.coroutines.android.HandlerContext: java.lang.String toString()
kotlin.UIntArray$Iterator: UIntArray$Iterator(int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int random-2D5oskM(int[],kotlin.random.Random)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow merge(java.lang.Iterable)
kotlin.enums.EnumEntriesList: java.lang.Object get(int)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.text.MatchResult: java.lang.String getValue()
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger or(java.math.BigInteger,java.math.BigInteger)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1: FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
kotlin.text.RegexKt: kotlin.text.MatchResult matchEntire(java.util.regex.Matcher,java.lang.CharSequence)
kotlinx.coroutines.channels.BufferedChannel: void onClosedSelectOnSend(java.lang.Object,kotlinx.coroutines.selects.SelectInstance)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List listOf(java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: java.util.List listDirectoryEntries(java.nio.file.Path,java.lang.String)
kotlin.collections.builders.MapBuilderEntries: boolean add(java.lang.Object)
kotlin.random.Random: double nextDouble()
kotlin.coroutines.jvm.internal.CompletedContinuation: CompletedContinuation()
kotlinx.coroutines.internal.LockFreeLinkedListKt: void getCONDITION_FALSE$annotations()
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol access$getCANCELLED$p()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
kotlin.Triple: kotlin.Triple copy(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minByOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4(java.util.Iterator)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(int[])
kotlin.ranges.ULongRange: int hashCode()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int getSize()
kotlin.collections.AbstractSet$Companion: boolean setEquals$kotlin_stdlib(java.util.Set,java.util.Set)
kotlin.collections.ArraysKt___ArraysKt: short[] toShortArray(java.lang.Short[])
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] values()
kotlin.UByteArray: boolean isEmpty-impl(byte[])
kotlin.io.ByteStreamsKt: java.io.BufferedInputStream buffered$default(java.io.InputStream,int,int,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: long coerceIn(long,long,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short random-rL5Bavg(short[])
kotlin.io.ConsoleKt: void println(long)
kotlin.random.URandomKt: void checkUIntRangeBounds-J1ME1BU(int,int)
kotlinx.coroutines.flow.FlowKt__CountKt$count$4: FlowKt__CountKt$count$4(kotlin.jvm.functions.Function2,kotlin.jvm.internal.Ref$IntRef)
kotlin.collections.ArraysKt___ArraysKt: float maxOrThrow(float[])
kotlin.text.StringsKt__AppendableKt: java.lang.Appendable appendLine(java.lang.Appendable,java.lang.CharSequence)
kotlin.io.encoding.Base64: int decodeImpl(byte[],byte[],int,int,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.debug.AgentPremain: void premain(java.lang.String,java.lang.instrument.Instrumentation)
kotlin.time.MonotonicTimeSource: long differenceBetween-fRLX17w(long,long)
kotlinx.coroutines.channels.BroadcastCoroutine: boolean close(java.lang.Throwable)
kotlinx.coroutines.DispatchedTask: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
kotlin.jvm.internal.BooleanSpreadBuilder: int getSize(boolean[])
kotlin.io.path.PathTreeWalk$bfsIterator$1: PathTreeWalk$bfsIterator$1(kotlin.io.path.PathTreeWalk,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt__CollectionsKt: kotlin.ranges.IntRange getIndices(java.util.Collection)
kotlin.ranges.ULongRange$Companion: ULongRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character minWith(char[],java.util.Comparator)
kotlin.io.ConsoleKt: void print(boolean)
kotlinx.coroutines.channels.ChannelSegment: java.lang.Object getState$kotlinx_coroutines_core(int)
kotlin.sequences.FilteringSequence$iterator$1: int getNextState()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
kotlin.UIntArray: boolean contains(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
kotlin.text.StringsKt___StringsKt$windowed$1: java.lang.String invoke(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int lastIndexOf(java.lang.Object)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] $values()
kotlinx.coroutines.ThreadPoolDispatcherKt__ThreadPoolDispatcherKt: java.lang.Thread newFixedThreadPoolContext$lambda$1$ThreadPoolDispatcherKt__ThreadPoolDispatcherKt(int,java.lang.String,java.util.concurrent.atomic.AtomicInteger,java.lang.Runnable)
kotlin.jvm.internal.PackageReference: java.lang.String toString()
kotlin.collections.MutableMapWithDefaultImpl: java.lang.Object get(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean[] onEach(boolean[],kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.Path copyToRecursively$default(java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,boolean,boolean,int,java.lang.Object)
kotlin.io.FileTreeWalk$FileTreeWalkIterator: kotlin.io.FileTreeWalk$DirectoryState directoryState(java.io.File)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterIndexedTo-QqktQ3k(short[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.UInt: double toDouble-impl(int)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.sync.SemaphoreSegment access$createSegment(long,kotlinx.coroutines.sync.SemaphoreSegment)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(float[])
kotlin.math.MathKt__MathJVMKt: double sign(double)
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: boolean cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.CompletableDeferredImpl: boolean completeExceptionally(java.lang.Throwable)
kotlin.math.MathKt__MathJVMKt: double tanh(double)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(float[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int indexOf(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterNot$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.internal.AtomicOp: void complete(java.lang.Object,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.Character randomOrNull(java.lang.CharSequence,kotlin.random.Random)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlin.text.CharsKt__CharJVMKt: boolean isDefined(char)
kotlinx.coroutines.sync.Mutex$DefaultImpls: void getOnLock$annotations()
kotlin.UInt: int plus-xj2QHRw(int,short)
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope)
kotlin.jvm.internal.Intrinsics: void throwUndefinedForReified()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int indexOf-xj2QHRw(short)
kotlin.collections.ArraysKt___ArraysKt: void forEach(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.WaiterEB: java.lang.String toString()
kotlinx.coroutines.ChildHandleNode: boolean childCancelled(java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt minByOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.util.Collection toCollection(java.lang.CharSequence,java.util.Collection)
kotlin.time.TestTimeSource: void overflow-LRDsOJo(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short minWithOrThrow-U(short[],java.util.Comparator)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
kotlin.sequences.SequencesKt___SequencesKt: double sumByDouble(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(float[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
kotlin.Result: int hashCode-impl(java.lang.Object)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
kotlin.collections.EmptyIterator: java.lang.Void previous()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: ChannelsKt__DeprecatedKt$toMap$2(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelCoroutine: boolean isEmpty()
kotlin.UByte: int plus-xj2QHRw(byte,short)
kotlin.random.RandomKt: kotlin.random.Random Random(int)
kotlinx.coroutines.flow.FlowKt: void getDEFAULT_CONCURRENCY_PROPERTY_NAME$annotations()
kotlinx.coroutines.CompletedExceptionally: boolean makeHandled()
kotlin.math.MathKt__MathJVMKt: double truncate(double)
kotlin.NumbersKt__NumbersKt: byte takeHighestOneBit(byte)
kotlinx.coroutines.selects.SelectOldKt: java.lang.Object selectUnbiasedOld$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: java.util.List split$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String,boolean,int)
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind[] $values()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: ConflatedBroadcastChannel(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch$default(java.util.List,java.lang.Comparable,int,int,int,java.lang.Object)
kotlin.time.DurationKt: void getHours$annotations(double)
kotlin.collections.UArraySortingKt: void quickSort-4UcCI2c(byte[],int,int)
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 access$getOnEnter$p(kotlin.io.FileTreeWalk)
kotlin.TypeAliasesKt: void Error$annotations()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel flatMap$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object maxOf(java.lang.Object,java.lang.Object[],java.util.Comparator)
kotlin.time.Duration: long plus-LRDsOJo(long,long)
kotlinx.coroutines.internal.ScopeCoroutine: ScopeCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-EtDCXyQ(short[],short,int,int)
kotlin.collections.ArraysKt___ArraysKt: byte[] reversedArray(byte[])
kotlin.UByte: int toInt-impl(byte)
kotlinx.coroutines.JobSupport: java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object)
kotlin.sequences.FilteringSequence$iterator$1: java.lang.Object next()
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
kotlinx.coroutines.JobSupport: java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: java.util.regex.Pattern toPattern(java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.SetsKt__SetsKt: java.util.Set orEmpty(java.util.Set)
kotlin.DeepRecursiveFunction: DeepRecursiveFunction(kotlin.jvm.functions.Function3)
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer toIntExactOrNull(float)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object firstOrNull(java.util.List)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow retry(kotlinx.coroutines.flow.Flow,long,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long constructor-impl(long)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1: java.lang.Void invoke(java.nio.file.Path,java.nio.file.Path,java.lang.Exception)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: java.util.List listDirectoryEntries$default(java.nio.file.Path,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt: void forEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOf(java.lang.Object[])
kotlin.UByte: UByte(byte)
kotlinx.coroutines.channels.BufferedChannel: void markCancelled()
kotlinx.coroutines.selects.OnTimeout$register$$inlined$Runnable$1: OnTimeout$register$$inlined$Runnable$1(kotlinx.coroutines.selects.SelectInstance,kotlinx.coroutines.selects.OnTimeout)
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: java.lang.Void access$noImpl()
kotlinx.coroutines.Waiter: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
kotlin.enums.EnumEntriesList: java.lang.Object writeReplace()
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryCreateWorker(long)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.OpenEndRange,short)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object component1(java.util.List)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(float[],kotlin.jvm.functions.Function1)
kotlin.text.RegexOption: RegexOption(java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.UInt: void getData$annotations()
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$$inlined$sortedBy$1: DebugProbesImpl$dumpCoroutinesInfoImpl$$inlined$sortedBy$1()
kotlin.collections.builders.AbstractMapBuilderEntrySet: AbstractMapBuilderEntrySet()
kotlinx.coroutines.debug.internal.StackTraceFrame: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlin.ranges.ClosedFloatRange: java.lang.Float getEndInclusive()
kotlin.text.StringsKt__RegexExtensionsKt: StringsKt__RegexExtensionsKt()
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState$default(java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.attribute.FileAttributeView fileAttributesViewOrNull(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(long,short)
kotlinx.coroutines.NodeList: NodeList()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLast-PpDY95g(byte[],int)
kotlin.ranges.ULongRange: long getStart-s-VKNKU()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(byte,long)
kotlinx.coroutines.JobSupport$SelectOnAwaitCompletionHandler: void invoke(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(short[])
kotlin.ranges.OpenEndFloatRange: java.lang.Float getStart()
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: short component5(short[])
kotlin.text.DelimitedRangesSequence$iterator$1: void setNextState(int)
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2: FlowKt__CollectionKt$toCollection$2(java.util.Collection)
kotlin.text.MatchResult: kotlin.text.MatchResult$Destructured getDestructured()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.sequences.TakeWhileSequence$iterator$1: java.util.Iterator getIterator()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempFile$default(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[],int,java.lang.Object)
kotlin.text.UStringsKt: kotlin.UByte toUByteOrNull(java.lang.String,int)
kotlinx.coroutines.scheduling.DefaultIoScheduler: void close()
kotlin.sequences.SubSequence$iterator$1: void remove()
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: kotlin.coroutines.CoroutineContext getContext()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int random--ajY-9A(int[])
kotlin.UShort: int rem-WZ4Q5Ns(short,int)
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.ByteIterator iterator(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(float[],java.lang.Iterable)
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
kotlin.collections.CollectionsKt___CollectionsKt: int sumOfInt(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.jvm.PurelyImplements: java.lang.String value()
kotlin.jvm.internal.MutablePropertyReference1Impl: java.lang.Object get(java.lang.Object)
kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.internal.DispatchedContinuation: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.jvm.internal.ClassReference: java.util.Map access$getFUNCTION_CLASSES$cp()
kotlin.UnsafeLazyImpl: java.lang.Object writeReplace()
kotlin.ranges.ClosedFloatRange: java.lang.Comparable getStart()
kotlin.collections.builders.ListBuilder: void addAllInternal(int,java.util.Collection,int)
kotlin.collections.MutableMapWithDefaultImpl: MutableMapWithDefaultImpl(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.ChildHandleNode: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: byte single(byte[])
kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection getSTAR()
kotlin.jvm.JvmClassMappingKt: void getJavaClass$annotations(kotlin.reflect.KClass)
kotlinx.coroutines.selects.SelectKt: void OnCancellationConstructor$annotations()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.concurrent.TimersKt: java.util.Timer fixedRateTimer$default(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receive(kotlin.coroutines.Continuation)
kotlin.text.Regex$Companion: Regex$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.DoubleSpreadBuilder: int getSize(double[])
kotlin.collections.MutableMapWithDefaultImpl: java.util.Set getEntries()
kotlin.ULong: long times-xj2QHRw(long,short)
kotlinx.coroutines.debug.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: int count(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.sequences.TakeSequence: int access$getCount$p(kotlin.sequences.TakeSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] onEach-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse-Aa5vz7o(short[],int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(float[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BufferedChannel: boolean updateCellExpandBufferSlow(kotlinx.coroutines.channels.ChannelSegment,int,long)
kotlinx.coroutines.JobKt__JobKt: void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelIterator$next0$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.AbstractMap: int getSize()
kotlin.collections.builders.ListBuilder: java.lang.Object[] toArray()
kotlinx.coroutines.Deferred$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Deferred,kotlin.coroutines.CoroutineContext$Key)
kotlin.text.MatchResult$Destructured: java.lang.String component3()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.ULong: long and-VKZWuLQ(long,long)
kotlinx.coroutines.channels.BufferedChannel: void update$atomicfu(java.util.concurrent.atomic.AtomicLongFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.Pair unzip(kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: boolean isEmpty()
kotlinx.coroutines.JobKt__JobKt: boolean cancel$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: char reduceRightIndexed(char[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.MatcherMatchResult$groups$1: int getSize()
kotlinx.coroutines.debug.internal.StackTraceFrame: java.lang.StackTraceElement getStackTraceElement()
kotlin.reflect.KTypeProjection: kotlin.reflect.KType getType()
kotlin.text.StringsKt__StringsKt: boolean isEmpty(java.lang.CharSequence)
kotlin.collections.CollectionsKt___CollectionsKt: int lastIndexOf(java.lang.Iterable,java.lang.Object)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(double[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean maxWithOrNull(boolean[],java.util.Comparator)
kotlin.jvm.internal.ClassReference$Companion: java.lang.String getClassSimpleName(java.lang.Class)
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$1: BufferedChannel$onReceiveCatching$1()
kotlinx.coroutines.flow.SharedFlowImpl: int getTotalSize()
kotlin.io.path.PathNode: PathNode(java.nio.file.Path,java.lang.Object,kotlin.io.path.PathNode)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduce-ELGow60(byte[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: java.lang.Boolean get(int)
kotlinx.coroutines.flow.ThrowingCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence asSequence(java.lang.CharSequence)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object access$collectWithContextUndispatched(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object last(java.lang.Object[])
kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.time.DurationKt: long getSeconds(long)
kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult[] $values()
kotlinx.coroutines.DefaultExecutorKt: kotlinx.coroutines.Delay getDefaultDelay()
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void cancelJobOnRejection(kotlin.coroutines.CoroutineContext,java.util.concurrent.RejectedExecutionException)
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableList(java.lang.Object)
kotlin.sequences.GeneratorSequence: GeneratorSequence(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findLastAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(short[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.DeepRecursiveKt: java.lang.Object access$getUNDEFINED_RESULT$p()
kotlin.jvm.internal.TypeParameterReference: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],java.lang.Iterable)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse-GBYM_sE(byte[])
kotlin.collections.ArraysKt___ArraysKt: float maxOf(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object lastOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel: void onReceiveDequeued()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int lastIndexOf-VKZWuLQ(long)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List map(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: boolean isEmpty()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replaceFirst$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.selects.SelectClause1 getOnAwaitInternal()
androidx.work.impl.background.systemjob.SystemJobService: SystemJobService()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function4)
kotlin.reflect.KClass: boolean isAbstract()
kotlin.collections.CollectionsKt___CollectionsKt: int indexOfFirst(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object acquire$suspendImpl(kotlinx.coroutines.sync.SemaphoreImpl,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.builders.ListBuilder: java.lang.Object[] toArray(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int indexOf(java.lang.Object)
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: kotlin.coroutines.CoroutineContext getContext()
kotlin.collections.AbstractCollection: boolean addAll(java.util.Collection)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
kotlinx.coroutines.SupervisorCoroutine: boolean childCancelled(java.lang.Throwable)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double firstOrNull(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryAcquireCpuPermit()
kotlin.collections.builders.ListBuilder: boolean addAll(int,java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long firstOrNull(long[],kotlin.jvm.functions.Function1)
kotlin.ULong: short toUShort-Mh2AYeg(long)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: int maxOf-J1ME1BU(int,int)
kotlinx.coroutines.flow.FlowKt__MergeKt: void getDEFAULT_CONCURRENCY$annotations()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorResume(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,double)
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode[] $values()
kotlin.text.StringsKt___StringsKt: boolean any(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flattenConcat(kotlinx.coroutines.flow.Flow)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
kotlin.io.FilesKt: FilesKt()
kotlin.text.StringsKt___StringsKt: char reduceRightIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Comparable max(java.lang.Comparable[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: ChannelsKt__DeprecatedKt$filterNotNullTo$1(kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImplKt: int decisionAndIndex(int,int)
kotlin.ranges.LongRange: LongRange(long,long)
kotlin.math.MathKt__MathJVMKt: int getSign(int)
kotlin.math.MathKt__MathJVMKt: double pow(double,double)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(char[])
kotlinx.coroutines.internal.ConcurrentLinkedListKt: boolean moveForward$atomicfu$array(java.lang.Object,java.util.concurrent.atomic.AtomicReferenceArray,int,kotlinx.coroutines.internal.Segment)
kotlin.text.MatchResult$Destructured: java.lang.String component2()
kotlin.text.RegexKt: kotlin.text.MatchResult access$findNext(java.util.regex.Matcher,int,java.lang.CharSequence)
kotlin.text.StringsKt__StringBuilderKt: java.lang.String buildString(kotlin.jvm.functions.Function1)
kotlinx.coroutines.NodeList: boolean isActive()
kotlin.experimental.BitwiseOperationsKt: short xor(short,short)
kotlin.KotlinVersion: int hashCode()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.CompletedWithCancellation: java.lang.Object component1()
kotlin.collections.CollectionsKt___CollectionsKt: int sumOfShort(java.lang.Iterable)
kotlin.sequences.DropSequence$iterator$1: DropSequence$iterator$1(kotlin.sequences.DropSequence)
kotlin.time.Duration: java.lang.String toString-impl$default(long,kotlin.time.DurationUnit,int,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt singleOrNull--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(double[])
kotlin.ranges.IntRange: java.lang.Integer getEndExclusive()
kotlin.sequences.FilteringSequence: kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.FilteringSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-gVVukQo(short[],short[],kotlin.jvm.functions.Function2)
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
kotlin.collections.ArraysKt___ArraysKt: float[] onEachIndexed(float[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(double[],double)
kotlinx.coroutines.AbstractCoroutine: AbstractCoroutine(kotlin.coroutines.CoroutineContext,boolean,boolean)
kotlin.NumbersKt__FloorDivModKt: long floorDiv(long,short)
kotlinx.coroutines.internal.LockFreeLinkedListNode: int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp)
kotlinx.coroutines.android.HandlerDispatcherKt: android.os.Handler asHandler(android.os.Looper,boolean)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow buffer(kotlinx.coroutines.flow.Flow,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-us8wMrg(long[],long[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRightIndexed-yVwIW0Q(int[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.BufferedChannel: void waitExpandBufferCompletion$kotlinx_coroutines_core(long)
kotlin.UByteArray: int getSize-impl(byte[])
kotlinx.coroutines.internal.ConcurrentLinkedListKt: boolean moveForward$atomicfu(java.lang.Object,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlinx.coroutines.internal.Segment)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] copyOfRange-oBK06Vg(int[],int,int)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object perform(java.lang.Object)
kotlin.ranges.ULongRange: ULongRange(long,long,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean reduceRightOrNull(boolean[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFoldIndexed-mwnnOCs(long[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: FlowKt__EmittersKt$transform$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1,kotlin.coroutines.Continuation)
kotlin.collections.MutableMapWithDefaultImpl: boolean containsValue(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.builders.SerializedMap: java.lang.Object readResolve()
kotlin.time.Duration: java.lang.String toIsoString-impl(long)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(float[],kotlin.jvm.functions.Function2)
kotlin.collections.MapsKt__MapsKt: java.lang.Object component2(java.util.Map$Entry)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable minOrNull(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(int[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
kotlin.collections.builders.ListBuilder$Itr: java.lang.Object previous()
kotlinx.coroutines.selects.SelectClause0Impl: java.lang.Object getClauseObject()
kotlin.ranges.RangesKt___RangesKt: long first(kotlin.ranges.LongProgression)
kotlin.collections.MapsKt__MapsKt: boolean containsValue(java.util.Map,java.lang.Object)
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.android.HandlerContext)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(byte[],kotlin.jvm.functions.Function1)
kotlin.ranges.IntRange: kotlin.ranges.IntRange access$getEMPTY$cp()
kotlin.jvm.functions.Function15: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.Regex$findAll$2: kotlin.text.MatchResult invoke(kotlin.text.MatchResult)
kotlinx.coroutines.channels.BufferedChannel: void isEmpty$annotations()
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause1 getOnReceive()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort findLast-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: float minOf(float,float,float)
kotlin.UInt: int compareTo(java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference2: MutablePropertyReference2(java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte maxByOrThrow-U(byte[],kotlin.jvm.functions.Function1)
kotlin.UInt: short toUShort-Mh2AYeg(int)
kotlin.collections.AbstractList: java.lang.Object remove(int)
kotlinx.coroutines.CoroutineExceptionHandlerKt: kotlinx.coroutines.CoroutineExceptionHandler CoroutineExceptionHandler(kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BroadcastCoroutine: boolean isActive()
kotlin.reflect.KTypeProjection$Companion: KTypeProjection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterNotNull(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal unaryMinus(java.math.BigDecimal)
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.channels.ChannelSegment access$getNULL_SEGMENT$p()
kotlin.collections.AbstractMap: int size()
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
kotlin.sequences.SequencesKt___SequencesKt$elementAt$1: java.lang.Object invoke(int)
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyOfRange(double[],int,int)
kotlinx.coroutines.Unconfined: Unconfined()
kotlinx.coroutines.CancellableContinuationImpl: boolean isActive()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte firstOrNull(byte[])
kotlinx.coroutines.channels.BufferedChannelKt: int getSendersCloseStatus(long)
kotlin.coroutines.ContinuationInterceptor: void releaseInterceptedContinuation(kotlin.coroutines.Continuation)
kotlin.ResultKt: java.lang.Object mapCatching(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.FlatteningSequence$iterator$1: boolean ensureItemIterator()
kotlinx.coroutines.flow.LintKt: boolean isActive(kotlinx.coroutines.flow.FlowCollector)
kotlin.collections.ArrayDeque: boolean filterInPlace(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(double[],kotlin.jvm.functions.Function1)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger inv(java.math.BigInteger)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: boolean contains(java.lang.Object)
kotlin.jvm.internal.FloatCompanionObject: float getNaN()
kotlin.coroutines.CoroutineContext$plus$1: kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.internal.InlineList: int hashCode-impl(java.lang.Object)
kotlin.sequences.SequenceBuilderIterator: void remove()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CancellableContinuationImpl getReusableCancellableContinuation()
kotlinx.coroutines.JobSupport: java.lang.Object getCompletedInternal$kotlinx_coroutines_core()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int get-pVg5ArA(int)
kotlinx.coroutines.NonCancellable: void cancel()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character getOrNull(char[],int)
kotlin.collections.ArraysKt___ArraysKt: boolean[] reversedArray(boolean[])
kotlin.collections.CollectionsKt___CollectionsKt: int sumBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$updateCellReceive(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object)
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object elementAtOrNull(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.math.MathKt__MathJVMKt: int getAbsoluteValue(int)
kotlinx.coroutines.DispatchedTaskKt: void resumeWithStackTrace(kotlin.coroutines.Continuation,java.lang.Throwable)
kotlinx.coroutines.AwaitKt$joinAll$1: AwaitKt$joinAll$1(kotlin.coroutines.Continuation)
kotlin.ranges.UIntRange: boolean contains-WZ4Q5Ns(int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UByte minWith-XMRcp5o(byte[],java.util.Comparator)
kotlin.sequences.SequencesKt___SequencesKt: double averageOfFloat(kotlin.sequences.Sequence)
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.util.List sanitizeStackTrace(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(byte[],kotlin.jvm.functions.Function1)
kotlin.text.Regex$findAll$2: Regex$findAll$2()
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(java.lang.Object[])
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: double[] reversedArray(double[])
kotlin.collections.EmptyList: java.lang.Object set(int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],int[])
kotlin.Lazy: boolean isInitialized()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
kotlin.collections.CollectionsKt___CollectionsKt: double minOf(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte find-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.PropertyReference: PropertyReference()
kotlin.collections.ArraysKt___ArraysKt: long[] onEach(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(int[],int,int)
kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlinx.coroutines.CancellableContinuation: void initCancellability()
kotlinx.coroutines.flow.SubscribedSharedFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: void decrementSize()
kotlin.text.RegexKt: java.util.Set fromInt(int)
kotlin.time.AdjustedTimeMark: boolean hasPassedNow()
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
kotlin.io.encoding.Base64Kt: void getBase64DecodeMap$annotations()
kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1: java.lang.Void invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filter(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(byte[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean)
kotlinx.coroutines.CompletionHandlerException: CompletionHandlerException(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.JobSupport: void getOnJoin$annotations()
kotlinx.coroutines.DelayKt$awaitCancellation$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.UIntProgressionIterator: UIntProgressionIterator(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)
kotlin.streams.jdk8.StreamsKt: java.util.Spliterator asStream$lambda$4(kotlin.sequences.Sequence)
kotlin.collections.DoubleIterator: DoubleIterator()
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-KJPZfPQ(int[],int[])
kotlinx.coroutines.ChildHandle: boolean childCancelled(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String toUpperCase(java.lang.String,java.util.Locale)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void setIgnoreCoroutinesWithEmptyContext(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long randomOrNull(long[],kotlin.random.Random)
kotlinx.coroutines.flow.SharedFlowImpl: long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot)
kotlin.io.encoding.DecodeInputStream: void resetByteBufferIfEmpty()
kotlin.DeepRecursiveScopeImpl: kotlin.coroutines.Continuation crossFunctionCompletion(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: kotlin.time.TimeSource$Monotonic$ValueTimeMark box-impl(long)
kotlin.io.path.OnErrorResult: kotlin.io.path.OnErrorResult[] $values()
kotlin.UByte: byte xor-7apg3OU(byte,byte)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(float[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence filterNot(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.Triple: kotlin.Triple copy$default(kotlin.Triple,java.lang.Object,java.lang.Object,java.lang.Object,int,java.lang.Object)
kotlin.properties.Delegates$vetoable$1: Delegates$vetoable$1(java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.math.MathKt__MathJVMKt: double getAbsoluteValue(double)
kotlin.UByte: int compareTo(java.lang.Object)
kotlinx.coroutines.channels.ConflatedBufferedChannel: void registerSelectForSend(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String f()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.MapsKt__MapWithDefaultKt: java.util.Map withDefault(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.io.encoding.Base64Kt: byte[] access$getBase64UrlEncodeMap$p()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],java.lang.Iterable)
kotlin.collections.CollectionsKt___CollectionsKt: boolean none(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.time.AbstractLongTimeSource: AbstractLongTimeSource(kotlin.time.DurationUnit)
kotlinx.coroutines.LazyStandaloneCoroutine: void onStart()
kotlin.UShortArray: boolean equals-impl0(short[],short[])
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(long[],kotlin.jvm.functions.Function2)
kotlin.ranges.IntRange: java.lang.Integer getStart()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder setRange(java.lang.StringBuilder,int,int,java.lang.String)
kotlin.ranges.IntRange: java.lang.Comparable getStart()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1: java.util.Iterator sourceIterator()
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(char[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void getFAILURE$annotations()
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: FlowKt__DelayKt$sample$2$values$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(int[],int,int)
kotlin.streams.jdk8.StreamsKt: kotlin.sequences.Sequence asSequence(java.util.stream.DoubleStream)
kotlinx.coroutines.android.HandlerContext: boolean equals(java.lang.Object)
kotlin.experimental.BitwiseOperationsKt: short inv(short)
kotlinx.coroutines.flow.LintKt: void getCoroutineContext$annotations(kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.util.ArrayDeque createStackTrace(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-QwZRm1k(long[])
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
androidx.core.view.ViewCompat$Api30Impl: void setImportantForContentCapture(android.view.View,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(int[],kotlin.jvm.functions.Function1)
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection invariant(kotlin.reflect.KType)
kotlin.PreconditionsKt__PreconditionsKt: java.lang.Void error(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long[] toTypedArray(long[])
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
kotlin.sequences.SubSequence: SubSequence(kotlin.sequences.Sequence,int,int)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: MutexImpl$CancellableContinuationWithOwner(kotlinx.coroutines.sync.MutexImpl,kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: java.lang.Object get(int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toCollection(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
kotlinx.coroutines.JobSupport: void access$continueCompleting(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(java.lang.Object[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt__MapsKt: void plusAssign(java.util.Map,kotlin.Pair[])
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,java.lang.Iterable)
kotlin.jvm.internal.ClassReference: java.lang.Void error()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(char[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow flatten(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow flowOf(java.lang.Object)
kotlin.collections.ArrayDeque: boolean isEmpty()
kotlin.reflect.TypesJVMKt: java.lang.String typeToString(java.lang.reflect.Type)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapIndexedTo-QqktQ3k(short[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.text.MatcherMatchResult$groupValues$1: java.lang.String get(int)
kotlin.io.encoding.Base64$Default: kotlin.io.encoding.Base64 getMime()
kotlin.ranges.LongRange: int hashCode()
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.CharRange,java.lang.Character)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
kotlinx.coroutines.channels.ChannelResult: void getHolder$annotations()
kotlin.collections.MapsKt___MapsKt: MapsKt___MapsKt()
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: FlowKt__ReduceKt$firstOrNull$3(kotlin.coroutines.Continuation)
kotlin.NumbersKt__NumbersKt: int countOneBits(byte)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWith-l8EHGbQ(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.reflect.KType: java.util.List getArguments()
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.util.List dumpCoroutinesInfo()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.collections.CollectionsKt__CollectionsJVMKt: int checkIndexOverflow(int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int getSize()
kotlin.jvm.internal.PackageReference: PackageReference(java.lang.Class,java.lang.String)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object lastIndexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CoroutineId: boolean equals(java.lang.Object)
kotlin.math.MathKt__MathJVMKt: double round(double)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(boolean[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Double minOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.ULong: long plus-xj2QHRw(long,short)
kotlin.UByte: int compareTo-7apg3OU(byte,byte)
kotlin.collections.EmptySet: int getSize()
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection,java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List map-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.time.Duration$Companion: void getSeconds-UwyO8pc$annotations(double)
kotlinx.coroutines.JobSupport: boolean childCancelled(java.lang.Throwable)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getSUSPEND$p()
kotlinx.coroutines.sync.SemaphoreImpl: boolean addAcquireToQueue(kotlinx.coroutines.Waiter)
kotlin.sequences.SequencesKt___SequencesKt: int sumOfInt(kotlin.sequences.Sequence)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
kotlin.collections.ArraysKt___ArraysKt: long[] reversedArray(long[])
kotlin.collections.ArraysKt__ArraysJVMKt: void copyOfRangeToIndexCheck(int,int)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1: SafeCollector_commonKt$unsafeFlow$1(kotlin.jvm.functions.Function2)
kotlin.collections.builders.ListBuilderKt: java.lang.Object[] copyOfUninitializedElements(java.lang.Object[],int)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String lowercase(java.lang.String,java.util.Locale)
kotlin.ResultKt: java.lang.Object runCatching(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
kotlin.text.Regex: kotlin.sequences.Sequence findAll$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
kotlinx.coroutines.JobKt__JobKt: void cancel$default(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.future.FutureKt: java.util.concurrent.CompletableFuture future$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.sequences.DropTakeSequence: kotlin.sequences.Sequence drop(int)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow sample(kotlinx.coroutines.flow.Flow,long)
kotlin.time.DurationKt: long durationOfNanos(long)
kotlin.ULong$Companion: ULong$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.EventLoopImplPlatform: java.lang.Thread getThread()
kotlin.time.TimeSource$Monotonic: kotlin.time.ComparableTimeMark markNow()
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(short[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] asByteArray-GBYM_sE(byte[])
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1$1: MutexImpl$onSelectCancellationUnlockConstructor$1$1(kotlinx.coroutines.sync.MutexImpl,java.lang.Object)
kotlinx.coroutines.future.FutureKt$asDeferred$2: java.lang.Object invoke(java.lang.Object,java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
kotlinx.coroutines.internal.LockFreeLinkedListHead: void validate$kotlinx_coroutines_core()
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(short[],int)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: FlowKt__ZipKt$combineTransformUnsafe$1(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ReversedListReadOnly: int getSize()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(java.lang.Object[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: int compare(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean any(byte[])
kotlin.io.encoding.DecodeInputStream: int handlePaddingSymbol(int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object single(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: int maxOf(int,int[])
kotlin.ranges.LongRange$Companion: kotlin.ranges.LongRange getEMPTY()
kotlinx.coroutines.EventLoopImplBase: int scheduleImpl(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.Object useDirectoryEntries$default(java.nio.file.Path,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: java.lang.Object prepare(java.lang.Object)
kotlin.math.MathKt__MathJVMKt: int max(int,int)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2: StreamsKt$asSequence$$inlined$Sequence$2(java.util.stream.IntStream)
kotlinx.coroutines.EventLoop: boolean isUnconfinedLoopActive()
kotlin.jvm.internal.Intrinsics: void throwParameterIsNullIAE(java.lang.String)
kotlinx.coroutines.channels.ChannelCoroutine: boolean offer(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: boolean updateCellExpandBuffer(kotlinx.coroutines.channels.ChannelSegment,int,long)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$processResultSelectReceiveCatching(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlin.UByteArray$Iterator: UByteArray$Iterator(byte[])
kotlin.collections.RingBuffer: boolean isFull()
kotlin.SynchronizedLazyImpl: boolean isInitialized()
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1: FlowKt__LimitKt$drop$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,int)
kotlin.text.CharsKt__CharKt: java.lang.String titlecase(char)
kotlin.collections.SetsKt__SetsKt: java.util.Set emptySet()
kotlin.collections.CollectionsKt__ReversedViewsKt: int reversePositionIndex$CollectionsKt__ReversedViewsKt(java.util.List,int)
kotlinx.coroutines.JobSupport$SelectOnAwaitCompletionHandler: java.lang.Object invoke(java.lang.Object)
kotlin.PreconditionsKt__PreconditionsKt: void require(boolean,kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlinx.coroutines.flow.Flow distinctUntilChangedBy(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
kotlin.collections.unsigned.UArraysKt___UArraysKt: float maxOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.InlineList: java.lang.String toString()
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(boolean[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.PropertyReference2: kotlin.reflect.KProperty2$Getter getGetter()
kotlinx.coroutines.scheduling.LimitingDispatcher: void close()
kotlinx.coroutines.CancellableContinuationImpl: void resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
kotlinx.coroutines.BuildersKt: java.lang.Object invoke(kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.Executor getExecutor()
kotlin.ranges.IntRange: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(java.lang.Object[],java.lang.Object[])
kotlin.internal.PlatformImplementations$ReflectThrowable: PlatformImplementations$ReflectThrowable()
kotlin.collections.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(char[],kotlin.jvm.functions.Function1)
kotlin.comparisons.UComparisonsKt: UComparisonsKt()
kotlin.UNumbersKt: long takeLowestOneBit-VKZWuLQ(long)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
kotlinx.coroutines.flow.FlowKt__ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel produceIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2: java.util.Iterator iterator()
kotlin.jvm.internal.LongSpreadBuilder: void add(long)
kotlin.jvm.internal.ClassReference: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.reflect.TypesJVMKt: void getJavaType$annotations(kotlin.reflect.KTypeProjection)
kotlinx.coroutines.internal.LockFreeLinkedListHead: java.lang.Void remove()
kotlinx.coroutines.channels.LazyActorCoroutine: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character maxBy(char[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: boolean contains(long)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable maxOf(java.lang.Comparable,java.lang.Comparable[])
kotlin.RequiresOptIn: java.lang.String message()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double minOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete)
kotlinx.coroutines.JobKt__JobKt: void cancel(kotlin.coroutines.CoroutineContext)
kotlin.jvm.internal.FloatCompanionObject: void getNaN$annotations()
kotlin.time.Duration$Companion: long microseconds-UwyO8pc(int)
kotlin.SafePublicationLazyImpl: SafePublicationLazyImpl(kotlin.jvm.functions.Function0)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object processResultSelectReceiveOrNull(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object lastOrNull(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double min(java.lang.Double[])
kotlinx.coroutines.flow.SharedFlowKt: void access$setBufferAt(java.lang.Object[],long,java.lang.Object)
kotlinx.coroutines.internal.InternalAnnotationsKt: void IgnoreJreRequirement$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(short[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.math.MathKt__MathJVMKt: long min(long,long)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UInt min--ajY-9A(int[])
kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean offer(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
kotlinx.coroutines.selects.SelectImplementation$doSelectSuspend$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.CharProgressionIterator: CharProgressionIterator(char,char,int)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap)
kotlinx.coroutines.flow.SharedFlow: java.util.List getReplayCache()
kotlin.UNumbersKt: byte rotateLeft-LxnNnR4(byte,int)
kotlin.io.path.FileVisitorBuilderImpl: void onVisitFileFailed(kotlin.jvm.functions.Function2)
kotlin.coroutines.jvm.internal.RunSuspend: kotlin.coroutines.CoroutineContext getContext()
kotlin.collections.SlidingWindowKt$windowedIterator$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ranges.ULongProgression$Companion: ULongProgression$Companion()
kotlin.collections.ArraysKt___ArraysJvmKt: double elementAt(double[],int)
kotlin.ULong: kotlin.ranges.ULongRange rangeTo-VKZWuLQ(long,long)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StartedLazily$command$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectKt: void ProcessResultFunction$annotations()
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.FloatIterator: java.lang.Object next()
kotlinx.coroutines.internal.Segment: boolean isRemoved()
kotlin.coroutines.EmptyCoroutineContext: int hashCode()
kotlin.internal.UProgressionUtilKt: int differenceModulo-WZ9TVnA(int,int,int)
kotlin.ranges.IntProgressionIterator: int getStep()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(double[],kotlin.jvm.functions.Function2)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path moveTo(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.attribute.UserPrincipal getOwner(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.jvm.internal.PropertyReference0: kotlin.reflect.KProperty$Getter getGetter()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentDeepEqualsInline(java.lang.Object[],java.lang.Object[])
kotlinx.coroutines.internal.ContextScope: java.lang.String toString()
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger unaryMinus(java.math.BigInteger)
kotlinx.coroutines.sync.MutexImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getOwner$FU$p()
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$3: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float singleOrNull(float[])
kotlin.text.UStringsKt: kotlin.ULong toULongOrNull(java.lang.String,int)
kotlin.io.path.PathsKt__PathReadWriteKt: void appendText$default(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,int,java.lang.Object)
kotlinx.coroutines.JobSupport$children$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.IndexingSequence$iterator$1: java.util.Iterator getIterator()
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode valueOf(java.lang.String)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.AbstractMutableMap: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: void getNameWithoutExtension$annotations(java.nio.file.Path)
kotlin.time.Duration$Companion: long getZERO-UwyO8pc()
kotlin.time.jdk8.DurationConversionsJDK8Kt: long toKotlinDuration(java.time.Duration)
kotlinx.coroutines.flow.StateFlowKt: void update(kotlinx.coroutines.flow.MutableStateFlow,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
kotlinx.coroutines.AbstractCoroutine: void onCompleted(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sorted(java.lang.Iterable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int single-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.FloatIterator: float nextFloat()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float[] toTypedArray(float[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(short[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
kotlin.ULong: long div-WZ4Q5Ns(long,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxWithOrThrow(java.lang.Object[],java.util.Comparator)
kotlinx.coroutines.ThreadContextElementKt: kotlinx.coroutines.ThreadContextElement asContextElement$default(java.lang.ThreadLocal,java.lang.Object,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: FlowKt__CountKt$count$4$emit$1(kotlinx.coroutines.flow.FlowKt__CountKt$count$4,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double minWith(double[],java.util.Comparator)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte single-GBYM_sE(byte[])
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow retryWhen(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function4)
kotlin.collections.ArraysKt___ArraysKt: byte minByOrThrow(byte[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: double averageOfShort(kotlin.sequences.Sequence)
kotlinx.coroutines.IncompleteStateBox: IncompleteStateBox(kotlinx.coroutines.Incomplete)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.EmptyIterator: int previousIndex()
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: DebugCoroutineInfoImpl$creationStackTrace$1(kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl,kotlinx.coroutines.debug.internal.StackTraceFrame,kotlin.coroutines.Continuation)
kotlin.io.ByteStreamsKt: java.io.ByteArrayInputStream byteInputStream(java.lang.String,java.nio.charset.Charset)
kotlin.ranges.OpenEndDoubleRange: java.lang.String toString()
kotlin.ULong: long div-xj2QHRw(long,short)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List distinctBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.ranges.ULongProgression: ULongProgression(long,long,long)
kotlin.collections.ArraysKt___ArraysKt: void reverse(char[])
kotlin.text.StringsKt___StringsKt: java.util.List chunked(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: int hashCode()
kotlin.io.FilesKt__UtilsKt: java.util.List normalize$FilesKt__UtilsKt(java.util.List)
kotlin.text.StringsKt___StringsKt: long sumOfLong(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow emptyFlow()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-mazbYpA(short[],short[])
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigDecimal toBigDecimalOrNull(java.lang.String,java.math.MathContext)
androidx.work.impl.WorkManagerImpl$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
kotlin.NumbersKt__NumbersJVMKt: int countLeadingZeroBits(long)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UInt minBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.collections.builders.ListBuilder: java.lang.String toString()
kotlin.coroutines.CoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int getSize()
kotlin.enums.EnumEntriesList: java.lang.Enum get(int)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: void access$onAwaitInternalRegFunc(kotlinx.coroutines.JobSupport,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlinx.coroutines.internal.ScopeCoroutine: void afterResume(java.lang.Object)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object getNextOrClosed()
kotlin.UShort: short toShort-impl(short)
kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: SequencesKt___SequencesKt$filterNotNull$1()
kotlinx.coroutines.internal.LimitedDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: ChannelFlowOperator(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.reflect.WildcardTypeImpl$Companion: WildcardTypeImpl$Companion()
kotlin.ranges.ULongProgression$Companion: ULongProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted getLazily()
kotlin.collections.ArraysKt___ArraysKt: double minOrThrow(java.lang.Double[])
kotlinx.coroutines.flow.CancellableFlowImpl: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function6)
kotlin.text.StringsKt___StringsJvmKt: java.lang.Character max(java.lang.CharSequence)
kotlinx.coroutines.flow.LintKt: void isActive$annotations(kotlinx.coroutines.flow.FlowCollector)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: boolean isEmpty()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.Object maxOfWith(java.lang.CharSequence,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.io.ConsoleKt: void print(char[])
kotlin.io.FileSystemException: FileSystemException(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: byte component4(byte[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte reduceRight-ELGow60(byte[],kotlin.jvm.functions.Function2)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean randomOrNull(boolean[],kotlin.random.Random)
kotlin.collections.Grouping: java.util.Iterator sourceIterator()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(byte[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short elementAtOrNull(short[],int)
kotlin.ranges.CharRange: boolean equals(java.lang.Object)
kotlin.jvm.internal.ClassReference: boolean isFun()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(byte[],byte,int,int,int,java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.math.MathKt__MathJVMKt: void getAbsoluteValue$annotations(float)
kotlin.reflect.KCallable$DefaultImpls: void getName$annotations()
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression reversed(kotlin.ranges.UIntProgression)
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.CancellableContinuationImpl: void update$atomicfu(java.util.concurrent.atomic.AtomicIntegerFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable minOrNull(kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxByOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(long[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__AppendableKt: java.lang.Appendable appendRange(java.lang.Appendable,java.lang.CharSequence,int,int)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
kotlinx.coroutines.EventLoopImplBase: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.channels.BufferedChannel: boolean isEmpty()
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.String toString()
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: int hashCode()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filter(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)
kotlinx.coroutines.scheduling.WorkQueue: int getSize$kotlinx_coroutines_core()
kotlin.text.StringsKt__StringsKt: boolean endsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(long[],java.lang.Iterable)
kotlin.io.LineReader: int decode(boolean)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.jvm.functions.Function1)
kotlin.ranges.OpenEndDoubleRange: int hashCode()
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.UByte: int floorDiv-xj2QHRw(byte,short)
androidx.work.impl.background.systemjob.SystemJobService$Api31Impl: int getStopReason(android.app.job.JobParameters)
kotlinx.coroutines.ResumeAwaitOnCompletion: void invoke(java.lang.Throwable)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(byte,short)
kotlin.time.Duration$Companion: long parseIsoString-UwyO8pc(java.lang.String)
kotlin.collections.builders.MapBuilder$Itr: void setIndex$kotlin_stdlib(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] sliceArray-ZRhS8yI(long[],kotlin.ranges.IntRange)
kotlin.sequences.DropTakeSequence: kotlin.sequences.Sequence take(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWithTo-ciTST-8(short[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(short,int)
kotlin.collections.CollectionsKt___CollectionsKt: int indexOfLast(java.util.List,kotlin.jvm.functions.Function1)
kotlin.time.Duration$Companion: long getDays-UwyO8pc(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt lastOrNull--ajY-9A(int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BroadcastCoroutine: kotlinx.coroutines.channels.SendChannel getChannel()
kotlin.jvm.internal.Intrinsics: void checkHasClass(java.lang.String)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object invoke-WpGqRn0(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object lastOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.BuildersKt__BuildersKt: java.lang.Object runBlocking(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.random.PlatformRandomKt: kotlin.random.Random asKotlinRandom(java.util.Random)
kotlin.collections.IndexedValue: IndexedValue(int,java.lang.Object)
kotlinx.coroutines.flow.internal.FlowCoroutineKt: kotlinx.coroutines.flow.Flow scopedFlow(kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(float[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow filterNot(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.collections.EmptyIterator: EmptyIterator()
kotlin.collections.ArraysKt___ArraysKt$withIndex$6: ArraysKt___ArraysKt$withIndex$6(float[])
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
kotlin.collections.RingBuffer$iterator$1: RingBuffer$iterator$1(kotlin.collections.RingBuffer)
kotlinx.coroutines.scheduling.DefaultIoScheduler: void execute(java.lang.Runnable)
kotlin.text.StringsKt__StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(long[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flatMapLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt___StringsKt: int indexOfLast(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CompletableJob: boolean completeExceptionally(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(char[],int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object fold-zww5nb8(short[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt: boolean any(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],java.lang.Iterable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] copyOf-r7IrZao(long[],int)
kotlin.collections.MapsKt___MapsKt: boolean none(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Iterable asMutableIterable(java.lang.Object,java.lang.String)
kotlin.collections.BooleanIterator: void remove()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.lang.Iterable,java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1: java.lang.Object[] invoke()
kotlin.collections.ArraysKt__ArraysKt: boolean isNullOrEmpty(java.lang.Object[])
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1: FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1(kotlin.jvm.functions.Function2,kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: void loop$atomicfu$array(java.util.concurrent.atomic.AtomicReferenceArray,int,kotlin.jvm.functions.Function1)
kotlin.NumbersKt__FloorDivModKt: long floorDiv(short,long)
kotlin.sequences.FlatteningSequence$iterator$1: void remove()
kotlinx.coroutines.channels.BufferedChannel$receiveCatching$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.Character findLast(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.sequences.EmptySequence: kotlin.sequences.EmptySequence drop(int)
kotlinx.coroutines.flow.SharedFlowImpl: void cancelEmitter(kotlinx.coroutines.flow.SharedFlowImpl$Emitter)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: long elapsedNow-UwyO8pc()
kotlinx.coroutines.channels.ActorKt: kotlinx.coroutines.channels.SendChannel actor(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
kotlin.NumbersKt__NumbersJVMKt: int countOneBits(int)
kotlin.sequences.SequenceBuilderIterator: kotlin.coroutines.Continuation getNextStep()
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlin.jvm.functions.Function0 access$nullArrayFactory()
kotlin.jvm.internal.ClassReference: void getTypeParameters$annotations()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object first(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper: java.util.concurrent.atomic.AtomicLongFieldUpdater access$getSequenceNumber$FU$p()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
kotlinx.coroutines.CancellableContinuationImpl: void resumeWith(java.lang.Object)
kotlin.collections.builders.ListBuilder: int retainOrRemoveAllInternal(int,int,java.util.Collection,boolean)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
kotlinx.coroutines.channels.BufferedChannel: boolean closeOrCancelImpl(java.lang.Throwable,boolean)
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: InterruptibleKt$runInterruptible$2(kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zipWithNext(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ClosedReceiveChannelException: ClosedReceiveChannelException(java.lang.String)
kotlin.ranges.CharRange: boolean contains(char)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLast-PpDY95g(byte[],int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(double[],kotlin.jvm.functions.Function1)
kotlin.text.Regex$special$$inlined$fromInt$1: java.lang.Object invoke(java.lang.Object)
kotlin.text.StringsKt___StringsKt$chunkedSequence$1: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.functions.Function9: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.sequences.DropSequence$iterator$1: void setLeft(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(double[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: float maxByOrThrow(float[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt reduceRightOrNull-WyvcNBI(int[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.CoroutineDispatcher$Key$1: CoroutineDispatcher$Key$1()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: CombineKt$zipImpl$1$1$second$1(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$3: FlowKt__DelayKt$debounce$3(kotlin.jvm.functions.Function1)
kotlin.text.Regex$Serialized: int getFlags()
kotlinx.coroutines.flow.SharedFlowImpl: int access$getBufferCapacity$p(kotlinx.coroutines.flow.SharedFlowImpl)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(int[])
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendImpl$default(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function4,int,java.lang.Object)
kotlin.time.Duration$Companion: void getHours-UwyO8pc$annotations(long)
kotlinx.coroutines.channels.BufferedChannel: int access$updateCellSend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.ArrayShortIterator: ArrayShortIterator(short[])
kotlin.jvm.internal.ByteCompanionObject: void getSIZE_BYTES$annotations()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
kotlin.collections.ArraysKt___ArraysJvmKt: short[] plus(short[],short[])
kotlin.reflect.TypesJVMKt: java.lang.reflect.Type createPossiblyInnerType(java.lang.Class,java.util.List)
kotlin.math.UMathKt: int max-J1ME1BU(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(long[])
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1(kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object doSelect(kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
kotlin.text.Regex: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,int)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.ReadonlyStateFlow: ReadonlyStateFlow(kotlinx.coroutines.flow.StateFlow,kotlinx.coroutines.Job)
kotlin.text.StringsKt__StringsKt: int indexOfAny$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: long minOf-R03FKyM(long,long[])
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KCallable computeReflected()
kotlin.UByteArray: boolean add(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object elementAt(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(double[],kotlin.jvm.functions.Function1)
kotlin.sequences.FlatteningSequence: kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.FlatteningSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort find-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ClassReference: void isInner$annotations()
kotlin.text.StringsKt__StringsKt: java.lang.String replace(java.lang.CharSequence,kotlin.text.Regex,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: FlowKt__CollectionKt$toCollection$1(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(long[])
kotlinx.coroutines.CompletableDeferred: boolean complete(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: boolean cancelLater(java.lang.Throwable)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.util.Collection,kotlin.sequences.Sequence)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxByOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
kotlin.jvm.internal.TypeParameterReference: java.util.List getUpperBounds()
kotlinx.coroutines.DefaultExecutor: boolean notifyStartup()
kotlin.io.FilesKt__FileReadWriteKt: java.io.PrintWriter printWriter(java.io.File,java.nio.charset.Charset)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: FlowKt__LimitKt$take$2$1(kotlin.jvm.internal.Ref$IntRef,int,kotlinx.coroutines.flow.FlowCollector)
kotlin.io.path.PathTreeWalk: java.util.Iterator dfsIterator()
kotlin.ranges.ClosedDoubleRange: boolean contains(double)
kotlin.io.TextStreamsKt: java.util.List readLines(java.io.Reader)
kotlin.io.encoding.EncodeOutputStream: void encodeByteBufferIntoOutput()
kotlin.random.PlatformRandomKt: java.util.Random asJavaRandom(kotlin.random.Random)
kotlin.sequences.SubSequence: kotlin.sequences.Sequence drop(int)
kotlinx.coroutines.CompletableDeferred: boolean completeExceptionally(java.lang.Throwable)
kotlinx.coroutines.flow.SharedFlowSlot: boolean allocateLocked(kotlinx.coroutines.flow.SharedFlowImpl)
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes)
kotlinx.coroutines.debug.internal.DebuggerInfo: long getSequenceNumber()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer min(int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: float maxOf-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9(char[])
kotlin.sequences.SequencesKt___SequencesJvmKt: java.util.Collection filterIsInstanceTo(kotlin.sequences.Sequence,java.util.Collection,java.lang.Class)
kotlin.random.AbstractPlatformRandom: float nextFloat()
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float maxOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function6)
kotlin.sequences.TakeWhileSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TakeWhileSequence)
kotlin.NumbersKt__NumbersJVMKt: long toBits(double)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow onEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(float[],int,int,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void getBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
kotlin.ranges.RangesKt___RangesKt: java.lang.Long toLongExactOrNull(double)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOrNull(java.lang.Double[])
kotlin.collections.builders.ListBuilder: java.util.ListIterator listIterator(int)
kotlin.UShort: int floorDiv-7apg3OU(short,byte)
kotlin.jvm.internal.ShortSpreadBuilder: short[] toArray()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
kotlinx.coroutines.InvokeOnCancel: void invoke(java.lang.Throwable)
kotlin.UByteArray: boolean containsAll(java.util.Collection)
kotlin.reflect.KMutableProperty1: void set(java.lang.Object,java.lang.Object)
kotlin.ranges.RangesKt__RangesKt: kotlin.ranges.ClosedRange rangeTo(java.lang.Comparable,java.lang.Comparable)
kotlin.jvm.internal.Intrinsics: void checkReturnedValueIsNotNull(java.lang.Object,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
kotlinx.coroutines.channels.BufferedChannel: void resumeReceiverOnClosedChannel(kotlinx.coroutines.Waiter)
kotlin.text.StringsKt___StringsKt: kotlin.Pair partition(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: byte reduceRightIndexed(byte[],kotlin.jvm.functions.Function3)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)
kotlin.UByteArray: boolean equals-impl(byte[],java.lang.Object)
androidx.work.impl.foreground.SystemForegroundService$Api31Impl: void startForeground(android.app.Service,int,android.app.Notification,int)
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.ArraysKt___ArraysKt: long reduceIndexed(long[],kotlin.jvm.functions.Function3)
kotlin.io.path.PathTreeWalk: java.lang.Object yieldIfNeeded(kotlin.sequences.SequenceScope,kotlin.io.path.PathNode,kotlin.io.path.DirectoryEntriesReader,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelResult: java.lang.Object getOrNull-impl(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int sum(byte[])
kotlin.time.MeasureTimeKt: long measureTime(kotlin.time.TimeSource$Monotonic,kotlin.jvm.functions.Function0)
kotlinx.coroutines.DispatchedCoroutine: java.util.concurrent.atomic.AtomicIntegerFieldUpdater get_decision$FU()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path moveTo(java.nio.file.Path,java.nio.file.Path,boolean)
kotlinx.coroutines.internal.InlineList: java.lang.Object unbox-impl()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4: kotlin.io.path.CopyActionResult invoke(kotlin.io.path.CopyActionContext,java.nio.file.Path,java.nio.file.Path)
kotlin.reflect.KTypeParameter: kotlin.reflect.KVariance getVariance()
kotlin.ranges.ULongProgression: java.util.Iterator iterator()
kotlin.collections.MapsKt___MapsKt: java.lang.Iterable asIterable(java.util.Map)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int lastIndexOf(short)
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from$default(android.os.Handler,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError()
kotlinx.coroutines.channels.ChannelResult: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(char[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.FloatCompanionObject: void getSIZE_BITS$annotations()
kotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)
kotlin.io.FilesKt__FileReadWriteKt: void appendText(java.io.File,java.lang.String,java.nio.charset.Charset)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] toUByteArray(byte[])
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decapitalize(java.lang.String,java.util.Locale)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path appendLines$default(java.nio.file.Path,kotlin.sequences.Sequence,java.nio.charset.Charset,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short component3-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysKt: void shuffle(char[],kotlin.random.Random)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: kotlinx.coroutines.flow.Flow asFlow(kotlinx.coroutines.channels.BroadcastChannel)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],java.lang.Object[])
kotlin.ranges.CharProgressionIterator: int getStep()
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: long[] sliceArray(long[],kotlin.ranges.IntRange)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3)
com.automation.flipkart.engine.TrafficAnalyzer$Strategy: com.automation.flipkart.engine.TrafficAnalyzer$Strategy[] values()
kotlin.jvm.internal.ArrayBooleanIterator: boolean nextBoolean()
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,byte)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] sortedArray-QwZRm1k(long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.CancelHandler makeCancelHandler(kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence mapIndexedNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.StartedLazily$command$1: StartedLazily$command$1(kotlinx.coroutines.flow.StateFlow,kotlin.coroutines.Continuation)
kotlin.time.DurationUnitKt__DurationUnitKt: kotlin.time.DurationUnit durationUnitByIsoChar(char,boolean)
kotlin.jvm.internal.MutablePropertyReference2Impl: MutablePropertyReference2Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
kotlin.collections.DoubleIterator: java.lang.Object next()
kotlin.ranges.ULongProgression: java.lang.String toString()
kotlinx.coroutines.CancellableContinuation: boolean isCancelled()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: FlowKt__ErrorsKt$retry$1(kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt__MutableCollectionsKt: java.lang.Object removeFirst(java.util.List)
kotlin.collections.ArraysKt___ArraysKt: boolean any(double[])
kotlinx.coroutines.flow.StartedLazily$command$1$1: StartedLazily$command$1$1(kotlin.jvm.internal.Ref$BooleanRef,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.util.List getCreationStackTrace()
kotlin.random.Random: int nextBits(int)
kotlinx.coroutines.channels.LazyBroadcastCoroutine: void onStart()
kotlin.collections.EmptySet: java.util.Iterator iterator()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
kotlinx.coroutines.EventLoop: void dispatchUnconfined(kotlinx.coroutines.DispatchedTask)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.util.Map)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.ULongProgression reversed(kotlin.ranges.ULongProgression)
kotlin.text.TypeAliasesKt: void Appendable$annotations()
kotlin.collections.ArraysKt__ArraysJVMKt: int contentDeepHashCode(java.lang.Object[])
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1: CombineKt$zipImpl$1$1$second$1$1(kotlinx.coroutines.channels.ProducerScope)
kotlin.collections.ArraysKt___ArraysKt: float sum(float[])
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Float min(java.lang.Iterable)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.FileVisitResult access$copyToRecursively$copy(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2: java.lang.Object invoke(java.lang.Object)
kotlin.collections.builders.ListBuilder: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-K6DWlUc(long[],long,int,int)
kotlin.SynchronizedLazyImpl: java.lang.String toString()
kotlin.coroutines.SafeContinuation$Companion: SafeContinuation$Companion()
kotlin.ULongArray: boolean removeAll(java.util.Collection)
kotlin.io.TextStreamsKt: java.io.BufferedWriter buffered(java.io.Writer,int)
kotlin.ranges.RangesKt__RangesKt: kotlin.ranges.OpenEndRange rangeUntil(java.lang.Comparable,java.lang.Comparable)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: long minOf(long,long)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List minus(java.lang.Iterable,java.lang.Object[])
kotlin.Unit: java.lang.String toString()
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.Appendable appendln(java.lang.Appendable,java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5,kotlin.coroutines.Continuation)
kotlin.ULongArray: boolean containsAll(java.util.Collection)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeAtImpl(int)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
kotlin.jvm.internal.SpreadBuilder: void addSpread(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String)
kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence)
kotlin.ranges.CharRange: boolean contains(java.lang.Comparable)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateWith(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilder: boolean containsValue(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(long[],kotlin.jvm.functions.Function1)
kotlin.coroutines.jvm.internal.RunSuspendKt: void runSuspend(kotlin.jvm.functions.Function1)
kotlin.internal.RequireKotlin$Container: kotlin.internal.RequireKotlin[] value()
kotlinx.coroutines.CompletedWithCancellation: boolean equals(java.lang.Object)
kotlin.jvm.internal.PropertyReference0Impl: PropertyReference0Impl(java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.contracts.ContractBuilder$DefaultImpls: kotlin.contracts.CallsInPlace callsInPlace$default(kotlin.contracts.ContractBuilder,kotlin.Function,kotlin.contracts.InvocationKind,int,java.lang.Object)
kotlin.io.path.DefaultCopyActionContext: kotlin.io.path.CopyActionResult copyToIgnoringExistingDirectory(java.nio.file.Path,java.nio.file.Path,boolean)
kotlin.collections.MapsKt___MapsJvmKt: java.util.Map$Entry minBy(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.util.List split$default(java.lang.CharSequence,kotlin.text.Regex,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow timeout-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
kotlin.ranges.IntProgression$Companion: IntProgression$Companion()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyOf(java.lang.Object[],int)
kotlin.text.StringsKt___StringsKt: java.util.List runningReduceIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3)
kotlin.text.StringsKt___StringsKt: java.util.Map groupByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collectIndexed(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImpl: boolean isReusable()
kotlin.text.StringsKt__StringsJVMKt: StringsKt__StringsJVMKt()
kotlin.reflect.KClassesImplKt: java.lang.String getQualifiedOrSimpleName(kotlin.reflect.KClass)
kotlinx.coroutines.sync.Mutex$DefaultImpls: java.lang.Object lock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.util.Map mapOf(kotlin.Pair[])
kotlin.collections.MapsKt__MapsKt: java.util.Map mapOf()
kotlinx.coroutines.channels.BufferedChannel: void expandBuffer()
kotlin.io.FilesKt__UtilsKt: java.io.File resolve(java.io.File,java.lang.String)
kotlin.time.TimedValue: long component2-UwyO8pc()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(int[],int)
kotlin.properties.Delegates: kotlin.properties.ReadWriteProperty notNull()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.Removed removed()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(short[],short,int,int,int,java.lang.Object)
kotlin.sequences.FilteringSequence$iterator$1: java.lang.Object getNextItem()
kotlin.collections.EmptyList: java.lang.Void set(int,java.lang.Void)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(float[])
kotlin.io.FilesKt__UtilsKt: java.io.File createTempFile$default(java.lang.String,java.lang.String,java.io.File,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] plus(byte[],byte[])
kotlin.StandardKt__StandardKt: java.lang.Object run(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.text.TypeAliasesKt: void StringBuilder$annotations()
kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String,java.lang.String)
kotlin.jvm.internal.DefaultConstructorMarker: DefaultConstructorMarker()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.StateFlowSlot[] createSlotArray(int)
kotlin.ranges.ClosedRange$DefaultImpls: boolean contains(kotlin.ranges.ClosedRange,java.lang.Comparable)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.UByte: byte inc-w2LRezQ(byte)
kotlin.collections.ArraysKt___ArraysKt: int[] sortedArrayDescending(int[])
kotlinx.coroutines.flow.ChannelAsFlow: java.lang.String additionalToStringProps()
kotlin.text.CharCategory: CharCategory(java.lang.String,int,int,java.lang.String)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1: FlowKt__ZipKt$combineTransform$7$1(kotlinx.coroutines.flow.Flow[])
kotlinx.coroutines.internal.AtomicOp: java.lang.Object decide(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(long[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMutableSet: boolean add(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte elementAtOrElse-cO-VybQ(byte[],int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel take$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlin.io.FilesKt__FileTreeWalkKt: kotlin.io.FileTreeWalk walk$default(java.io.File,kotlin.io.FileWalkDirection,int,java.lang.Object)
kotlin.math.MathKt__MathJVMKt: void getSign$annotations(long)
kotlin.collections.CollectionsKt___CollectionsKt: boolean all(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.Job Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int count(double[])
kotlinx.coroutines.JobSupport: kotlinx.coroutines.Job getParent()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
kotlin.reflect.KCallable: java.util.List getParameters()
kotlinx.coroutines.ChildJob: void parentCancelled(kotlinx.coroutines.ParentJob)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException(java.lang.String,java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(int[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.selects.SelectImplementation$ClauseData: SelectImplementation$ClauseData(kotlinx.coroutines.selects.SelectImplementation,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.CoroutineContext$Element)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scanIndexed-yVwIW0Q(int[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.sequences.DropSequence: int access$getCount$p(kotlin.sequences.DropSequence)
androidx.work.impl.utils.NetworkApi23: android.net.Network getActiveNetworkCompat(android.net.ConnectivityManager)
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyOf(char[])
androidx.appcompat.widget.SearchView: void setInputType(int)
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1: java.lang.Object invoke(java.lang.Object)
kotlin.io.ByteStreamsKt: java.io.BufferedInputStream buffered(java.io.InputStream,int)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1: FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.flow.SharedFlowSlot: kotlin.coroutines.Continuation[] freeLocked(kotlinx.coroutines.flow.SharedFlowImpl)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: long minus-UwyO8pc(kotlin.time.ComparableTimeMark)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$$inlined$sortedBy$1: DebugProbesImpl$dumpCoroutinesSynchronized$$inlined$sortedBy$1()
kotlin.io.path.PathNode: kotlin.io.path.PathNode getParent()
kotlin.collections.builders.MapBuilderEntries: boolean removeAll(java.util.Collection)
kotlinx.coroutines.CompletableDeferredKt: boolean completeWith(kotlinx.coroutines.CompletableDeferred,java.lang.Object)
kotlin.sequences.SubSequence: int access$getEndIndex$p(kotlin.sequences.SubSequence)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.jvm.internal.LongCompanionObject: void getSIZE_BITS$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(boolean[],java.util.Comparator)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceIndexedOrNull(java.lang.Object[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow onCompletion(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: OnUndeliveredElementKt$bindCancellationFun$1(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
kotlin.collections.MapsKt___MapsJvmKt: java.util.Map$Entry maxWith(java.util.Map,java.util.Comparator)
kotlin.jvm.internal.PrimitiveSpreadBuilder: void addSpread(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBefore$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.jvm.internal.LongSpreadBuilder: int getSize(java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: void getName$annotations(java.nio.file.Path)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character firstOrNull(char[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.ListBuilder$Itr: java.lang.Object next()
kotlin.collections.CollectionsKt___CollectionsKt: float maxOf(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.random.Random$Default$Serialized: java.lang.Object readResolve()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel distinctBy(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.collections.AbstractList$ListIteratorImpl: int nextIndex()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$keys$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList getList()
kotlin.io.LinesSequence$iterator$1: java.lang.Object next()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trim(java.lang.CharSequence,char[])
kotlin.comparisons.UComparisonsKt___UComparisonsKt: UComparisonsKt___UComparisonsKt()
kotlin.collections.ArraysKt___ArraysKt: float[] sliceArray(float[],java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(short[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.sequences.TransformingIndexedSequence$iterator$1: TransformingIndexedSequence$iterator$1(kotlin.sequences.TransformingIndexedSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUInt(kotlin.UInt[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(boolean[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.sequences.FlatteningSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FlatteningSequence)
kotlin.text._OneToManyTitlecaseMappingsKt: java.lang.String titlecaseImpl(char)
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object closed-JP2dKIU(java.lang.Throwable)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
kotlin.ranges.ComparableRange: java.lang.String toString()
kotlin.sequences.TransformingIndexedSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingIndexedSequence)
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfInt(java.lang.Iterable)
kotlin.ranges.URangesKt___URangesKt: int first(kotlin.ranges.UIntProgression)
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny(java.lang.CharSequence,java.util.Collection,int,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte single-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.AbstractList$IteratorImpl: void setIndex(int)
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: java.lang.String toString()
kotlin.collections.AbstractList: java.lang.Object set(int,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task pollGlobalQueues()
kotlin.jvm.internal.ArrayIntIterator: int nextInt()
kotlinx.coroutines.channels.ConflatedBufferedChannel: boolean isConflatedDropOldest()
kotlinx.coroutines.InterruptibleKt: java.lang.Object runInterruptible$default(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlin.io.encoding.Base64: int handlePaddingSymbol(byte[],int,int,int)
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: ChannelsKt__DeprecatedKt$minWith$1(kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.FunctionReference: int hashCode()
kotlin.text.StringsKt___StringsJvmKt: java.lang.Character maxBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ThreadLocalKey: ThreadLocalKey(java.lang.ThreadLocal)
kotlin.collections.ArraysKt___ArraysKt: float single(float[])
kotlinx.coroutines.scheduling.LimitingDispatcher: void execute(java.lang.Runnable)
kotlin.collections.ArraysKt___ArraysKt: byte minOrThrow(byte[])
kotlin.ranges.OpenEndRange$DefaultImpls: boolean contains(kotlin.ranges.OpenEndRange,java.lang.Comparable)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection filterTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object reduceIndexedOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function3)
kotlinx.coroutines.LazyDeferredCoroutine: LazyDeferredCoroutine(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object removeFirstOrNull()
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(char[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringBuilderJVMKt: void set(java.lang.StringBuilder,int,char)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4: java.util.Iterator iterator()
kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte randomOrNull-oSF2wD8(byte[],kotlin.random.Random)
kotlin.text.MatcherMatchResult: java.util.regex.MatchResult getMatchResult()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-c0bezYM(byte[],kotlin.ranges.IntRange)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxWithOrNull(double[],java.util.Comparator)
kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1: SequencesKt___SequencesKt$requireNoNulls$1(kotlin.sequences.Sequence)
kotlin.ranges.UIntProgression: java.lang.String toString()
kotlin.jvm.internal.TypeParameterReference: TypeParameterReference(java.lang.Object,java.lang.String,kotlin.reflect.KVariance,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort elementAtOrNull-nggk6HY(short[],int)
kotlinx.coroutines.flow.StartedLazily$command$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.DelimitedRangesSequence$iterator$1: int getCounter()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
kotlin.time.Duration: int hashCode-impl(long)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)
kotlinx.coroutines.CompletionStateKt: java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImpl: void resumeUndispatchedWithException(kotlinx.coroutines.CoroutineDispatcher,java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.Triple: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: boolean any(char[])
kotlinx.coroutines.channels.BufferedChannel: boolean isRendezvousOrUnlimited()
kotlin.collections.ArraysKt___ArraysKt: int count(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: int[] sortedArray(int[])
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.internal.jdk8.JDK8PlatformImplementations: kotlin.text.MatchGroup getMatchResultNamedGroup(java.util.regex.MatchResult,java.lang.String)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(byte,int)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: short maxOf-5PvTz6A(short,short)
kotlin.text.StringsKt__StringsKt: java.lang.String commonSuffixWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
kotlin.ranges.ULongRange: java.lang.Comparable getEndInclusive()
kotlin.UShortArray: boolean contains(java.lang.Object)
kotlin.jvm.internal.DoubleSpreadBuilder: double[] toArray()
kotlinx.coroutines.channels.ChannelsKt: kotlin.jvm.functions.Function1 consumes(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.ranges.CharRange: java.lang.Comparable getEndExclusive()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: double maxOf(double,double,double)
kotlin.sequences.SequenceBuilderIterator: java.lang.Object next()
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: FlowKt__DelayKt$fixedPeriodTicker$3(long,long,kotlin.coroutines.Continuation)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: kotlin.time.ComparableTimeMark plus-LRDsOJo(long)
kotlinx.coroutines.internal.ThreadState: void restore(kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(float[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
kotlinx.coroutines.CoroutineContextKt: java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext)
kotlin.internal.jdk7.JDK7PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(byte[],int,int)
kotlin.ranges.CharProgression: char getLast()
kotlin.io.encoding.Base64JVMKt: byte[] platformCharsToBytes(kotlin.io.encoding.Base64,java.lang.CharSequence,int,int)
kotlinx.coroutines.internal.DispatchedContinuation: void get_state$kotlinx_coroutines_core$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(short[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: float maxOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOf-gMuBH34(byte[],byte)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receive$suspendImpl(kotlinx.coroutines.channels.BufferedChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.ResumeAwaitOnCompletion: ResumeAwaitOnCompletion(kotlinx.coroutines.CancellableContinuationImpl)
kotlin.collections.builders.MapBuilder: void access$removeKeyAt(kotlin.collections.builders.MapBuilder,int)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy valueOf(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: boolean component3(boolean[])
kotlin.io.path.PathsKt__PathUtilsKt: boolean isSymbolicLink(java.nio.file.Path)
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
kotlin.collections.ArraysKt___ArraysKt: double[] sortedArrayDescending(double[])
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getFAILED$p()
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger shl(java.math.BigInteger,int)
kotlin.time.Duration: void getNanosecondsComponent$annotations()
kotlin.text.StringsKt__StringsJVMKt: int compareTo$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
kotlinx.coroutines.scheduling.TaskContext: void afterTask()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List scanIndexed(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.ranges.UIntProgressionIterator: UIntProgressionIterator(int,int,int)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: ArraysKt___ArraysJvmKt$asList$4(long[])
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.sequences.FilteringSequence$iterator$1: void setNextState(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
kotlin.jvm.internal.ClassReference: void isFinal$annotations()
kotlin.contracts.InvocationKind: InvocationKind(java.lang.String,int)
kotlin.collections.MapsKt___MapsKt: java.lang.Object minOfWithOrNull(java.util.Map,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map build(java.util.Map)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path writeLines$default(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object)
kotlin.concurrent.ThreadsKt: java.lang.Thread thread(boolean,boolean,java.lang.ClassLoader,java.lang.String,int,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1: java.lang.Object invoke(java.lang.Object)
kotlin.UShort: double toDouble-impl(short)
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1: java.util.Iterator sourceIterator()
kotlinx.coroutines.flow.FlowKt: java.lang.Object stateIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletedWithCancellation: int hashCode()
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.time.Duration$Companion: long getINFINITE-UwyO8pc()
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
kotlin.ranges.OpenEndFloatRange: java.lang.String toString()
kotlin.reflect.KFunction: boolean isInline()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEach-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.Intrinsics: void throwIllegalArgument(java.lang.String)
kotlin.ranges.OpenEndDoubleRange: OpenEndDoubleRange(double,double)
kotlin.ranges.OpenEndRange: java.lang.Comparable getEndExclusive()
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer maxBy(int[],kotlin.jvm.functions.Function1)
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget[] values()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow[])
kotlin.collections.TypeAliasesKt: void HashSet$annotations()
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: void onClosedHasNextNoWaiterSuspend()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ranges.IntRange getIndices-rL5Bavg(short[])
kotlinx.coroutines.EventLoopImplBase: long processNextEvent()
kotlinx.coroutines.scheduling.DefaultScheduler: DefaultScheduler()
kotlinx.coroutines.internal.ScopeCoroutine: boolean isScopedCoroutine()
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(char[],int)
kotlinx.coroutines.Job: java.lang.Object join(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: ChannelsKt__DeprecatedKt$take$1(int,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.jvm.internal.TypeIntrinsics: int getFunctionArity(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object first(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],java.lang.Iterable)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: float minOf(float,float)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.ByteSpreadBuilder: int getSize(java.lang.Object)
kotlin.InitializedLazyImpl: boolean isInitialized()
kotlin.collections.ArraysKt___ArraysKt: float maxOf(short[],kotlin.jvm.functions.Function1)
kotlin.collections.MutableMapWithDefaultImpl: void clear()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(long[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object)
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode nextOrIfClosed(kotlin.jvm.functions.Function0)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path copyTo$default(java.nio.file.Path,java.nio.file.Path,boolean,int,java.lang.Object)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object access$getInternalResult$p(kotlinx.coroutines.selects.SelectImplementation)
kotlin.collections.ArraysKt___ArraysKt$withIndex$2: java.lang.Object invoke()
kotlin.collections.ArraysKt___ArraysKt: float[] sortedArray(float[])
kotlin.collections.ArraysKt___ArraysKt: byte component5(byte[])
kotlin.sequences.MergingSequence: java.util.Iterator iterator()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$processResultSelectSend(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: char random(kotlin.ranges.CharRange,kotlin.random.Random)
kotlin.UShort: boolean equals-impl0(short,short)
kotlinx.coroutines.JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult box-impl(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String replace(java.lang.CharSequence,kotlin.text.Regex,java.lang.String)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map aggregateTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function4)
kotlin.UInt: int times-xj2QHRw(int,short)
kotlin.ranges.UIntProgressionIterator: int next-pVg5ArA()
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Float max(kotlin.sequences.Sequence)
kotlin.time.MonotonicTimeSource: long markNow-z9LOYto()
kotlinx.coroutines.channels.ActorScope: kotlinx.coroutines.channels.Channel getChannel()
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: FlowKt__EmittersKt$unsafeTransform$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(long[],long)
kotlin.jvm.internal.FloatCompanionObject: void getPOSITIVE_INFINITY$annotations()
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(java.lang.Object[])
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorResume(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean remove(java.util.Collection,java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: kotlinx.coroutines.debug.internal.StackTraceFrame getFrame()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(double[],kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathUtilsKt: void visitFileTree$default(java.nio.file.Path,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object minOf(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Comparator)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List shuffled(java.lang.Iterable,kotlin.random.Random)
kotlin.sequences.TakeWhileSequence$iterator$1: int getNextState()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow callbackFlow(kotlin.jvm.functions.Function2)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
kotlin.jvm.internal.Intrinsics: void throwIllegalArgument()
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(float[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1: FlowKt__ZipKt$nullArrayFactory$1()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.lang.Object getImpl(java.lang.Object)
kotlinx.coroutines.AbstractTimeSourceKt: void setTimeSource(kotlinx.coroutines.AbstractTimeSource)
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext getContext()
kotlin.time.TimeMark: long elapsedNow-UwyO8pc()
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object getPeekedValueLockedAt(long)
kotlinx.coroutines.channels.BroadcastKt$broadcast$1: void invoke(java.lang.Throwable)
kotlinx.coroutines.GlobalScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
kotlinx.coroutines.channels.BroadcastChannelImpl: void registerSelectForSend(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ULong: kotlin.ranges.ULongRange rangeUntil-VKZWuLQ(long,long)
kotlin.sequences.TakeSequence: kotlin.sequences.Sequence drop(int)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
kotlin.time.TimeMark: kotlin.time.TimeMark plus-LRDsOJo(long)
kotlin.jvm.internal.DoubleCompanionObject: double getMAX_VALUE()
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)
kotlin.sequences.MergingSequence$iterator$1: boolean hasNext()
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValuesByImpl$ComparisonsKt__ComparisonsKt(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1[])
kotlinx.coroutines.flow.internal.FlowCoroutineKt: java.lang.Object flowScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.io.path.FileVisitorBuilderImpl: void checkNotDefined(java.lang.Object,java.lang.String)
kotlin.reflect.ParameterizedTypeImpl: java.lang.String toString()
kotlinx.coroutines.JobKt: void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlin.time.DurationKt: void getDays$annotations(double)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.ranges.LongRange)
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch(java.util.List,java.lang.Comparable,int,int)
kotlin.ranges.ClosedFloatingPointRange$DefaultImpls: boolean isEmpty(kotlin.ranges.ClosedFloatingPointRange)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],boolean[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ScopeCoroutine: void afterCompletion(java.lang.Object)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
kotlin.text.StringsKt__IndentKt: int indentWidth$StringsKt__IndentKt(java.lang.String)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)
kotlin.collections.ArrayDeque$Companion: ArrayDeque$Companion()
kotlin.text.UStringsKt: java.lang.String toString-JSWoG40(long,int)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(int[])
kotlin.jvm.jdk8.JvmRepeatableKt: void JvmRepeatable$annotations()
kotlinx.coroutines.selects.SelectBuilderImpl: SelectBuilderImpl(kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core()
kotlin.collections.ArraysKt___ArraysKt: long maxOrThrow(long[])
kotlinx.coroutines.flow.ReadonlySharedFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.CharIterator iterator(char[])
kotlin.collections.ArraysKt___ArraysKt: int count(boolean[])
kotlin.collections.ArraysKt___ArraysKt: char component3(char[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: ChannelsKt__DeprecatedKt$toCollection$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadSafeHeap: void addImpl(kotlinx.coroutines.internal.ThreadSafeHeapNode)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlinx.coroutines.channels.ChannelSegment: void setState$kotlinx_coroutines_core(int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object fold-zi1B2BA(int[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.math.MathKt__MathJVMKt: double withSign(double,int)
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.random.Random$Default: double nextDouble(double)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object singleOrNull(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(boolean[],boolean)
kotlin.time.Duration$Companion: void getHours-UwyO8pc$annotations(double)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.SetsKt__SetsKt: java.util.LinkedHashSet linkedSetOf(java.lang.Object[])
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object trySendImpl-Mj0NB7M(java.lang.Object,boolean)
kotlinx.coroutines.JobSupport: boolean isScopedCoroutine()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
kotlinx.coroutines.AbstractCoroutine: void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.Triple: java.lang.Object getThird()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(long[])
kotlin.reflect.KParameter: java.lang.String getName()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence withIndex(kotlin.sequences.Sequence)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void build(kotlinx.coroutines.Job,java.util.Map,java.lang.StringBuilder,java.lang.String)
kotlin.time.Duration: void getSecondsComponent$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] toLongArray-QwZRm1k(long[])
kotlin.sequences.TakeSequence$iterator$1: int getLeft()
kotlin.reflect.KTypeProjection$Companion: void getStar$annotations()
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt: SequencesKt()
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(int[])
kotlin.UNumbersKt: int rotateLeft-V7xB4Y4(int,int)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8(long[])
kotlinx.coroutines.flow.StartedWhileSubscribed: boolean equals(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: DebugProbesImpl$CoroutineOwner(kotlin.coroutines.Continuation,kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)
kotlinx.coroutines.flow.SharedFlowImpl: void dropOldestLocked()
kotlin.random.jdk8.PlatformThreadLocalRandom: PlatformThreadLocalRandom()
kotlinx.coroutines.selects.SelectImplementation: void invoke(kotlinx.coroutines.selects.SelectClause2,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
kotlinx.coroutines.JobKt: boolean cancel$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: boolean contains(short)
kotlin.ULong: void getData$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float minOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__CountKt$count$2: FlowKt__CountKt$count$2(kotlin.jvm.internal.Ref$IntRef)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float firstOrNull(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer reduceIndexedOrNull(int[],kotlin.jvm.functions.Function3)
kotlin.ranges.ULongProgression$Companion: kotlin.ranges.ULongProgression fromClosedRange-7ftBX0g(long,long,long)
kotlinx.coroutines.selects.SelectKt: boolean tryResume(kotlinx.coroutines.CancellableContinuation,kotlin.jvm.functions.Function1)
kotlin.text.CharDirectionality: int getValue()
kotlin.jvm.internal.ArrayBooleanIterator: boolean hasNext()
kotlinx.coroutines.flow.internal.NopCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1: FlowKt__DelayKt$sample$2$values$1$1(kotlinx.coroutines.channels.ProducerScope)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double singleOrNull(double[])
kotlinx.coroutines.EventLoopKt: void platformAutoreleasePool(kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4: java.util.Iterator iterator()
kotlin.io.path.PathTreeWalk: java.nio.file.LinkOption[] getLinkOptions()
kotlinx.coroutines.AwaitKt$joinAll$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getIndices-rL5Bavg$annotations(short[])
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.DisposableHandle disposeOnCompletion(kotlinx.coroutines.Job,kotlinx.coroutines.DisposableHandle)
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.io.FilesKt__FileReadWriteKt: void forEachBlock(java.io.File,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: UndispatchedContextCollector$emitRef$1(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.coroutines.jvm.internal.CompletedContinuation: kotlin.coroutines.CoroutineContext getContext()
kotlin.collections.builders.ListBuilder: int access$getOffset$p(kotlin.collections.builders.ListBuilder)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(java.lang.Comparable[])
kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object getValueOrNull()
androidx.appcompat.widget.SearchView: int getImeOptions()
kotlinx.coroutines.DefaultExecutor: boolean isShutDown()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,char[])
kotlin.UInt: int constructor-impl(int)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Character boxChar(char)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow sample-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
kotlinx.coroutines.channels.BroadcastChannelImpl: kotlinx.coroutines.channels.ReceiveChannel openSubscription()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
kotlinx.coroutines.selects.SelectClause: kotlin.jvm.functions.Function3 getOnCancellationConstructor()
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.io.ConsoleKt: void println(byte)
kotlinx.coroutines.flow.ChannelAsFlow: void markConsumed()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] toULongArray(long[])
kotlin.collections.MapsKt__MapsKt: java.util.Map mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobNode: boolean isActive()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel take(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.reflect.KTypeProjection: kotlin.reflect.KVariance getVariance()
kotlin.text.MatchGroup: kotlin.text.MatchGroup copy(java.lang.String,kotlin.ranges.IntRange)
kotlin.reflect.KProperty2: java.lang.Object get(java.lang.Object,java.lang.Object)
kotlin.collections.AbstractMap$values$1$iterator$1: AbstractMap$values$1$iterator$1(java.util.Iterator)
kotlin.jdk7.AutoCloseableKt: void closeFinally(java.lang.AutoCloseable,java.lang.Throwable)
kotlinx.coroutines.CoroutineContextKt$foldCopies$1: CoroutineContextKt$foldCopies$1()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3(short[])
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(byte,long)
kotlinx.coroutines.ThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext)
kotlin.coroutines.CombinedContext: boolean contains(kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1: CoroutineContextKt$hasCopyableElements$1()
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: java.lang.Object invoke-WpGqRn0(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ULong: long div-7apg3OU(long,byte)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(boolean[])
kotlin.ULongArray: boolean add(java.lang.Object)
kotlin.reflect.KCallable: kotlin.reflect.KVisibility getVisibility()
kotlin.jvm.internal.TypeParameterReference: void getUpperBounds$annotations()
kotlin.io.path.PathsKt__PathReadWriteKt: java.util.List readLines$default(java.nio.file.Path,java.nio.charset.Charset,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel zip$default(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean close()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
kotlin.KotlinVersion: boolean isAtLeast(int,int)
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object acquireSlowPath(kotlin.coroutines.Continuation)
kotlin.UInt: byte toUByte-w2LRezQ(int)
kotlin.UByte: double toDouble-impl(byte)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(short[],kotlin.random.Random)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task stealWithExclusiveMode(int)
kotlin.io.TextStreamsKt: java.io.StringReader reader(java.lang.String)
kotlin.collections.builders.MapBuilderKeys: int getSize()
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short lastOrNull(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: double elementAtOrElse(double[],int,kotlin.jvm.functions.Function1)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
kotlin.io.path.ExceptionsCollector: java.util.List getCollectedExceptions()
kotlin.io.encoding.Base64: int decodeIntoByteArray$default(kotlin.io.encoding.Base64,byte[],byte[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: FlowKt__ShareKt$launchSharing$1$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.OpDescriptor: kotlinx.coroutines.internal.AtomicOp getAtomicOp()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(short[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int lastIndexOf(java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,kotlin.Pair)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(char[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapIndexedTo-eNpIKz8(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.SharedFlowSlot[] createSlotArray(int)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.debug.internal.HashedWeakRef: HashedWeakRef(java.lang.Object,java.lang.ref.ReferenceQueue)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.util.List,kotlin.jvm.functions.Function1,boolean)
kotlin.collections.ArraysKt___ArraysKt: boolean none(double[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object last(java.util.List,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.PropertyReference0Impl: PropertyReference0Impl(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: FlowKt__ChannelsKt$emitAllImpl$1(kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: void forEachIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobSupport: java.lang.Object cancelMakeCompleting(java.lang.Object)
kotlin.enums.EnumEntriesKt: kotlin.enums.EnumEntries enumEntries(kotlin.jvm.functions.Function0)
kotlin.jvm.internal.MutablePropertyReference2Impl: MutablePropertyReference2Impl(java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.system.TimingKt: long measureNanoTime(kotlin.jvm.functions.Function0)
androidx.core.widget.NestedScrollView: int getScrollRange()
kotlin.text.StringsKt___StringsKt: java.util.Map groupByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
kotlin.RequiresOptIn$Level: kotlin.RequiresOptIn$Level valueOf(java.lang.String)
kotlin.DeprecatedSinceKotlin: java.lang.String errorSince()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int getSize()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.LazyBroadcastCoroutine: LazyBroadcastCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function2)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet: ConcurrentWeakMap$KeyValueSet(kotlinx.coroutines.debug.internal.ConcurrentWeakMap,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,java.util.Map,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ConcurrentKt: void ReentrantLock$annotations()
kotlin.text.StringsKt___StringsKt: java.lang.String takeLast(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(float[],kotlin.jvm.functions.Function2)
kotlin.internal.PlatformImplementations: kotlin.random.Random defaultPlatformRandom()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(char[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.CharCompanionObject: CharCompanionObject()
kotlin.sequences.SequencesKt___SequencesKt: boolean none(kotlin.sequences.Sequence)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow buffer(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.collections.MapsKt___MapsKt: java.lang.Object firstNotNullOf(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(boolean[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.StateFlowKt: java.lang.Object getAndUpdate(kotlinx.coroutines.flow.MutableStateFlow,kotlin.jvm.functions.Function1)
kotlin.text.DelimitedRangesSequence$iterator$1: int getNextSearchIndex()
kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CoroutineDispatcher from(java.util.concurrent.Executor)
kotlinx.coroutines.channels.BufferedChannel: boolean offer(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-HwE9HBo(int[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: float minOf(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(int[])
kotlin.io.path.PathsKt__PathUtilsKt: boolean notExists(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: short minOf(short,short)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(short[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.ULongArray: boolean contains-VKZWuLQ(long)
kotlinx.coroutines.channels.BufferedChannel: void checkSegmentStructureInvariants()
kotlinx.coroutines.JobSupport: void registerSelectForOnJoin(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object singleOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: boolean hasNotPassedNow()
kotlin.UInt: int rem-WZ4Q5Ns(int,int)
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher()
kotlinx.coroutines.JobSupport: boolean isCompletedExceptionally()
kotlin.Deprecated: kotlin.ReplaceWith replaceWith()
kotlinx.coroutines.EventLoopImplBase: boolean enqueueImpl(java.lang.Runnable)
kotlin.ranges.LongRange: void getEndExclusive$annotations()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(double[],kotlin.jvm.functions.Function1)
kotlin.reflect.KClass: java.util.Collection getConstructors()
kotlin.UInt: int xor-WZ4Q5Ns(int,int)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getPOISONED$p()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterNot$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(float[])
kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.flow.internal.NoOpContinuation: NoOpContinuation()
kotlin.collections.ShortIterator: short nextShort()
kotlin.collections.builders.SetBuilder: boolean add(java.lang.Object)
kotlin.time.MonotonicTimeSource: long elapsedFrom-6eNON_k(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean findLast(boolean[],kotlin.jvm.functions.Function1)
kotlin.UInt: long mod-VKZWuLQ(int,long)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(java.lang.Object[],java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: int nativeLastIndexOf(java.lang.String,java.lang.String,int)
kotlin.ranges.ULongRange: boolean isEmpty()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: FlowKt__TransformKt$filterIsInstance$$inlined$filter$1(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.ThreadState: ThreadState(kotlinx.coroutines.Job)
kotlin.collections.AbstractIterator: void computeNext()
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot: kotlin.coroutines.Continuation[] freeLocked(java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection mapIndexedNotNullTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection flatMapIndexedSequenceTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.TaskImpl: java.lang.String toString()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1: void invoke(java.lang.Throwable)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List runningReduceIndexed(java.lang.Iterable,kotlin.jvm.functions.Function3)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-4D70W2E(int[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder insertRange(java.lang.StringBuilder,int,java.lang.CharSequence,int,int)
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.CoroutineExceptionHandler,kotlin.coroutines.CoroutineContext$Key)
kotlin.jvm.internal.PropertyReference0: PropertyReference0()
kotlin.collections.AbstractMap$values$1$iterator$1: void remove()
kotlin.collections.ArraysKt___ArraysJvmKt: double[] plus(double[],double)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double maxOf(long[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.collections.Grouping groupingBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.sequences.SubSequence: java.util.Iterator iterator()
kotlin.time.MonotonicTimeSource: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1: SequencesKt___SequencesKt$flatMap$1()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence plusElement(kotlin.sequences.Sequence,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder deleteAt(java.lang.StringBuilder,int)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer randomOrNull(kotlin.ranges.IntRange,kotlin.random.Random)
kotlin.text.Regex$Serialized$Companion: Regex$Serialized$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(long,byte)
kotlin.sequences.MergingSequence: kotlin.sequences.Sequence access$getSequence1$p(kotlin.sequences.MergingSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-qOZmbk8(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilderValues: boolean removeAll(java.util.Collection)
kotlinx.coroutines.internal.OnDemandAllocatingPool: boolean isClosed(int)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filter(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArrayAsCollection: ArrayAsCollection(java.lang.Object[],boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(boolean[])
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object singleOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long component3-QwZRm1k(long[])
kotlin.ranges.ClosedRange: boolean contains(java.lang.Comparable)
kotlin.jvm.internal.Ref$BooleanRef: Ref$BooleanRef()
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger dec(java.math.BigInteger)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double minOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractList$SubList: int getSize()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sortedDescending-rL5Bavg(short[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List filter(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$2: DebugProbesImpl$dumpCoroutinesSynchronized$2()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] sliceArray(java.lang.Object[],kotlin.ranges.IntRange)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt$splitToSequence$2: java.lang.String invoke(kotlin.ranges.IntRange)
kotlin.TypeAliasesKt: void IllegalStateException$annotations()
kotlinx.coroutines.CancellableContinuationImpl: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
kotlin.jvm.internal.CharSpreadBuilder: int getSize(char[])
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
kotlin.text.StringsKt__StringsKt: boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(char[])
kotlinx.coroutines.ThreadState: void loop$atomicfu(java.util.concurrent.atomic.AtomicIntegerFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlinx.coroutines.ThreadLocalEventLoop: void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
kotlin.UInt: int inc-pVg5ArA(int)
kotlinx.coroutines.internal.OnDemandAllocatingPool: java.lang.String stateRepresentation$kotlinx_coroutines_core()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-Aa5vz7o$default(short[],int,int,int,java.lang.Object)
kotlin.sequences.FilteringSequence$iterator$1: void calcNext()
kotlin.collections.AbstractMap: java.lang.Object remove(java.lang.Object)
kotlinx.coroutines.channels.Channel$DefaultImpls: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull(kotlinx.coroutines.channels.Channel)
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: java.lang.Object access$joinSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation)
kotlin.jvm.internal.DoubleCompanionObject: void getSIZE_BITS$annotations()
kotlin.Result$Failure: int hashCode()
kotlinx.coroutines.flow.internal.ChannelFlow: ChannelFlow(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
kotlin.ranges.RangesKt___RangesKt: double coerceAtMost(double,double)
kotlin.reflect.KMutableProperty0: void set(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigInteger sumOfBigInteger(byte[],kotlin.jvm.functions.Function1)
kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection covariant(kotlin.reflect.KType)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
kotlin.time.AbstractLongTimeSource$LongTimeMark: java.lang.String toString()
kotlin.jvm.internal.ArrayBooleanIterator: ArrayBooleanIterator(boolean[])
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyOfRangeInline(short[],int,int)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int)
kotlinx.coroutines.DefaultExecutor: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel requireNoNulls(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.collections.EmptyIterator: java.lang.Object previous()
kotlin.Result: Result(java.lang.Object)
kotlin.UByteArray: byte[] unbox-impl()
kotlinx.coroutines.AwaitAll$AwaitAllNode: AwaitAll$AwaitAllNode(kotlinx.coroutines.AwaitAll,kotlinx.coroutines.CancellableContinuation)
kotlin.collections.EmptyMap: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence takeWhile(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.time.DurationKt: void getHours$annotations(long)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(byte[],int,int)
kotlin.collections.CollectionsKt__ReversedViewsKt: int access$reverseElementIndex(java.util.List,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void forEach(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: void onReceiveEnqueued()
kotlin.jvm.internal.ClassReference: boolean isInstance(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: void access$prepareSenderForSuspension(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int)
kotlin.io.path.ExceptionsCollector: java.nio.file.Path getPath()
kotlin.UShortKt: short toUShort(short)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-WpHrYlw(byte[],byte,int,int)
kotlinx.coroutines.channels.BroadcastCoroutine: void onCompleted(kotlin.Unit)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
kotlin.UShort: kotlin.ranges.UIntRange rangeUntil-xj2QHRw(short,short)
kotlin.collections.CollectionsKt__MutableCollectionsKt: void plusAssign(java.util.Collection,java.lang.Iterable)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(int,int)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int random(int[])
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: void cancel()
kotlin.io.FileAlreadyExistsException: FileAlreadyExistsException(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: double single(double[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.PropertyReference1: PropertyReference1()
kotlin.collections.UArraySortingKt: int partition-oBK06Vg(int[],int,int)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: byte minOf-Kr8caGY(byte,byte)
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4: java.util.Iterator iterator()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: java.lang.Object getValue()
kotlinx.coroutines.channels.BufferedChannel: int updateCellSend(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean)
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.android.HandlerDispatcherKt: void postFrameCallback(android.view.Choreographer,kotlinx.coroutines.CancellableContinuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(java.lang.Object[])
kotlinx.coroutines.JobSupport$Finishing: boolean isActive()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: FlowKt__ErrorsKt$catchImpl$2$emit$1(kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(int[])
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounce-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int elementAtOrElse-QxvSvLU(int[],int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next(kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfInt(long[],kotlin.jvm.functions.Function1)
kotlin.collections.RingBuffer: void removeFirst(int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
kotlin.ranges.ULongRange: ULongRange(long,long)
kotlin.collections.AbstractMutableCollection: int getSize()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: SequencesKt__SequencesKt$flatMapIndexed$1(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
kotlin.streams.jdk8.StreamsKt: kotlin.sequences.Sequence asSequence(java.util.stream.Stream)
kotlin.collections.ArraysKt___ArraysKt$withIndex$6: java.util.Iterator invoke()
kotlin.UInt: byte toByte-impl(int)
kotlin.collections.CollectionsKt: CollectionsKt()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode getAliveSegmentRight()
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow filter(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: FlowKt__ZipKt$combineTransform$7$2(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.UInt: int inv-pVg5ArA(int)
kotlin.jvm.internal.unsafe.MonitorKt: void monitorEnter(java.lang.Object)
kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt: java.util.Collection getPlatformExceptionHandlers()
kotlin.collections.unsigned.UArraysKt___UArraysKt: float maxOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long maxByOrThrow-U(long[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancellableContinuationImpl: void detachChild$kotlinx_coroutines_core()
kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow: java.lang.Object getValue()
kotlin.text.UStringsKt: long toULong(java.lang.String)
kotlin.PreconditionsKt: PreconditionsKt()
kotlin.NumbersKt__NumbersKt: byte rotateLeft(byte,int)
kotlin.NumbersKt__BigDecimalsKt: NumbersKt__BigDecimalsKt()
kotlin.text.StringsKt__StringsKt: java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence)
kotlinx.coroutines.selects.SelectClause1Impl: SelectClause1Impl(java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(double[])
kotlin.collections.ArraysKt___ArraysKt: boolean contains(int[],int)
kotlinx.coroutines.JobSupport: java.lang.Throwable getExceptionOrNull(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: long coerceAtMost(long,long)
kotlinx.coroutines.flow.SharedFlowImpl: void access$setQueueSize$p(kotlinx.coroutines.flow.SharedFlowImpl,int)
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1: kotlin.jvm.functions.Function1 invoke(kotlinx.coroutines.selects.SelectInstance,java.lang.Object,java.lang.Object)
kotlinx.coroutines.UndispatchedCoroutine: void saveThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double reduceOrNull(double[],kotlin.jvm.functions.Function2)
kotlin.io.encoding.EncodeOutputStream: void flush()
kotlin.coroutines.jvm.internal.DebugMetadataKt: java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
kotlinx.coroutines.selects.SelectImplementation: boolean getInRegistrationPhase()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.LocalVariableReference: kotlin.reflect.KDeclarationContainer getOwner()
kotlin.collections.MapsKt___MapsKt: java.util.Collection mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.time.Duration: long getValue-impl(long)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.io.encoding.Base64Kt: void getBase64UrlEncodeMap$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KCallable computeReflected()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: boolean isRemoved()
kotlin.collections.ArraysKt___ArraysKt: double last(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object trySendDropLatest-Mj0NB7M(java.lang.Object,boolean)
kotlin.text.StringsKt___StringsKt: java.util.Map associateBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.Lazy: java.lang.Object getValue()
kotlin.random.URandomKt: int nextUInt(kotlin.random.Random,kotlin.ranges.UIntRange)
kotlin.collections.builders.MapBuilderEntries: boolean add(java.util.Map$Entry)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
kotlin.ULong: long toULong-s-VKNKU(long)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.String getName(java.nio.file.Path)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(java.lang.Object[])
kotlinx.coroutines.future.FutureKt$asCompletableFuture$2: void invoke(java.lang.Throwable)
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.OpenEndRange,long)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1: FlowKt__EmittersKt$onEmpty$1$1(kotlin.jvm.internal.Ref$BooleanRef,kotlinx.coroutines.flow.FlowCollector)
kotlin.ranges.IntRange: boolean contains(java.lang.Comparable)
kotlinx.coroutines.flow.SharedFlowKt: kotlinx.coroutines.flow.Flow fuseSharedFlow(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.ranges.ClosedFloatRange: java.lang.String toString()
kotlin.io.path.PathTreeWalk$dfsIterator$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.MapsKt___MapsKt: float minOf(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.UInt: kotlin.ranges.UIntRange rangeUntil-WZ4Q5Ns(int,int)
kotlinx.coroutines.flow.ReadonlyStateFlow: java.lang.Object getValue()
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(float[])
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.UShort: short unbox-impl()
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: kotlinx.coroutines.flow.Flow unsafeFlow(kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(char[],char,int,int)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
kotlin.UIntArray: java.lang.Object[] toArray(java.lang.Object[])
kotlin.collections.builders.ListBuilder: boolean isEffectivelyReadOnly()
kotlinx.coroutines.flow.SharedFlowImpl: void getLastReplayedLocked$annotations()
kotlin.text.DelimitedRangesSequence$iterator$1: void calcNext()
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int indexOf(short)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempDirectory(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute[])
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object indexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.SemaphoreImpl$addAcquireToQueue$createNewSegment$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: char first(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(long[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: long toLong(java.lang.String,int)
kotlin.collections.builders.ListBuilder: void clear()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte minBy(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: java.lang.Object invoke(kotlinx.coroutines.flow.SharingCommand,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: int access$getAllocated$p(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core)
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.random.URandomKt: long nextULong-V1Xi4fY(kotlin.random.Random,long)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,java.lang.String)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(java.lang.Class)
kotlinx.coroutines.BlockingCoroutine: java.lang.Object joinBlocking()
kotlin.io.path.PathWalkOption: PathWalkOption(java.lang.String,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort maxByOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ClassReference: java.lang.String getQualifiedName()
kotlin.jvm.internal.TypeIntrinsics: java.util.Map asMutableMap(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfLast-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: short component3(short[])
kotlin.text.CharsKt__CharJVMKt: java.lang.String lowercase(char,java.util.Locale)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: ModuleNameRetriever()
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: int compareTo(java.lang.Object)
kotlinx.coroutines.future.CompletableFutureCoroutine: CompletableFutureCoroutine(kotlin.coroutines.CoroutineContext,java.util.concurrent.CompletableFuture)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Object maxWith(java.lang.Iterable,java.util.Comparator)
kotlin.time.Duration: long getInWholeHours-impl(long)
kotlin.coroutines.CoroutineContextImplKt: kotlin.coroutines.CoroutineContext$Element getPolymorphicElement(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(double[])
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KProperty1$Getter getGetter()
kotlin.time.AdjustedTimeMark: long getAdjustment-UwyO8pc()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,float)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List MutableList(int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.SafeCollector: void exceptionTransparencyViolated(kotlinx.coroutines.flow.internal.DownstreamExceptionContext,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] reversedArray--ajY-9A(int[])
kotlinx.coroutines.flow.internal.ChannelFlow: int getProduceCapacity$kotlinx_coroutines_core()
kotlin.UShort: long floorDiv-VKZWuLQ(short,long)
kotlin.time.DurationKt: long getHours(long)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow distinctUntilChangedBy(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlin.collections.ArrayDeque: java.lang.Object removeLastOrNull()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(int[])
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int indexOf(long)
kotlin.text.StringsKt__StringsKt: java.lang.String removeRange(java.lang.String,int,int)
kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String)
kotlin.collections.CollectionsKt__MutableCollectionsKt: void minusAssign(java.util.Collection,java.lang.Iterable)
kotlin.UShort: java.lang.String toString()
kotlin.collections.ArrayAsCollection: java.lang.Object[] getValues()
kotlin.collections.ArraysKt___ArraysKt: float single(float[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List dropWhile(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$zip$1: SequencesKt___SequencesKt$zip$1()
kotlin.collections.MapsKt__MapsKt: void plusAssign(java.util.Map,java.util.Map)
kotlin.collections.MapsKt__MapWithDefaultKt: java.util.Map withDefaultMutable(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9: java.util.Iterator iterator()
kotlin.CharCodeJVMKt: char Char-xj2QHRw(short)
kotlinx.coroutines.internal.DispatchedContinuationKt: boolean yieldUndispatched(kotlinx.coroutines.internal.DispatchedContinuation)
kotlin.collections.AbstractCollection: boolean retainAll(java.util.Collection)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1: java.lang.Object emit(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.CollectionsKt__ReversedViewsKt: int reverseElementIndex$CollectionsKt__ReversedViewsKt(java.util.List,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(char[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: boolean endsWith(java.lang.CharSequence,char,boolean)
kotlin.collections.MapsKt__MapsKt: java.util.Map buildMap(kotlin.jvm.functions.Function1)
kotlin.UShortArray: boolean isEmpty-impl(short[])
kotlin.collections.builders.MapBuilder$Itr: boolean hasNext()
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequenceBuilderIterator: java.lang.Object nextNotReady()
kotlin.ULongKt: long toULong(short)
kotlin.reflect.GenericArrayTypeImpl: GenericArrayTypeImpl(java.lang.reflect.Type)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object findLast(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.Job SupervisorJob(kotlinx.coroutines.Job)
kotlinx.coroutines.DispatchedTask: void run()
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilder$EntriesItr entriesIterator$kotlin_stdlib()
kotlin.DeprecatedSinceKotlin: java.lang.String hiddenSince()
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.text.Regex$findAll$2: java.lang.Object invoke(java.lang.Object)
kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.lang.Object initialValue()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateWithTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: DebugCoroutineInfo(kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(short[],int)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1: java.util.Iterator invoke()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong reduceIndexedOrNull-z1zDJgo(long[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: ChannelsKt__DeprecatedKt$toChannel$1(kotlin.coroutines.Continuation)
kotlin.io.LinesSequence: LinesSequence(java.io.BufferedReader)
kotlinx.coroutines.CancellableContinuationKt: kotlinx.coroutines.CancellableContinuationImpl getOrCreateCancellableContinuation(kotlin.coroutines.Continuation)
kotlin.ranges.LongProgressionIterator: long getStep()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: int compare(java.lang.Object,java.lang.Object)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.ArraysKt__ArraysJVMKt: java.lang.String toString(byte[],java.nio.charset.Charset)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(float[],java.lang.Iterable)
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String getLastObservedThreadState()
kotlinx.coroutines.channels.BufferedChannel: void markClosed()
kotlin.UShortArray: boolean removeAll(java.util.Collection)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object minOf(java.lang.Object,java.lang.Object[],java.util.Comparator)
kotlin.jvm.internal.Reflection: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class)
kotlin.UInt: int minus-WZ4Q5Ns(int,int)
kotlin.jvm.internal.DoubleCompanionObject: void getSIZE_BYTES$annotations()
kotlin.io.ConsoleKt: void print(byte)
kotlin.math.MathKt__MathJVMKt: double floor(double)
kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1: SemaphoreImpl$onCancellationRelease$1(kotlinx.coroutines.sync.SemaphoreImpl)
kotlinx.coroutines.internal.CoroutineExceptionHandlerImpl_commonKt: void handleUncaughtCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short reduceRightIndexed-aLgx1Fo(short[],kotlin.jvm.functions.Function3)
kotlin.text.StringsKt___StringsKt: java.lang.Object firstNotNullOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$3: java.lang.Long invoke(java.lang.Object)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(long[],long)
kotlin.ranges.LongRange: boolean isEmpty()
kotlin.collections.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.BroadcastCoroutine: boolean offer(java.lang.Object)
kotlin.collections.MapsKt: MapsKt()
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.util.Set getCapturedCoroutines()
kotlin.sequences.TransformingIndexedSequence$iterator$1: void setIndex(int)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
kotlinx.coroutines.internal.DispatchedContinuation: boolean isReusable$kotlinx_coroutines_core()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte reduceRightIndexed-EOyYB1Y(byte[],kotlin.jvm.functions.Function3)
kotlin.collections.builders.MapBuilder$Itr: kotlin.collections.builders.MapBuilder getMap$kotlin_stdlib()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: void removeCleanedAt(int)
kotlin.collections.ArraysKt___ArraysKt: char[] reversedArray(char[])
kotlin.jvm.internal.PropertyReference2Impl: PropertyReference2Impl(java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consume(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1)
kotlin.ranges.UIntRange$Companion: UIntRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float minOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.reflect.KCallable: java.util.List getTypeParameters()
kotlin.text.Regex: java.lang.Object writeReplace()
kotlinx.coroutines.channels.BroadcastChannel: void cancel(java.util.concurrent.CancellationException)
kotlin.UShortArray: short[] unbox-impl()
kotlinx.coroutines.flow.FlowKt__ErrorsKt: kotlinx.coroutines.flow.Flow catch(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.ConflatedBufferedChannel: ConflatedBufferedChannel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.debug.internal.DebuggerInfo: java.util.List getLastObservedStackTrace()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(long[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.ListBuilder$Itr: int previousIndex()
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(char[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double sum(double[])
kotlin.comparisons.ReversedComparator: java.util.Comparator reversed()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.ranges.IntRange)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher blocking$default(kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(byte[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object receive(kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder: int access$getLength$p(kotlin.collections.builders.MapBuilder)
kotlin.collections.AbstractMap: int hashCode()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] onEach-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.UInt: int compareTo-WZ4Q5Ns(int)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(int[])
kotlin.text.StringsKt__StringsJVMKt: boolean contentEquals(java.lang.String,java.lang.StringBuffer)
kotlin.collections.AbstractCollection: boolean containsAll(java.util.Collection)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
kotlinx.coroutines.CancellableContinuationImpl: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
kotlin.time.DurationKt: void getMicroseconds$annotations(int)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void setEnableCreationStackTraces$kotlinx_coroutines_core(boolean)
kotlin.ranges.ClosedFloatRange: boolean isEmpty()
kotlin.Pair: java.lang.Object component2()
kotlin.random.Random: kotlin.random.Random access$getDefaultRandom$cp()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double randomOrNull(double[])
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator compareBy(kotlin.jvm.functions.Function1[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getLastIndex-GBYM_sE$annotations(byte[])
kotlin.io.path.PathRelativizer: PathRelativizer()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: long minOrThrow(long[])
kotlin.UByte: int toUInt-pVg5ArA(byte)
kotlin.text.StringsKt___StringsKt: java.lang.Character minByOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$zip$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Void)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4(int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOf-3uqUaXg(long[],long)
kotlinx.coroutines.scheduling.CoroutineScheduler: void runSafely(kotlinx.coroutines.scheduling.Task)
kotlin.jvm.internal.ArrayShortIterator: short nextShort()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.Object screenFloatValue$StringsKt__StringNumberConversionsJVMKt(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(byte[],int,int)
kotlin.ULong: long mod-VKZWuLQ(long,long)
kotlinx.coroutines.JobSupport: java.lang.Object makeCancelling(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow channelFlow(kotlin.jvm.functions.Function2)
kotlin.UIntKt: int toUInt(float)
kotlinx.coroutines.CompletableDeferred$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.CompletableDeferred,kotlinx.coroutines.Job)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence replaceRange(java.lang.CharSequence,int,int,java.lang.CharSequence)
kotlinx.coroutines.CancellableContinuationImpl: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls: void cancel$default(kotlinx.coroutines.channels.BroadcastChannel,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte findLast-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedSequenceTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(int[])
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.Object fold(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.SharedFlowSlot: boolean allocateLocked(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object component1(java.lang.Object[])
kotlin.UShortArray$Iterator: UShortArray$Iterator(short[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(byte[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: byte[] toByteArray(java.lang.Byte[])
kotlin.collections.ArraysKt___ArraysKt: long[] toLongArray(java.lang.Long[])
kotlin.UShortArray: int hashCode()
kotlin.time.Duration: boolean isNegative-impl(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sortedDescending-GBYM_sE(byte[])
kotlin.collections.IndexedValue: java.lang.String toString()
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal times(java.math.BigDecimal,java.math.BigDecimal)
kotlin.text.StringsKt___StringsKt: java.lang.Appendable filterNotTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder append(java.lang.StringBuilder,char[],int,int)
kotlin.sequences.DropWhileSequence$iterator$1: int getDropState()
kotlin.ULongArray: boolean equals-impl(long[],java.lang.Object)
kotlin.jvm.internal.DoubleCompanionObject: void getPOSITIVE_INFINITY$annotations()
kotlinx.coroutines.JobCancellationException: JobCancellationException(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: ChannelFlowOperator$collectWithContextUndispatched$2(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlin.coroutines.Continuation)
kotlin.jvm.internal.PropertyReference1Impl: PropertyReference1Impl(java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.sync.SemaphoreImpl$addAcquireToQueue$createNewSegment$1: kotlinx.coroutines.sync.SemaphoreSegment invoke(long,kotlinx.coroutines.sync.SemaphoreSegment)
kotlin.ULong: int compareTo-7apg3OU(long,byte)
kotlin.collections.AbstractMap$Companion: AbstractMap$Companion()
kotlin.collections.builders.MapBuilder: int getCapacity$kotlin_stdlib()
kotlin.collections.ArraysKt___ArraysKt: long component1(long[])
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable unwrapImpl(java.lang.Throwable)
kotlinx.coroutines.channels.ChannelResult: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: float reduceRightIndexed(float[],kotlin.jvm.functions.Function3)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List flatMapSequence(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveImpl$default(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,int,java.lang.Object)
kotlin.random.jdk8.PlatformThreadLocalRandom: long nextLong(long)
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
kotlin.collections.builders.MapBuilderEntries: int getSize()
kotlin.collections.AbstractMap$keys$1: int getSize()
kotlin.ranges.ULongProgression: long getFirst-s-VKNKU()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLastWhile-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Iterable withIndex--ajY-9A(int[])
kotlin.jvm.internal.TypeParameterReference$Companion: TypeParameterReference$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.NumbersKt__NumbersJVMKt: long rotateRight(long,int)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,long,java.lang.String)
kotlin.jvm.internal.Intrinsics: int compare(int,int)
kotlinx.coroutines.DispatcherExecutor: java.lang.String toString()
kotlin.jvm.internal.ClassReference: void isOpen$annotations()
kotlin.sequences.FilteringSequence$iterator$1: FilteringSequence$iterator$1(kotlin.sequences.FilteringSequence)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.Ref$ObjectRef: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.String trimEnd(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterNotTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.TypeAliasesKt: void LinkedHashSet$annotations()
kotlinx.coroutines.TimeoutCoroutine: void run()
kotlin.jvm.internal.ClassReference: boolean isInner()
kotlin.ArrayIntrinsicsKt: java.lang.Object[] emptyArray()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigInteger sumOfBigInteger(short[],kotlin.jvm.functions.Function1)
kotlin.InitializedLazyImpl: java.lang.Object getValue()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: float maxOf(float,float[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object count(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2: int compare(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ArrayIterator: void remove()
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: ModuleNameRetriever$Cache(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
kotlin.collections.ArraysKt___ArraysKt: int component2(int[])
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
kotlin.collections.ArraysKt___ArraysKt: float getOrElse(float[],int,kotlin.jvm.functions.Function1)
kotlin.UShort: long rem-VKZWuLQ(short,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte firstOrNull-GBYM_sE(byte[])
kotlin.UByte: short toUShort-Mh2AYeg(byte)
kotlin.time.Duration: void appendFractional-impl(long,java.lang.StringBuilder,int,int,int,java.lang.String,boolean)
kotlinx.coroutines.flow.internal.StackFrameContinuation: StackFrameContinuation(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ChannelResult: java.lang.Object constructor-impl(java.lang.Object)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1: java.nio.file.FileVisitResult invoke(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
kotlin.time.Duration: void getHoursComponent$annotations()
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
kotlin.time.Duration: boolean equals-impl(long,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.time.Duration: long access$getINFINITE$cp()
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long elapsedNow-UwyO8pc(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],java.lang.Iterable)
kotlin.text.CharsKt__CharJVMKt: int checkRadix(int)
kotlin.collections.builders.MapBuilder: java.util.Set getEntries()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,char,java.lang.String)
kotlin.collections.EmptySet: boolean add(java.lang.Object)
kotlin.jvm.JvmClassMappingKt: kotlin.reflect.KClass getAnnotationClass(java.lang.annotation.Annotation)
kotlinx.coroutines.sync.SemaphoreImpl: void coerceAvailablePermitsAtMaximum()
kotlin.coroutines.jvm.internal.Boxing: java.lang.Double boxDouble(double)
kotlin.collections.ArraysKt___ArraysKt: byte reduceRight(byte[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short single-rL5Bavg(short[])
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int getIndex()
kotlin.text.RegexOption: int getValue()
kotlin.jvm.optionals.OptionalsKt: java.util.Collection toCollection(java.util.Optional,java.util.Collection)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType typeOf(java.lang.Class)
kotlin.sequences.GeneratorSequence$iterator$1: void setNextItem(java.lang.Object)
kotlin.sequences.USequencesKt___USequencesKt: int sumOfUInt(kotlin.sequences.Sequence)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] copyInto-FUQE5sA$default(byte[],byte[],int,int,int,int,java.lang.Object)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: short maxOf-VKSA0NQ(short,short,short)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace(java.lang.String,char,char,boolean)
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int,long,long,java.lang.Object)
kotlinx.coroutines.channels.TickerMode: TickerMode(java.lang.String,int)
kotlin.jvm.internal.TypeReference: java.lang.String asString(boolean)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence drop(kotlin.sequences.Sequence,int)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path)
kotlin.ranges.IntRange: void getEndExclusive$annotations()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
kotlinx.coroutines.EventLoopImplBase: boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase)
kotlin.text.RegexOption: int getMask()
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyOfRange(long[],int,int)
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object tryReceive-PtdJZtk()
kotlin.collections.IntIterator: void remove()
kotlinx.coroutines.internal.LocalAtomics_commonKt: int getValue(java.util.concurrent.atomic.AtomicInteger)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilderKeys: boolean isEmpty()
kotlinx.coroutines.CompletedWithCancellation: kotlinx.coroutines.CompletedWithCancellation copy(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.time.Duration$Companion: void getMilliseconds-UwyO8pc$annotations(long)
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: DistinctFlowImpl$collect$2(kotlinx.coroutines.flow.DistinctFlowImpl,kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.internal.ProbesSupportKt: kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: int maxOf-Md2H83M(int,int[])
kotlin.ExceptionsKt__ExceptionsKt: void getSuppressedExceptions$annotations(java.lang.Throwable)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] plus(java.lang.Object[],java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zipWithNext(java.lang.Iterable)
kotlin.math.MathKt__MathJVMKt: double hypot(double,double)
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KProperty$Getter getGetter()
kotlin.collections.ArraysKt___ArraysKt: long last(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.NanoTimeSource: long nanoTime()
kotlin.time.Duration: int getUnitDiscriminator-impl(long)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel take(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task pollBlocking()
kotlin.enums.EnumEntriesList: boolean contains(java.lang.Enum)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.ULongProgression step(kotlin.ranges.ULongProgression,long)
kotlinx.coroutines.internal.ThreadLocalKey: kotlinx.coroutines.internal.ThreadLocalKey copy$default(kotlinx.coroutines.internal.ThreadLocalKey,java.lang.ThreadLocal,int,java.lang.Object)
kotlin.math.MathKt__MathJVMKt: float truncate(float)
kotlin.ranges.OpenEndRange: java.lang.Comparable getStart()
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(short[],kotlin.jvm.functions.Function1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1: FlowKt__TransformKt$withIndex$1$1(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.internal.Ref$IntRef)
kotlinx.coroutines.channels.BufferedChannel$receiveImpl$1: BufferedChannel$receiveImpl$1()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object reduce(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
androidx.work.impl.foreground.SystemForegroundService: SystemForegroundService()
kotlin.collections.EmptyIterator: void add(java.lang.Void)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: java.lang.Object invoke(kotlin.Unit,kotlin.coroutines.Continuation)
kotlin.collections.MapsKt___MapsKt: void forEach(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelResult: boolean equals-impl0(java.lang.Object,java.lang.Object)
kotlinx.coroutines.YieldContext: YieldContext()
kotlin.text.MatchGroup: kotlin.text.MatchGroup copy$default(kotlin.text.MatchGroup,java.lang.String,kotlin.ranges.IntRange,int,java.lang.Object)
kotlin.io.ConsoleKt: java.lang.String readln()
kotlin.text.CharsKt__CharJVMKt: int digitOf(char,int)
kotlin.coroutines.jvm.internal.RunSuspend: void resumeWith(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getIN_BUFFER$p()
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: kotlin.time.ComparableTimeMark minus-LRDsOJo(long)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createSymbolicLinkPointingTo(java.nio.file.Path,java.nio.file.Path,java.nio.file.attribute.FileAttribute[])
kotlin.ranges.ULongProgression: boolean equals(java.lang.Object)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal dec(java.math.BigDecimal)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Double maxOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.future.ContinuationHandler: void apply(java.lang.Object,java.lang.Throwable)
kotlin.text.DelimitedRangesSequence$iterator$1: void setCounter(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: short reduceIndexed(short[],kotlin.jvm.functions.Function3)
kotlin.text.RegexOption: RegexOption(java.lang.String,int,int,int)
kotlinx.coroutines.sync.SemaphoreImpl$addAcquireToQueue$createNewSegment$1: SemaphoreImpl$addAcquireToQueue$createNewSegment$1()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow compose(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: double[] plus(double[],java.util.Collection)
kotlin.time.DurationUnitKt: DurationUnitKt()
kotlin.sequences.SequencesKt___SequencesKt$flatMap$2: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.sequences.FilteringSequence: java.util.Iterator iterator()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-d-6D3K8(short[])
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.io.FilesKt__UtilsKt: boolean deleteRecursively(java.io.File)
kotlin.time.DurationKt: void getNanoseconds$annotations(long)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharedFlow asSharedFlow(kotlinx.coroutines.flow.MutableSharedFlow)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(long[],int,int)
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
kotlinx.coroutines.CancellableContinuationImplKt: int getIndex(int)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String format(java.lang.String,java.lang.Object[])
kotlinx.coroutines.internal.ThreadState: ThreadState(kotlin.coroutines.CoroutineContext,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: FlowKt__ZipKt$combineTransform$6(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.UInt: int compareTo-VKZWuLQ(int,long)
kotlin.Result: java.lang.Object getOrNull-impl(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.internal.ProgressionUtilKt: long differenceModulo(long,long,long)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double elementAtOrNull(double[],int)
kotlin.collections.ArraysKt___ArraysKt: short random(short[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.accessibility.AccessibilityNodeInfo)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: PathsKt__PathRecursiveFunctionsKt()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float minWith(float[],java.util.Comparator)
kotlin.ranges.URangesKt___URangesKt: boolean contains-GYNo2lE(kotlin.ranges.ULongRange,kotlin.ULong)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBefore(java.lang.String,char,java.lang.String,java.lang.String)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2: java.util.Iterator invoke()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean elementAt(boolean[],int)
kotlin.jvm.internal.CharCompanionObject: void getMAX_VALUE$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.builders.SetBuilder: java.util.Iterator iterator()
kotlin.io.SerializableKt: void Serializable$annotations()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean isRemoved()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentDeepHashCodeInline(java.lang.Object[])
kotlin.Metadata$DefaultImpls: void xi$annotations()
kotlin.jvm.internal.TypeReference: int hashCode()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-8LME4QE(long[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.future.FutureKt: void setupCancellation(kotlinx.coroutines.Job,java.util.concurrent.CompletableFuture)
kotlin.UnsignedKt: long ulongDivide-eb3DHEI(long,long)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence runningReduceIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function3)
kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult[] values()
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: java.lang.Object invoke(java.lang.Object)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: short minOf-VKSA0NQ(short,short,short)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(java.lang.Object[],int)
kotlin.time.DurationKt: long getMicroseconds(int)
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlin.ULongArray: long[] constructor-impl(int)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Appendable joinTo(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.IntProgression: java.util.Iterator iterator()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
kotlin.collections.UCollectionsKt___UCollectionsKt: short[] toUShortArray(java.util.Collection)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int getSize()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int elementAt-qFRl0hI(int[],int)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(byte[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.BufferedWriter bufferedWriter$default(java.nio.file.Path,java.nio.charset.Charset,int,java.nio.file.OpenOption[],int,java.lang.Object)
kotlin.collections.builders.MapBuilderKeys: boolean retainAll(java.util.Collection)
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UShort maxWith-eOHTfZs(short[],java.util.Comparator)
kotlin.KotlinVersion: int compareTo(kotlin.KotlinVersion)
kotlin.text.StringsKt__StringsJVMKt: byte[] toByteArray$default(java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineId: java.lang.String updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function0 access$getGetInitialValue$p(kotlin.sequences.GeneratorSequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object component5(java.lang.Object[])
kotlin.text.UStringsKt: int toUInt(java.lang.String,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List chunked(java.lang.Iterable,int,kotlin.jvm.functions.Function1)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map foldTo(kotlin.collections.Grouping,java.util.Map,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.net.ConnectivityManagerCompat$Api16Impl: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
kotlin.DeepRecursiveScope: java.lang.Void invoke(kotlin.DeepRecursiveFunction,java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeSurrounding(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1: FlowKt__ZipKt$combine$5$1(kotlinx.coroutines.flow.Flow[])
kotlin.sequences.IndexingSequence$iterator$1: void setIndex(int)
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted getEagerly()
kotlin.jvm.internal.MutablePropertyReference1: MutablePropertyReference1()
kotlin.ranges.ClosedFloatRange: boolean equals(java.lang.Object)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.lang.Object remove(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int first(int[],kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
kotlin.collections.AbstractMutableSet: int size()
kotlin.io.FilesKt__FileReadWriteKt: java.io.InputStreamReader reader(java.io.File,java.nio.charset.Charset)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3: ComparisonsKt__ComparisonsKt$compareBy$3(java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.sequences.MergingSequence: kotlin.sequences.Sequence access$getSequence2$p(kotlin.sequences.MergingSequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object getOrNull(java.lang.Object[],int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set subtract(java.lang.Iterable,java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(byte[])
kotlin.collections.AbstractList: java.util.List subList(int,int)
kotlin.jvm.internal.ClassReference: java.util.Collection getMembers()
kotlin.collections.ArraysKt___ArraysKt$withIndex$9: java.lang.Object invoke()
kotlin.io.path.LinkFollowing: java.nio.file.LinkOption[] toLinkOptions(boolean)
kotlinx.coroutines.selects.SelectImplementation: void invoke(kotlinx.coroutines.selects.SelectClause2,kotlin.jvm.functions.Function2)
kotlin.collections.IndexingIterator: IndexingIterator(java.util.Iterator)
kotlinx.coroutines.scheduling.TaskImpl: void run()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceive()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(java.lang.Comparable[])
kotlinx.coroutines.flow.LintKt: void cancel$default(kotlinx.coroutines.flow.FlowCollector,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValuesBy(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1[])
kotlin.collections.ArraysKt___ArraysKt: int component3(int[])
kotlin.time.TestTimeSource: void plusAssign-LRDsOJo(long)
kotlin.ranges.RangesKt___RangesKt: java.lang.Character lastOrNull(kotlin.ranges.CharProgression)
kotlinx.coroutines.internal.OpDescriptor: java.lang.Object perform(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment findSegmentReceive(long,kotlinx.coroutines.channels.ChannelSegment)
kotlin.collections.ArraysKt___ArraysKt: int sumOfShort(java.lang.Short[])
kotlinx.coroutines.time.TimeKt: java.lang.Object withTimeout(java.time.Duration,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])
kotlin.time.MonoTimeSourceKt: void ValueTimeMarkReading$annotations()
kotlin.collections.ArrayDeque: java.lang.Object removeLast()
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection valueOf(java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: byte[] toByteArray(java.util.Collection)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List takeWhile(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(java.lang.Integer[])
kotlin.collections.CollectionsKt___CollectionsKt: double sumOfDouble(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.sync.Mutex Mutex$default(boolean,int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Iterable requireNoNulls(java.lang.Iterable)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long plus-LRDsOJo(long,long)
kotlin.io.ConsoleKt: void print(int)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: kotlinx.coroutines.flow.Flow consumeAsFlow(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAtOrElse(java.lang.Iterable,int,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduce-xzaTVY8(short[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.Metadata$DefaultImpls: void pn$annotations()
kotlin.text.StringsKt___StringsKt: char single(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: java.lang.Object get(int)
kotlin.ranges.CharRange: java.lang.Comparable getStart()
kotlinx.coroutines.scheduling.Task: Task(long,kotlinx.coroutines.scheduling.TaskContext)
kotlin.jvm.internal.DoubleCompanionObject: void getNEGATIVE_INFINITY$annotations()
kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.ExecutorCoroutineDispatcher from(java.util.concurrent.ExecutorService)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(byte[])
kotlin.collections.GroupingKt__GroupingKt: java.util.Map eachCountTo(kotlin.collections.Grouping,java.util.Map)
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UInt maxBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.time.AbstractLongTimeSource$LongTimeMark: kotlin.time.TimeMark minus-LRDsOJo(long)
kotlinx.coroutines.flow.LintKt: java.lang.Object toSet(kotlinx.coroutines.flow.SharedFlow,java.util.Set,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(int[],kotlin.ranges.IntRange)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(boolean[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(byte[])
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
kotlinx.coroutines.internal.FastServiceLoaderKt: boolean getANDROID_DETECTED()
kotlin.math.MathKt__MathJVMKt: double nextTowards(double,double)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function7)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlinx.coroutines.selects.SelectOldKt: void resumeUndispatchedWithException(kotlinx.coroutines.CancellableContinuation,java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong minOrNull-QwZRm1k(long[])
kotlinx.coroutines.CompletedWithCancellation: kotlin.jvm.functions.Function1 component2()
kotlin.text.StringsKt___StringsKt: java.lang.Comparable minOf(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,kotlin.Pair[])
kotlin.UShortArray: boolean add(java.lang.Object)
kotlin.text.StringsKt__StringsKt: boolean isNotEmpty(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: void dispatchResume(int)
kotlin.collections.MapsKt__MapsKt: java.util.Map minus(java.util.Map,kotlin.sequences.Sequence)
kotlin.random.URandomKt: int nextUInt-qCasIEU(kotlin.random.Random,int)
kotlin.collections.MapsKt__MapsKt: java.lang.Object component1(java.util.Map$Entry)
kotlinx.coroutines.internal.WeakMapCtorCache: WeakMapCtorCache()
kotlinx.coroutines.channels.ReceiveCatching: ReceiveCatching(kotlinx.coroutines.CancellableContinuationImpl)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(float[],float)
kotlin.reflect.KClass: boolean equals(java.lang.Object)
kotlin.time.Duration: long getInWholeMicroseconds-impl(long)
kotlin.ranges.LongRange: boolean contains(java.lang.Comparable)
kotlin.internal.PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceIn(java.lang.Comparable,kotlin.ranges.ClosedFloatingPointRange)
kotlin.internal.RequireKotlin: java.lang.String message()
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy: ConstraintProxy$BatteryNotLowProxy()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(double[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: float[] onEach(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(double[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(java.util.Iterator)
kotlin.jvm.internal.TypeReference: kotlin.reflect.KClassifier getClassifier()
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$$inlined$sortedBy$1: int compare(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.BroadcastChannel: boolean cancel(java.lang.Throwable)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
kotlinx.coroutines.debug.internal.DebugProbesImpl: int findIndexOfFrame(int,java.lang.StackTraceElement[],java.util.List)
kotlinx.coroutines.flow.ChannelAsFlow: ChannelAsFlow(kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KMutableProperty2$Setter getSetter()
kotlin.collections.builders.MapBuilderValues: int getSize()
kotlin.coroutines.jvm.internal.Boxing: java.lang.Byte boxByte(byte)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object last(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.io.encoding.Base64: kotlin.io.encoding.Base64 access$getUrlSafe$cp()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getSUSPEND_NO_WAITER$p()
kotlin.comparisons.ComparisonsKt: ComparisonsKt()
kotlin.math.MathKt__MathJVMKt: float sign(float)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.IndexingIterator: kotlin.collections.IndexedValue next()
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(float[])
kotlin.collections.builders.MapBuilder: java.lang.Object[] allocateValuesArray()
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object getLastReplayedLocked()
kotlin.sequences.USequencesKt: USequencesKt()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.ranges.ULongProgression: int hashCode()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replaceFirst(java.lang.String,char,char,boolean)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence takeLastWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(char[])
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: char component1(char[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-QwZRm1k(long[])
kotlin.text.StringsKt__StringsJVMKt: java.lang.String format(kotlin.jvm.internal.StringCompanionObject,java.lang.String,java.lang.Object[])
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1: ProduceKt$awaitClose$4$1(kotlinx.coroutines.CancellableContinuation)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearchBy$default(java.util.List,java.lang.Comparable,int,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.String toString(int,int)
kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow: SubscriptionCountStateFlow(int)
kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double minOf(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1(java.lang.Object[])
kotlin.collections.MapsKt__MapsKt: java.util.Iterator mutableIterator(java.util.Map)
kotlin.random.RandomKt: void checkRangeBounds(long,long)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onEmpty(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt: java.lang.Object fold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int reduceIndexed-D40WMg8(int[],kotlin.jvm.functions.Function3)
kotlin.sequences.SequenceBuilderIterator: java.lang.Object yieldAll(java.util.Iterator,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String intern(java.lang.String)
kotlinx.coroutines.flow.ReadonlyStateFlow: java.util.List getReplayCache()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(float[],int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(java.lang.Comparable[],int,int,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] onEach-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.PropertyReferenceDelegatesKt: java.lang.Object getValue(kotlin.reflect.KProperty0,java.lang.Object,kotlin.reflect.KProperty)
kotlin.io.path.FileVisitorBuilder: void onVisitFileFailed(kotlin.jvm.functions.Function2)
kotlin.collections.MutableMapWithDefaultImpl: java.util.Collection values()
kotlin.jvm.internal.ClassReference: void getSealedSubclasses$annotations()
kotlin.collections.AbstractCollection: java.util.Iterator iterator()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: FlowKt__DelayKt$debounceInternal$1(kotlin.jvm.functions.Function1,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List scan(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLastWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.internal.PlatformImplementationsKt: java.lang.Object castToBaseType(java.lang.Object)
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry minWithOrThrow(java.util.Map,java.util.Comparator)
kotlin.io.FilePathComponents: java.lang.String getRootName()
kotlin.jvm.internal.TypeReference: java.lang.String getArrayClassName(java.lang.Class)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte singleOrNull-GBYM_sE(byte[])
kotlin.text.StringsKt___StringsKt: java.util.List runningReduce(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int last-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short maxOrNull(short[])
kotlin.collections.ArraysKt___ArraysKt: boolean contains(boolean[],boolean)
kotlin.NumbersKt__FloorDivModKt: long mod(long,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List mapIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2)
kotlin.random.URandomKt: int nextUInt(kotlin.random.Random)
kotlinx.coroutines.ChildHandle$DefaultImpls: void getParent$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float reduceRightIndexedOrNull(float[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState: java.io.File step()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence mapIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.contracts.ContractBuilder: kotlin.contracts.ReturnsNotNull returnsNotNull()
kotlinx.coroutines.JobKt__JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
kotlin.collections.ArraysKt___ArraysKt: boolean[] toBooleanArray(java.lang.Boolean[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow,int)
kotlin.jvm.internal.TypeIntrinsics: java.util.Map$Entry castToMapEntry(java.lang.Object)
kotlin.UIntArray: int size()
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl: void enqueueLocked(java.lang.Object)
kotlin.ranges.UIntRange: int getEndInclusive-pVg5ArA()
kotlin.ULong: kotlin.ULong box-impl(long)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
kotlin.collections.ArraysKt___ArraysKt$withIndex$2: java.util.Iterator invoke()
kotlinx.coroutines.AbstractTimeSource: java.lang.Runnable wrapTask(java.lang.Runnable)
kotlin.jvm.internal.PropertyReference2: PropertyReference2()
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression step(kotlin.ranges.UIntProgression,int)
kotlin.jvm.internal.TypeIntrinsics: java.lang.ClassCastException throwCce(java.lang.ClassCastException)
kotlin.reflect.WildcardTypeImpl: WildcardTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type)
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(char[],char)
kotlinx.coroutines.channels.BufferedChannel$onSend$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.reflect.WildcardTypeImpl$Companion: kotlin.reflect.WildcardTypeImpl getSTAR()
kotlin.math.MathKt__MathJVMKt: float getUlp(float)
kotlin.collections.ArraysKt___ArraysKt: boolean first(boolean[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: short maxOf(short,short[])
kotlin.UByteKt: byte toUByte(byte)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: java.lang.Object fold(kotlin.coroutines.ContinuationInterceptor,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path,java.io.IOException)
kotlin.collections.builders.SerializedCollection: void writeExternal(java.io.ObjectOutput)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(boolean[],kotlin.random.Random)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: java.lang.Double get(int)
kotlin.collections.CollectionsKt__IteratorsJVMKt: java.util.Iterator iterator(java.util.Enumeration)
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1: kotlin.jvm.functions.Function1 invoke(kotlinx.coroutines.selects.SelectInstance,java.lang.Object,java.lang.Object)
kotlin.io.TextStreamsKt: java.lang.String readText(java.net.URL,java.nio.charset.Charset)
kotlin.text.MatchResult$Destructured: java.lang.String component5()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float firstOrNull(float[])
kotlin.UIntArray: java.lang.String toString-impl(int[])
kotlinx.coroutines.CopyableThreadContextElement$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.CopyableThreadContextElement,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder insertRange(java.lang.StringBuilder,int,char[],int,int)
kotlin.text.Regex: kotlin.text.MatchResult matchEntire(java.lang.CharSequence)
kotlinx.coroutines.DefaultExecutor: void acknowledgeShutdownIfNeeded()
kotlin.io.path.PathsKt__PathReadWriteKt: java.lang.String readText(java.nio.file.Path,java.nio.charset.Charset)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
kotlin.time.AbstractLongTimeSource$LongTimeMark: long elapsedNow-UwyO8pc()
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1: FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float min(float[])
kotlin.UInt: boolean equals-impl(int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Iterable withIndex-rL5Bavg(short[])
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: FlowKt__MergeKt$flatMapLatest$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: int sumOfUInt(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(boolean[],boolean)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int indexOf(boolean)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object component3(java.util.List)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer maxByOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLast-nggk6HY(short[],int)
kotlin.jvm.internal.FloatCompanionObject: float getNEGATIVE_INFINITY()
kotlin.collections.SetsKt__SetsKt: java.util.HashSet hashSetOf()
kotlinx.coroutines.Unconfined: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
kotlin.UByteArray: int size()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KCallable computeReflected()
kotlin.collections.ArraysKt___ArraysKt: float reduce(float[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOf-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMapIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2)
kotlin.time.Duration: long getInWholeNanoseconds-impl(long)
kotlinx.coroutines.flow.FlowKt__ShareKt: java.lang.Object stateIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNotNull(java.lang.Object[])
kotlin.sequences.DropWhileSequence$iterator$1: void remove()
kotlin.NumbersKt__NumbersJVMKt: int countLeadingZeroBits(int)
kotlinx.coroutines.channels.BroadcastCoroutine: void cancelInternal(java.lang.Throwable)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment findSegmentSend(long,kotlinx.coroutines.channels.ChannelSegment)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.CancellableContinuationKt: java.lang.Object suspendCancellableCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KMutableProperty0$Setter getSetter()
kotlinx.coroutines.CancellableContinuationImpl: void invokeOnCancellationImpl(java.lang.Object)
kotlin.random.Random$Default: long nextLong()
kotlin.collections.builders.MapBuilderKeys: boolean add(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
kotlin.random.AbstractPlatformRandom: int nextBits(int)
kotlin.UShort: int compareTo-7apg3OU(short,byte)
androidx.work.impl.foreground.SystemForegroundService$Api29Impl: void startForeground(android.app.Service,int,android.app.Notification,int)
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyOfRange(int[],int,int)
kotlin.collections.CollectionsKt__IteratorsKt: void forEach(java.util.Iterator,kotlin.jvm.functions.Function1)
kotlin.DeepRecursiveScope: DeepRecursiveScope(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstNotNullOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.io.FileTreeWalk$FileTreeWalkIterator: java.io.File gotoNext()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api19Impl: java.lang.Object createRangeInfo(int,float,float,float)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryUnpark()
kotlinx.coroutines.channels.BufferedChannelKt: long access$initialBufferEnd(int)
kotlinx.coroutines.DisposableFutureHandle: java.lang.String toString()
kotlin.ranges.RangesKt___RangesKt: short coerceAtLeast(short,short)
kotlin.UByteArray: void getStorage$annotations()
kotlin.text.StringsKt__StringsKt: java.lang.String commonSuffixWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
kotlinx.coroutines.selects.SelectClause1Impl: kotlin.jvm.functions.Function3 getProcessResFunc()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(float[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsJVMKt: char[] toCharArray(java.lang.String,char[],int,int,int)
kotlin.text.Typography: void getRightGuillemete$annotations()
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlin.jvm.functions.Function0 nullArrayFactory$FlowKt__ZipKt()
kotlinx.coroutines.flow.LintKt: java.lang.Object toList(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.Continuation)
kotlin.io.AccessDeniedException: AccessDeniedException(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(long[],long)
kotlin.text.MatchResult$Destructured: kotlin.text.MatchResult getMatch()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map groupByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectOldKt: void resumeUndispatched(kotlinx.coroutines.CancellableContinuation,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(byte[])
kotlin.collections.ReversedList: void clear()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfLong(long[],kotlin.jvm.functions.Function1)
kotlin.text.CharsetsKt: java.nio.charset.Charset charset(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.NumbersKt__FloorDivModKt: int floorDiv(int,short)
kotlin.io.path.PathTreeWalk$bfsIterator$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.UInt: boolean equals-impl0(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(double[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double maxOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(short[])
kotlin.KotlinVersion: KotlinVersion(int,int)
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.io.path.PathTreeWalk: PathTreeWalk(java.nio.file.Path,kotlin.io.path.PathWalkOption[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int getLastIndex-QwZRm1k(long[])
kotlinx.coroutines.NonCancellable: void isActive$annotations()
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object fold(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-q8RuPII(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minWithOrNull(kotlin.sequences.Sequence,java.util.Comparator)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(byte[],byte,int,int)
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner owner(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelIterator$DefaultImpls: java.lang.Object next(kotlinx.coroutines.channels.ChannelIterator,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scanIndexed-bzxtMww(short[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(float[],int)
kotlinx.coroutines.channels.BufferedChannel: void getOnReceiveOrNull$annotations()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ResizableAtomicArray: ResizableAtomicArray(int)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.selects.SelectClause2 getOnSend()
kotlin.collections.builders.ListBuilder: java.util.List subList(int,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfter(java.lang.String,char,java.lang.String,java.lang.String)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: short minOf(short,short[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
kotlin.io.TextStreamsKt: java.io.BufferedWriter buffered$default(java.io.Writer,int,int,java.lang.Object)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
kotlin.text.CharDirectionality: kotlin.Lazy access$getDirectionalityMap$delegate$cp()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence dropWhile(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Object)
kotlin.io.FilesKt__UtilsKt: java.lang.String toRelativeStringOrNull$FilesKt__UtilsKt(java.io.File,java.io.File)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: ArraysKt___ArraysJvmKt$asList$7(boolean[])
kotlin.collections.builders.MapBuilder: boolean containsKey(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.MapsKt__MapsKt: java.util.Map mapKeys(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathUtilsKt: java.util.Set getPosixFilePermissions(java.nio.file.Path,java.nio.file.LinkOption[])
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicLongFieldUpdater access$getReceivers$FU$p()
kotlin.UIntArray: int getSize-impl(int[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ErrorsKt: boolean isSameExceptionAs$FlowKt__ErrorsKt(java.lang.Throwable,java.lang.Throwable)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.util.concurrent.atomic.AtomicReferenceArray access$getKeys$p(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core)
kotlin.random.PlatformRandom: java.util.Random getImpl()
kotlin.collections.builders.ListBuilder: boolean addAll(java.util.Collection)
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.coroutines.cancellation.CancellationExceptionKt: java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: byte random(byte[],kotlin.random.Random)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
kotlin.collections.SetsKt__SetsKt: java.util.Set setOfNotNull(java.lang.Object[])
kotlin.time.Duration$Companion: long getHours-UwyO8pc(long)
kotlin.math.MathKt__MathJVMKt: double cosh(double)
kotlinx.coroutines.JobSupport$onAwaitInternal$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
kotlin.jvm.internal.ArrayIteratorKt: java.util.Iterator iterator(java.lang.Object[])
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.io.FilesKt__FileReadWriteKt: java.io.InputStreamReader reader$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object)
kotlin.Deprecated: java.lang.String message()
kotlin.collections.builders.MapBuilder: void clear()
kotlinx.coroutines.CancellableContinuationImpl: boolean isCancelled()
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression downTo-Kr8caGY(byte,byte)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] copyInto--B0-L2c$default(long[],long[],int,int,int,int,java.lang.Object)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] values()
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.util.Collection filterIsInstanceTo(java.lang.Iterable,java.util.Collection,java.lang.Class)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void sort(java.util.List,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.Channel getChannel()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(short[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1(kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow subscribeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object)
kotlin.UByteKt: byte toUByte(long)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.MapsKt__MapsKt: kotlin.Pair toPair(java.util.Map$Entry)
kotlin.UShort$Companion: UShort$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int getSize()
kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1: void invoke(java.lang.Throwable)
kotlinx.coroutines.future.CompletableFutureCoroutine: void apply(java.lang.Object,java.lang.Throwable)
com.automation.flipkart.service.UltraFastAccessibilityService: UltraFastAccessibilityService()
kotlin.ranges.ClosedDoubleRange: java.lang.Comparable getStart()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consume(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: FlowKt__EmittersKt$unsafeTransform$1$1(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.CharProgression reversed(kotlin.ranges.CharProgression)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel: void onClosedIdempotent()
kotlin.UShort: short inv-Mh2AYeg(short)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(byte[])
kotlin.text.RegexOption: kotlin.text.RegexOption[] values()
kotlinx.coroutines.channels.LazyActorCoroutine: void getOnSend$annotations()
kotlin.time.Duration: java.lang.Object toComponents-impl(long,kotlin.jvm.functions.Function5)
kotlin.ranges.IntProgression: int getLast()
kotlin.collections.ArraysKt___ArraysKt: int[] sliceArray(int[],java.util.Collection)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(char[])
kotlin.ULongArray: boolean contains(java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcher: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.JobSupport: int startInternal(java.lang.Object)
kotlin.UByteArray: void clear()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(double[],java.lang.Iterable)
kotlinx.coroutines.sync.SemaphoreImpl: void release()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(char[])
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key: ExecutorCoroutineDispatcher$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findBlockingTask()
kotlin.jvm.internal.InlineMarker: void afterInlineCall()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short random-s5X_as8(short[],kotlin.random.Random)
kotlin.io.encoding.Base64: int decodeSize(byte[],int,int)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,short)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],byte[])
kotlin.collections.builders.MapBuilder$ValuesItr: MapBuilder$ValuesItr(kotlin.collections.builders.MapBuilder)
kotlinx.coroutines.channels.BufferedChannel: boolean close(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean isAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.TickerChannelsKt: java.lang.Object fixedDelayTicker(long,long,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt__ArraysJVMKt: java.lang.Object[] toTypedArray(java.util.Collection)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(kotlin.jvm.functions.Function0)
kotlinx.coroutines.channels.BufferedChannel: void completeCloseOrCancel()
kotlinx.coroutines.channels.BroadcastChannelImpl: void getValueOrNull$annotations()
kotlin.NumbersKt__FloorDivModKt: double mod(double,float)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence orEmpty(kotlin.sequences.Sequence)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet: boolean add(java.lang.Object)
kotlin.text.StringsKt___StringsKt: int count(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: boolean equals(java.lang.Object)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set buildSetInternal(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyOf(int[])
kotlin.UNumbersKt: int countTrailingZeroBits-VKZWuLQ(long)
kotlinx.coroutines.future.FutureKt$await$2$1: FutureKt$await$2$1(java.util.concurrent.CompletableFuture,kotlinx.coroutines.future.ContinuationHandler)
kotlin.random.Random$Default: long nextLong(long,long)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle-JzugnMA(long[],kotlin.random.Random)
kotlin.collections.builders.ListBuilder: int getSize()
kotlin.UIntArray: int[] unbox-impl()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(byte[])
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.ParentJob$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.ParentJob,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: void cleanWeakRef(kotlinx.coroutines.debug.internal.HashedWeakRef)
kotlin.text.StringsKt___StringsKt: char reduceIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3)
kotlin.collections.UCollectionsKt___UCollectionsKt: int sumOfUInt(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: boolean none(boolean[],kotlin.jvm.functions.Function1)
kotlin.ranges.LongProgression: long getLast()
kotlin.collections.CharIterator: char nextChar()
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(java.lang.Object[],java.lang.Iterable)
kotlin.random.AbstractPlatformRandom: double nextDouble()
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getIndices-GBYM_sE$annotations(byte[])
kotlinx.coroutines.scheduling.SchedulerTimeSource: long nanoTime()
kotlin.collections.MapsKt___MapsKt: kotlin.sequences.Sequence asSequence(java.util.Map)
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] plus(byte[],java.util.Collection)
kotlinx.coroutines.channels.BroadcastChannel: kotlinx.coroutines.channels.ReceiveChannel openSubscription()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int indexOf(java.lang.Object)
kotlin.jvm.internal.PropertyReference: PropertyReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.LazyKt__LazyKt: LazyKt__LazyKt()
kotlinx.coroutines.selects.SelectBuilderImpl: void handleBuilderException(java.lang.Throwable)
kotlin.collections.EmptyMap: int hashCode()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object send$suspendImpl(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.reflect.GenericArrayTypeImpl: java.lang.String toString()
kotlinx.coroutines.channels.ChannelCoroutine: void cancel(java.util.concurrent.CancellationException)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(byte[],kotlin.jvm.functions.Function1)
kotlin.reflect.KTypeProjection$Companion: KTypeProjection$Companion()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: ChannelsKt__DeprecatedKt$takeWhile$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BroadcastChannelImpl: void getValue$annotations()
kotlin.io.FilesKt__UtilsKt: boolean endsWith(java.io.File,java.io.File)
kotlin.NumbersKt__NumbersJVMKt: long toRawBits(double)
kotlin.random.KotlinRandom: int nextInt(int)
kotlin.collections.MutableMapWithDefaultImpl: java.util.Set getKeys()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-uLth9ew(long[])
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: java.lang.Object startCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function3,java.lang.Object,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.TypeReference: java.util.List getAnnotations()
kotlinx.coroutines.flow.SharedFlowImpl: long getHead()
kotlinx.coroutines.CoroutineId: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlin.reflect.KTypeParameter: boolean isReified()
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(char[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(byte[],int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.reflect.KProperty$Accessor: kotlin.reflect.KProperty getProperty()
kotlin.text.StringsKt___StringsKt: java.util.List scanIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.UIntArray: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(double[],java.util.Comparator)
kotlin.text.MatcherMatchResult: java.util.regex.MatchResult access$getMatchResult(kotlin.text.MatcherMatchResult)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Iterable asIterable(java.lang.Iterable)
kotlinx.coroutines.JobCancellationException: java.lang.Throwable createCopy()
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol access$getSTATE_CANCELLED$p()
kotlin.collections.ArrayDeque: java.lang.Object[] testToArray$kotlin_stdlib()
kotlin.jvm.internal.CallableReference: CallableReference()
kotlinx.coroutines.CancellableContinuation$DefaultImpls: java.lang.Object tryResume$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,java.lang.Object,int,java.lang.Object)
kotlinx.coroutines.CompletableDeferredImpl: kotlinx.coroutines.selects.SelectClause1 getOnAwait()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString--ajY-9A(int[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object singleOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: short getOrElse(short[],int,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.util.HashSet toHashSet(kotlin.sequences.Sequence)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: void setLastObservedFrame$kotlinx_coroutines_core(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void updateState(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner,kotlin.coroutines.Continuation,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer minBy(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],int[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String)
kotlin.UShort: int minus-WZ4Q5Ns(short,int)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow mapNotNull(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.reflect.GenericArrayTypeImpl: int hashCode()
kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.util.Map buildMap(int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flattenMerge$default(kotlinx.coroutines.flow.Flow,int,int,java.lang.Object)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: boolean isDirectory$PathsKt__PathRecursiveFunctionsKt(java.nio.file.SecureDirectoryStream,java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.sequences.SequencesKt___SequencesKt: int indexOf(kotlin.sequences.Sequence,java.lang.Object)
kotlin.math.MathKt__MathJVMKt: long roundToLong(float)
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.NumbersKt__NumbersJVMKt: int countTrailingZeroBits(long)
kotlin.collections.builders.ListBuilder: int indexOf(java.lang.Object)
kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.util.List asList-GBYM_sE(byte[])
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt___StringsKt$windowedSequence$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.sync.Mutex: boolean tryLock(java.lang.Object)
kotlinx.coroutines.JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)
kotlin.text.StringsKt___StringsJvmKt: java.lang.Character min(java.lang.CharSequence)
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandler(kotlin.jvm.functions.Function1,java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(long[],int)
kotlin.collections.UArraySortingKt: void sortArray-Aa5vz7o(short[],int,int)
kotlin.ranges.OpenEndFloatRange: java.lang.Comparable getEndExclusive()
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2: SequencesKt__SequencesKt$generateSequence$2(java.lang.Object)
kotlinx.coroutines.CoroutineId: CoroutineId(long)
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3: FlowKt__CollectKt$collect$3(kotlin.jvm.functions.Function2)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt firstOrNull--ajY-9A(int[])
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long elapsedNow-UwyO8pc()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object firstNotNullOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(int[])
kotlin.collections.ArraysKt___ArraysKt$withIndex$7: java.lang.Object invoke()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendBroadcast$kotlinx_coroutines_core(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.DispatchedContinuation: void awaitReusability$kotlinx_coroutines_core()
kotlinx.coroutines.internal.DispatchedContinuationKt: boolean executeUnconfined(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-HwE9HBo(int[],java.lang.Iterable)
kotlin.io.encoding.Base64: byte[] encodeToByteArray$default(kotlin.io.encoding.Base64,byte[],int,int,int,java.lang.Object)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: java.lang.Object next()
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object access$complete(kotlinx.coroutines.selects.SelectImplementation,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void fill(java.util.List,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double max(java.lang.Double[])
kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()
kotlin.time.Duration$Companion: long getMilliseconds-UwyO8pc(long)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List slice(java.util.List,java.lang.Iterable)
kotlin.streams.jdk8.StreamsKt: java.util.stream.Stream asStream(kotlin.sequences.Sequence)
kotlin.ranges.ULongRange: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Object)
kotlin.io.encoding.Base64: int decodeIntoByteArray$default(kotlin.io.encoding.Base64,java.lang.CharSequence,byte[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.internal.OnDemandAllocatingPool: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toCollection(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler: void close()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending--ajY-9A(int[])
kotlin.reflect.KVariance: kotlin.reflect.KVariance valueOf(java.lang.String)
kotlin.ranges.UIntRange: java.lang.Comparable getEndInclusive()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt find-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlin.time.DurationJvmKt: java.lang.String formatToExactDecimals(double,int)
kotlin.math.MathKt__MathJVMKt: double asin(double)
kotlin.random.XorWowRandom: XorWowRandom(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(boolean[],int)
kotlin.time.DurationKt: long getDays(long)
kotlinx.coroutines.JobSupport: java.lang.Throwable getCompletionExceptionOrNull()
kotlin.collections.AbstractSet$Companion: AbstractSet$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List runningFoldIndexed(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.EventLoop: void shutdown()
androidx.appcompat.widget.Toolbar: void setLogo(int)
kotlin.random.Random: float nextFloat()
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(double[],int)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: java.lang.String toString-impl(long)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.time.Duration: int getNanosecondsComponent-impl(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] copyOf-nggk6HY(short[],int)
kotlin.reflect.KCallable: boolean isAbstract()
kotlinx.coroutines.EventLoopKt: long runSingleTaskFromCurrentSystemDispatcher()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean minByOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.time.Duration$Companion: long nanoseconds-UwyO8pc(int)
kotlinx.coroutines.channels.BufferedChannel$SendBroadcast: BufferedChannel$SendBroadcast(kotlinx.coroutines.CancellableContinuation)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
kotlinx.coroutines.internal.OnDemandAllocatingPool: java.util.List close()
kotlin.jvm.internal.IntSpreadBuilder: IntSpreadBuilder(int)
kotlin.DeepRecursiveScopeImpl: DeepRecursiveScopeImpl(kotlin.jvm.functions.Function3,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long reduce-s8dVfGU(long[],kotlin.jvm.functions.Function2)
kotlin.time.Duration: long access$getZERO$cp()
